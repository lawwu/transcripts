
[00:00:00.000 --> 00:00:02.000]   I think you use OBS, right?
[00:00:02.000 --> 00:00:06.280]   Yeah, for this, I don't have OBS. I'm just in stream labs, or
[00:00:06.280 --> 00:00:08.000]   whatever this is, StreamYard. But yeah.
[00:00:08.000 --> 00:00:13.040]   Yeah, I always mess up my live stream in one way or another. So
[00:00:13.040 --> 00:00:15.640]   I have to like wait for those 30 seconds just to make sure
[00:00:15.640 --> 00:00:16.520]   everything's in place.
[00:00:16.520 --> 00:00:21.640]   Fair. I actually use Twitch Studio now. That's part of the
[00:00:21.640 --> 00:00:24.760]   reason why, like going on Twitch now, I don't have to worry about
[00:00:24.760 --> 00:00:29.520]   OBS. Twitch Studio is like genuinely fantastic interface to
[00:00:29.520 --> 00:00:31.880]   stream. It's very similar to like StreamYard.
[00:00:31.880 --> 00:00:36.040]   But gotcha. Awesome. I can hear myself. So for the people
[00:00:36.040 --> 00:00:38.600]   wondering, we were just having a chat and I'll quickly introduced
[00:00:38.600 --> 00:00:43.560]   quickly introduce the professor. The professor also known as the
[00:00:43.560 --> 00:00:48.440]   Zack Muller, that's his Twitter handle, is a MLE at Hugging
[00:00:48.440 --> 00:00:51.360]   Face. He is also one of the core contributors and core
[00:00:51.360 --> 00:00:54.600]   maintainers of Fast.ai. Among other things, he also has a
[00:00:54.600 --> 00:00:58.400]   YouTube channel. He has a fantastic course called Walk
[00:00:58.400 --> 00:01:01.720]   with Fast.ai. And apart from that, I don't even know how many
[00:01:01.720 --> 00:01:04.720]   things he's contributing to. So that's the intro I had for him.
[00:01:04.720 --> 00:01:08.760]   He'd be teaching us how to get started with world's best
[00:01:08.760 --> 00:01:11.280]   framework for deep learning Fast.ai and how can you
[00:01:11.280 --> 00:01:15.320]   contribute to its documentation. Zack, over to you. Thanks.
[00:01:15.320 --> 00:01:16.320]   Thanks for joining us.
[00:01:16.320 --> 00:01:19.440]   Absolutely. Thanks for having me, Seem. I greatly appreciate
[00:01:19.440 --> 00:01:22.400]   it. All right, so let me go ahead and share my screen here
[00:01:22.400 --> 00:01:28.800]   quickly. And we can, yeah, sort of talk about this. So, um, as
[00:01:28.800 --> 00:01:32.840]   hopefully a good chunk of us know, Fast.ai is an excellent
[00:01:32.840 --> 00:01:36.920]   library when it comes to bootstrapping and quickly
[00:01:36.920 --> 00:01:42.280]   building a, you know, a model, train your data set and get it
[00:01:42.280 --> 00:01:46.680]   ready for deployment in PyTorch with minimal lines of code due
[00:01:46.680 --> 00:01:50.840]   to all the wonderful wrapping that it can do and its data
[00:01:50.840 --> 00:01:55.440]   block API and so forth. But one of the common frustrations
[00:01:55.440 --> 00:02:00.280]   behind the Fast.ai library is its documentation. A lot of
[00:02:00.280 --> 00:02:04.320]   people find it confusing, they don't necessarily find that
[00:02:04.320 --> 00:02:07.200]   it's documented like other libraries, for example, inputs
[00:02:07.200 --> 00:02:10.480]   aren't really documented very well, if at all. And the doc
[00:02:10.480 --> 00:02:13.080]   string sometimes don't even make sense as to what's happening in
[00:02:13.080 --> 00:02:18.240]   certain circumstances. And given all this feedback for the last
[00:02:18.360 --> 00:02:23.280]   three months, I have been working towards with a few
[00:02:23.280 --> 00:02:27.000]   members of the community, introducing and integrating
[00:02:27.000 --> 00:02:34.400]   something called documents into nbdev. Now, Jeremy is not a big
[00:02:34.400 --> 00:02:39.960]   fan of sort of whitespace and a bunch of lines and whatnot in
[00:02:39.960 --> 00:02:42.680]   the source code, and especially when he's coding, he doesn't
[00:02:42.680 --> 00:02:48.000]   like repeating himself. And so he wrote this quick proof of
[00:02:48.000 --> 00:02:54.120]   concept called documents. And essentially how this goes, is
[00:02:54.120 --> 00:02:59.440]   you write the comment for how you're documenting a function to
[00:02:59.440 --> 00:03:05.480]   the right of it. And then what documents can go and do is pull
[00:03:05.480 --> 00:03:09.760]   up this, essentially documentation we've written. So
[00:03:09.760 --> 00:03:13.600]   for example, we have add here, where we have obviously a an
[00:03:13.600 --> 00:03:18.440]   integer is our first input, the integers, obviously the type and
[00:03:18.440 --> 00:03:19.280]   the comments.
[00:03:19.280 --> 00:03:20.160]   Could you zoom in a bit?
[00:03:20.160 --> 00:03:23.040]   Yes, absolutely. We can zoom in a bit more.
[00:03:23.040 --> 00:03:25.440]   That's perfect, thank you.
[00:03:25.440 --> 00:03:30.120]   Absolutely. We can even document return types and, you know, say
[00:03:30.120 --> 00:03:33.240]   what is it going to be something commonly done with something
[00:03:33.240 --> 00:03:36.920]   you'd expect out of again, like NumPy, for example, with this
[00:03:36.920 --> 00:03:42.000]   example above. The difference is, you can see that this is
[00:03:42.000 --> 00:03:47.520]   like 12 lines of code that was added. None were added here.
[00:03:47.520 --> 00:03:52.920]   Now bar the three lines of code as each document is done on an
[00:03:52.920 --> 00:03:57.760]   individual line. So we save on whitespace without losing the
[00:03:57.760 --> 00:04:00.920]   readability, because you know, everything is written right next
[00:04:00.920 --> 00:04:05.000]   to each other. And for those of you that have ever done anything
[00:04:05.000 --> 00:04:08.200]   in JavaScript or TypeScript, sometimes this is how you
[00:04:08.200 --> 00:04:11.240]   document things. So it's not like this is a new idea of how
[00:04:11.240 --> 00:04:15.320]   to document. It's just, it looks weird for Python folks, because
[00:04:15.320 --> 00:04:18.040]   we expect everything to be in a docstring. Right?
[00:04:18.040 --> 00:04:21.440]   When did you learn JavaScript or TypeScript? When have you been
[00:04:21.440 --> 00:04:22.720]   doing these things secretly?
[00:04:22.720 --> 00:04:25.840]   No, I had to learn it as part of my university.
[00:04:25.840 --> 00:04:26.680]   Okay.
[00:04:26.680 --> 00:04:30.240]   So I had to take server side and client side programming. Failed
[00:04:30.240 --> 00:04:33.880]   it the first time actually, so I had to retake it. JavaScript is
[00:04:33.880 --> 00:04:38.600]   very difficult for people who are mostly like CS focused. At
[00:04:38.600 --> 00:04:45.320]   least for me, it was. But, so we have like this functionality
[00:04:45.320 --> 00:04:51.240]   here, right? Where we can do this document, but all we had so
[00:04:51.240 --> 00:04:56.120]   far was like getting the docstring in the annotation. We
[00:04:56.120 --> 00:05:02.520]   didn't have a way to actually show the doc. And this was
[00:05:02.760 --> 00:05:10.800]   basically what myself, Kevin B on the forums, Manny, and a
[00:05:10.800 --> 00:05:16.040]   number of other folks in the Discord basically wrote a PR to
[00:05:16.040 --> 00:05:19.800]   make that happen. Because Jeremy was kind of thinking, well, we
[00:05:19.800 --> 00:05:23.360]   might have documents in FastAIV2, but we sort of went,
[00:05:23.360 --> 00:05:26.280]   no, it's really good to have this in FastAIV1. And if we can
[00:05:26.280 --> 00:05:29.960]   get it there, we'll do something. We'll figure out some
[00:05:29.960 --> 00:05:34.160]   way to have it in FastAIV2 because it's important to have
[00:05:34.160 --> 00:05:39.320]   this documentation well. So we merged the PR quite literally
[00:05:39.320 --> 00:05:45.600]   two weeks ago and basically started doing what is now called
[00:05:45.600 --> 00:05:52.240]   the FastAI document sprint. With the wonderful end goal of
[00:05:52.240 --> 00:05:59.280]   having the entire FastAI library documented. Now, the one thing
[00:05:59.280 --> 00:06:02.840]   I haven't shown you is what a document actually looks like.
[00:06:02.840 --> 00:06:09.200]   So I'll like once it's rendered. So we'll give a quick example
[00:06:09.200 --> 00:06:12.440]   later on. First, I'm going to briefly talk about what this
[00:06:12.440 --> 00:06:17.520]   actually is. So I did an introductory stream a few last
[00:06:17.520 --> 00:06:21.760]   week, basically last week at this point, that basically
[00:06:21.760 --> 00:06:26.360]   catches you up. This stream here is going to be a TLDR of that.
[00:06:26.800 --> 00:06:29.880]   All the important bits you need to know, as well as covering
[00:06:29.880 --> 00:06:32.720]   some examples of like, what's your first PR like? How do you
[00:06:32.720 --> 00:06:36.480]   write good documents, and so forth. So get as much resources
[00:06:36.480 --> 00:06:41.600]   as we can to help you succeed. Because the end goal is, we want
[00:06:41.600 --> 00:06:44.280]   you, and yes, I'm pointing at you, every single person
[00:06:44.280 --> 00:06:47.360]   watching this, to make a document and contribute to the
[00:06:47.360 --> 00:06:50.840]   FastA library. We are really trying--
[00:06:50.840 --> 00:06:51.840]   I thought you were talking to me.
[00:06:51.840 --> 00:06:55.400]   I am talking to you as well. You haven't submitted one yet.
[00:06:56.400 --> 00:06:59.200]   I'm just pulling your leg. Guys, I'll be having fun with Zach
[00:06:59.200 --> 00:07:01.840]   because we're good friends. And I can poke fun at him just to
[00:07:01.840 --> 00:07:04.840]   make the live stream a bit more fun. So he doesn't mind me
[00:07:04.840 --> 00:07:08.520]   poking back. He doesn't mind me interrupting. Even if he does,
[00:07:08.520 --> 00:07:11.480]   I'll continue doing it nevertheless. So that's what's
[00:07:11.480 --> 00:07:12.040]   gonna happen.
[00:07:12.040 --> 00:07:14.600]   It's gonna be great. We're having a great time.
[00:07:14.600 --> 00:07:23.440]   So yes, like the end goal is we want you no matter what your
[00:07:23.440 --> 00:07:26.480]   software experience might be, it might even be your first
[00:07:26.480 --> 00:07:30.080]   contribution to open source. We want you to be a part of this.
[00:07:30.080 --> 00:07:37.720]   Because what we've been finding from the feedback is this sprint
[00:07:37.720 --> 00:07:42.560]   has helped a large number of people even just understand the
[00:07:42.560 --> 00:07:45.960]   FastA library a little bit better by documenting one thing.
[00:07:45.960 --> 00:07:49.760]   You know, they learned, oh, this is how this behavior works,
[00:07:49.760 --> 00:07:51.840]   because they go in and, you know, started to investigate the
[00:07:51.840 --> 00:07:54.680]   code, understand how everything's going for one
[00:07:54.680 --> 00:08:00.560]   function. We're not saying, you know, oh, come here, document a
[00:08:00.560 --> 00:08:04.720]   whole notebook, you know, and that's our baseline. No, this is
[00:08:04.720 --> 00:08:08.840]   this is not your job. It's not even my job. I'm volunteering to
[00:08:08.840 --> 00:08:12.000]   do this. You know, we don't want you to say this is going to be
[00:08:12.000 --> 00:08:15.360]   some big commitment, you can submit one PR and God, I'll be
[00:08:15.360 --> 00:08:19.560]   ecstatic. And the nice thing about it, it's not like we're
[00:08:19.560 --> 00:08:23.000]   saying, let's refactor the library, let's, you know,
[00:08:23.000 --> 00:08:26.800]   introduce this new thing. You're just documenting. And
[00:08:26.800 --> 00:08:30.440]   documenting is one of the best ways to make that initial
[00:08:30.440 --> 00:08:34.880]   contribution, because it has immediate impact. The next time
[00:08:34.880 --> 00:08:37.080]   someone goes and visits the documentation for a function,
[00:08:37.080 --> 00:08:39.680]   they're going to see what you did. In the source code, they
[00:08:39.680 --> 00:08:42.120]   might not see it as much, you know, the maintainers do and
[00:08:42.120 --> 00:08:44.680]   people that look in the Git repository, it has an impact.
[00:08:44.680 --> 00:08:49.160]   But what you see is directly shown on a website to everyone
[00:08:49.160 --> 00:08:52.320]   else that goes and searches for help. And you make sure that
[00:08:52.320 --> 00:08:55.400]   someone else's life was made just a little bit easier by
[00:08:55.400 --> 00:09:00.800]   improving the documentation. Now, how is this whole thing
[00:09:00.800 --> 00:09:05.760]   being organized? Because if anyone's followed me on, on
[00:09:05.760 --> 00:09:08.200]   Twitter, you'll notice that I basically said I'm going to be
[00:09:08.200 --> 00:09:12.720]   streaming on Twitch, YouTube, and in the discord at random
[00:09:12.720 --> 00:09:15.760]   moments, and hopefully in order. So how in the world are we
[00:09:15.800 --> 00:09:19.480]   keeping track of everything? Most of the communication will
[00:09:19.480 --> 00:09:22.800]   live in the fast.ai discord. And this is a permanent link. So
[00:09:22.800 --> 00:09:25.640]   I'll go ahead and throw it here in the comments, potentially.
[00:09:25.640 --> 00:09:31.960]   Same, maybe you can if you can get to this. I'll send it over
[00:09:31.960 --> 00:09:32.800]   in private chat for you.
[00:09:32.800 --> 00:09:37.120]   And to find it, all good.
[00:09:37.120 --> 00:09:44.000]   And basically, the way that we have this setup is Jeremy is
[00:09:44.000 --> 00:09:48.520]   sort of taking a hands back approach. Most of the trust is
[00:09:48.520 --> 00:09:52.160]   placed in us to help write documents, we ping him if we
[00:09:52.160 --> 00:09:55.600]   have questions on how something works, whether this format is
[00:09:55.600 --> 00:09:59.080]   good. That was definitely the initial start of the sprint was
[00:09:59.080 --> 00:10:03.880]   very much so this sort of vibe. But we have 10 wonderful senior
[00:10:03.880 --> 00:10:09.920]   members of the community who are basically have said that they
[00:10:09.920 --> 00:10:14.320]   are going to commit to being a mentor for folks. This means
[00:10:14.320 --> 00:10:16.880]   they're going to be the ones reviewing your PRs, they're
[00:10:16.880 --> 00:10:20.320]   going to be the ones that you can ping in in the discord for
[00:10:20.320 --> 00:10:25.000]   help. There's even separate if you go and make a PR, which
[00:10:25.000 --> 00:10:28.040]   we're going to see a little later, two people have to review
[00:10:28.040 --> 00:10:32.040]   your PRs. And so you can just find them in GitHub as well. If
[00:10:32.040 --> 00:10:35.600]   maybe you don't necessarily want to come to the discord. Although
[00:10:36.080 --> 00:10:42.040]   personally, I say you should, but that's just me. I've now a
[00:10:42.040 --> 00:10:45.640]   little bit more on that communication. And sort of how
[00:10:45.640 --> 00:10:54.760]   this is all laid out. Inside the sprint is 45 open issues. That's
[00:10:54.760 --> 00:10:58.600]   horribly long, right? Well, it's for every single one of fast
[00:10:58.600 --> 00:11:01.760]   AI's notebooks. And so if there's a particular notebook
[00:11:01.760 --> 00:11:04.840]   you want to work on, for instance, let's look at one
[00:11:04.840 --> 00:11:09.680]   that's been highly talked in the callback prez, which deals with
[00:11:09.680 --> 00:11:12.720]   like how you get predictions. If you open one of these issues,
[00:11:12.720 --> 00:11:16.400]   you'll notice that it has a label stating roughly what we
[00:11:16.400 --> 00:11:21.200]   expect its difficulty level should be the document progress.
[00:11:21.200 --> 00:11:24.920]   So this is a tick box of what we believe should be documented. So
[00:11:24.920 --> 00:11:29.040]   in this case, this notebook is talking about MC dropout, which
[00:11:29.040 --> 00:11:33.080]   is basically, I want to say when you add dropout to when you're
[00:11:33.080 --> 00:11:35.560]   doing predictions. It's been a hot minute since I've looked at
[00:11:35.560 --> 00:11:38.960]   this stuff, but I believe that is what MC yes, because it's
[00:11:38.960 --> 00:11:43.720]   Monte Carlo. And then here we see, Kieran said that he would
[00:11:43.720 --> 00:11:47.040]   like to work on creating the document for it, we assign it to
[00:11:47.040 --> 00:11:52.080]   him. And then you can either talk here in the GitHub issue or
[00:11:52.080 --> 00:11:55.600]   paying back and forth on the discord. But if we have like a
[00:11:55.600 --> 00:11:59.360]   bigger notebook, then multiple people can sit here and say,
[00:11:59.360 --> 00:12:01.920]   Hey, I want to do this, I want to do the section. And so we're
[00:12:01.920 --> 00:12:04.960]   not stepping over each other's toes, it's kind of organized.
[00:12:04.960 --> 00:12:09.240]   And most importantly, you can sit here, look at these things
[00:12:09.240 --> 00:12:13.760]   and go, okay, callback scheduler requires someone with either
[00:12:13.760 --> 00:12:18.120]   advanced expert or moderate knowledge with Python, FastCore
[00:12:18.120 --> 00:12:23.800]   or fastai. Not quite there yet. So I can go sit here and look at
[00:12:23.800 --> 00:12:27.120]   the beginner and say, Oh, let's tackle this one. Or if you are
[00:12:27.120 --> 00:12:30.280]   someone that's used fastai for quite a while, you can try and
[00:12:30.280 --> 00:12:33.800]   tackle some of the moderate or advanced issues and see if you
[00:12:33.800 --> 00:12:37.520]   can help document and use your specific fastai knowledge for
[00:12:37.520 --> 00:12:42.000]   this. Because what we currently have in the community is a lot
[00:12:42.000 --> 00:12:46.520]   of people who are really good at very specific things. And so
[00:12:46.520 --> 00:12:49.360]   what we want to try and do is leverage their knowledge as best
[00:12:49.360 --> 00:12:53.000]   we can, to write this documentation for everyone else,
[00:12:53.000 --> 00:12:55.680]   because they went through the struggle of how does this work?
[00:12:55.680 --> 00:12:57.720]   How do I get this to work? How do I read this documentation?
[00:12:57.720 --> 00:13:01.640]   Well, so they can directly give this feedback. And even if
[00:13:01.640 --> 00:13:06.600]   you're a beginner, you can absolutely still do this. Now
[00:13:06.600 --> 00:13:11.880]   let's talk about what in the world is a document. And sort of
[00:13:11.880 --> 00:13:17.200]   how do you do that? What does it render like, etc. I have a
[00:13:17.200 --> 00:13:20.520]   stuff, we have a style guide that we've been working on to
[00:13:20.520 --> 00:13:24.160]   try and help everyone come up to speed with how do you document
[00:13:24.160 --> 00:13:27.600]   well, we went through a lot of different variations of what
[00:13:27.600 --> 00:13:32.240]   this looks like, you know, going back and forth with Jeremy for
[00:13:32.240 --> 00:13:35.280]   like, should self be on a new line? Do we even need to
[00:13:35.280 --> 00:13:39.920]   document self? Like, does it need a documentation for it? And
[00:13:39.920 --> 00:13:47.480]   essentially, a document should only be done if it's useful. So
[00:13:47.480 --> 00:13:52.400]   if it's something that is very obvious, or like the naming
[00:13:52.400 --> 00:13:58.920]   invention makes sense, or it's like, self or class, you don't
[00:13:58.920 --> 00:14:02.000]   need a document for this, because it's extremely
[00:14:02.000 --> 00:14:07.040]   straightforward. But for example, you know, when it's not
[00:14:07.040 --> 00:14:11.600]   say, like, again, our addition thing here, then, yeah, maybe
[00:14:11.600 --> 00:14:16.560]   not so much, you know, we should document it. Now, we're going
[00:14:16.560 --> 00:14:18.560]   to use this example, and I'm going to throw it up in a Jupyter
[00:14:18.560 --> 00:14:22.120]   Notebook for us to look at. But let's sort of talk about what
[00:14:22.120 --> 00:14:24.200]   this renders, because I've shown you like documents, this
[00:14:24.200 --> 00:14:27.840]   documents, this document so cool. But I haven't shown you
[00:14:27.840 --> 00:14:30.600]   what that looks like in the documentation. So let's let's
[00:14:30.600 --> 00:14:35.760]   take a look at this. Now, a you're gonna hear me typing
[00:14:35.760 --> 00:14:38.520]   because I want to do this live. And I have a very loud keyboard.
[00:14:38.520 --> 00:14:43.320]   But be all I have to flex your key caps. I know they're like
[00:14:43.320 --> 00:14:46.120]   red switches, but you don't have to What do you mean? They're
[00:14:46.120 --> 00:14:48.960]   they're nice and pretty. Do you not see all my colors? I have to
[00:14:48.960 --> 00:14:56.640]   flex. I'm in a mood. State now. So no more RGB for me. There.
[00:14:56.640 --> 00:15:00.200]   Now I will say in this environment, the only thing I
[00:15:00.200 --> 00:15:05.880]   have run is they've installed fast AI and NBDA for this demo.
[00:15:05.880 --> 00:15:10.560]   Ideally, you want to like, make a PR and fork the GitHub repo
[00:15:10.560 --> 00:15:12.800]   and whatnot. If you have no idea what any of that means I'm
[00:15:12.800 --> 00:15:16.240]   going to go over in a little bit and install it via that we're
[00:15:16.240 --> 00:15:18.640]   actually working on a script to help make everyone's lives
[00:15:18.640 --> 00:15:22.680]   easier as well. So the first thing is we're going to do the
[00:15:22.680 --> 00:15:29.520]   oh, so pet peevable from NBDef show doc import start now to
[00:15:29.520 --> 00:15:33.280]   make everyone's sanity a little nicer. We can also just do show
[00:15:33.280 --> 00:15:38.360]   doc because we only want the show doc function. Now here's
[00:15:38.360 --> 00:15:41.360]   our addition function we had earlier, right? I'll give it a
[00:15:41.360 --> 00:15:46.040]   default so we can see what that's like to we have a could
[00:15:46.040 --> 00:15:51.320]   be an integer or float. Yeah. Honestly, yeah, I'm kind of
[00:15:51.320 --> 00:15:54.760]   surprised by to try that to see why why don't you have an RGB
[00:15:54.760 --> 00:16:00.040]   keyboard? You're like the king of RGB. Explain yourself.
[00:16:00.040 --> 00:16:02.840]   Now you're asking me about that.
[00:16:02.840 --> 00:16:05.480]   Well, it came up in chat.
[00:16:05.480 --> 00:16:10.000]   It has a mood, by the way.
[00:16:10.000 --> 00:16:13.160]   I'm just ah, so he's just being it's destructive for the
[00:16:13.160 --> 00:16:16.480]   labeling the RGB. Yeah. Fair.
[00:16:16.480 --> 00:16:21.280]   Has to be an adult right now. You can't show off his cool
[00:16:21.280 --> 00:16:21.640]   lights.
[00:16:21.640 --> 00:16:25.160]   This is my book channel guys, please come to chai time data
[00:16:25.160 --> 00:16:28.280]   center. I'll show all colors to you. It's a pin video there.
[00:16:28.280 --> 00:16:33.160]   All right, it's now the disco there. It's like the Las Vegas
[00:16:33.160 --> 00:16:33.600]   on there.
[00:16:33.600 --> 00:16:38.360]   It's perfect. Well, add a document here on the return
[00:16:38.360 --> 00:16:43.760]   because that wasn't added in and we'll say some of a and b
[00:16:43.760 --> 00:16:46.160]   right so here we have addition.
[00:16:46.160 --> 00:16:52.400]   If I do show doc, which in fast AI brings up the documentation
[00:16:52.400 --> 00:16:58.160]   essentially there's show doc and doc to mimic doc or to mimic
[00:16:58.160 --> 00:17:03.360]   help. So like if I do show doc here, you'll see that before we
[00:17:03.360 --> 00:17:09.640]   just had this right we had this sort of addition blah blah blah
[00:17:09.640 --> 00:17:13.080]   add two numbers together and that was it. That's all you had
[00:17:13.080 --> 00:17:16.960]   and you had to hope that the doc string was nice and if it
[00:17:16.960 --> 00:17:21.800]   wasn't, then you go investigate the notebook for it and you hope
[00:17:21.800 --> 00:17:25.560]   that the notebook ideally had some sort of extra information
[00:17:25.560 --> 00:17:26.920]   for you to know some tests and whatnot.
[00:17:26.920 --> 00:17:31.600]   Well now instead, we get a beautiful looking table that
[00:17:31.600 --> 00:17:36.520]   says a what the type is if it has a default and if there's any
[00:17:36.520 --> 00:17:40.920]   details about it and what we're now working on slash fixing is
[00:17:40.920 --> 00:17:44.640]   if we reference bits in here, it will actually hotlink to that
[00:17:44.640 --> 00:17:49.280]   documentation as well. And I'll talk more about why that's
[00:17:49.280 --> 00:17:53.000]   important in a second. But this is much more readable, much more
[00:17:53.000 --> 00:17:56.160]   verbose and getting a quick understanding of how everything
[00:17:56.160 --> 00:17:59.880]   is supposed to work without having to repeat ourselves a
[00:17:59.880 --> 00:18:03.640]   whole lot when we're writing function definitions and writing
[00:18:03.640 --> 00:18:08.560]   documentation. And so this whole sprint is designed around this
[00:18:08.560 --> 00:18:16.880]   one thing. Now the next question would be what is good
[00:18:16.880 --> 00:18:20.880]   documentation? What is a good document? Right? Because there
[00:18:20.880 --> 00:18:24.520]   are good documents and there are bad documents. And specifically
[00:18:24.560 --> 00:18:31.240]   it's how you should think about what a user should do to explore
[00:18:31.240 --> 00:18:36.680]   the documentation. So for example, I could say like
[00:18:36.680 --> 00:18:43.120]   bringing up an example of something in the Oh, hey, Kevin,
[00:18:43.120 --> 00:18:45.840]   yeah, I didn't even realize that was you that made the made the
[00:18:45.840 --> 00:18:53.520]   comment there. We could do something like VLS quarks, which
[00:18:53.520 --> 00:19:01.080]   is a dictionary. And in fast.ai typically, what this means is
[00:19:01.080 --> 00:19:05.720]   it's like keyword arguments that could pass to fast.ai's data
[00:19:05.720 --> 00:19:08.520]   loader when you make something. We're not going to bring up the
[00:19:08.520 --> 00:19:11.080]   example showing what that is, but just understand that's what
[00:19:11.080 --> 00:19:11.600]   it does.
[00:19:11.600 --> 00:19:15.040]   Don't you want to add more context because like many people
[00:19:15.040 --> 00:19:18.560]   get like just being around the ecosystem, I know DLS stands for
[00:19:18.560 --> 00:19:21.600]   data loaders, but many people get confused by the fact itself
[00:19:21.600 --> 00:19:25.480]   that that stands for data loaders. Should we be like, I
[00:19:25.480 --> 00:19:28.120]   don't know, maybe adding toxins for that or more variable
[00:19:28.120 --> 00:19:28.960]   definitions?
[00:19:28.960 --> 00:19:32.600]   I'm about to answer your question with an example. Okay,
[00:19:32.600 --> 00:19:35.680]   because this is exactly what this is going to be. Because you
[00:19:35.680 --> 00:19:38.960]   are 100% right. This is very much so a trigger for some
[00:19:38.960 --> 00:19:42.760]   people, because we just have random DLS quarks. And that's
[00:19:42.760 --> 00:19:45.760]   it. That's all you get. And you got to go figure out a what DLS
[00:19:45.760 --> 00:19:47.280]   means be what the heck those quarks mean.
[00:19:47.280 --> 00:19:49.280]   Sorry for jumping in.
[00:19:49.640 --> 00:19:52.720]   Oh, no, absolutely. This is totally fine. I'm here for it.
[00:19:52.720 --> 00:19:58.960]   Call me out on my mess. I need it. Ah, what we can do is make
[00:19:58.960 --> 00:20:00.520]   use of
[00:20:00.520 --> 00:20:07.600]   how nbdev documents things and actually make sure
[00:20:07.600 --> 00:20:15.640]   we're going to very quickly
[00:20:17.320 --> 00:20:19.120]   check. Awesome. Yep.
[00:20:19.120 --> 00:20:23.400]   Doing something live on stream has always gone well.
[00:20:23.400 --> 00:20:27.840]   We just put a fix in for that. So it's actually really good to
[00:20:27.840 --> 00:20:28.320]   have it.
[00:20:28.320 --> 00:20:32.360]   So what we can do is
[00:20:32.360 --> 00:20:38.800]   load, you know, sometimes I have to restart the kernel. Sorry,
[00:20:38.800 --> 00:20:43.560]   kill the notebook and relaunch it just when I reinstalled
[00:20:43.560 --> 00:20:46.160]   something's maybe maybe I'm like doing something stupid.
[00:20:46.680 --> 00:20:47.840]   No, that's how it should be.
[00:20:47.840 --> 00:20:51.640]   You just restarted it, right? For me, I have to like go back,
[00:20:51.640 --> 00:20:55.160]   shut down the Jupyter server, restart it, and then it works.
[00:20:55.160 --> 00:20:59.440]   Oh, no, I never have to do that. That's weird. I've done
[00:20:59.440 --> 00:21:04.440]   something stupid. Oh, gosh. So for example, to bring up, you
[00:21:04.440 --> 00:21:07.400]   know, what same was talking about. So we have data loaders
[00:21:07.400 --> 00:21:12.120]   quarks, right? Now I could sit here. Yes. And 100% say valid
[00:21:12.120 --> 00:21:17.800]   quarks are XYZ ABC 123, you know, yada, yada, yada, and
[00:21:17.800 --> 00:21:21.640]   explain what all that means. That's horribly long. And the
[00:21:21.640 --> 00:21:25.520]   entire point is to keep it on one line. So how can we best
[00:21:25.520 --> 00:21:28.880]   leverage the documentation for folks? Instead, we say
[00:21:28.880 --> 00:21:35.200]   quarks going to data loaders.
[00:21:35.200 --> 00:21:39.800]   I'm gonna say, well, Zach, all you did was just put data loaders
[00:21:39.800 --> 00:21:44.120]   in a tick mark. How does that help me? Well, if this works out
[00:21:44.120 --> 00:21:50.120]   should which doc might add doesn't but what we're working
[00:21:50.120 --> 00:21:56.440]   on, and what it will eventually do is in the documentation
[00:21:56.440 --> 00:22:00.720]   itself in the live documentation, it will bring up a
[00:22:00.720 --> 00:22:07.920]   link to go to data loaders documentation. And so then what
[00:22:07.920 --> 00:22:12.480]   we can do is just say, oh, okay, key words that go to data
[00:22:12.480 --> 00:22:16.320]   loaders. Yes, doing stuff on a live stream has always gone
[00:22:16.320 --> 00:22:20.520]   well, especially when things go mildly according to plan. But
[00:22:20.520 --> 00:22:23.720]   so then what we do is we don't have to sit here and say
[00:22:23.720 --> 00:22:27.920]   necessarily repeating a whole bunch of information. Right?
[00:22:27.920 --> 00:22:33.880]   Because one of Jeremy's big concerns with this was, you
[00:22:33.880 --> 00:22:36.160]   know, we don't want to have to repeat information in the doc
[00:22:36.160 --> 00:22:41.960]   stream because doc documentation is like source code. It can
[00:22:41.960 --> 00:22:46.920]   always be refactored. And it should always be refactored just
[00:22:46.920 --> 00:22:51.240]   like source code is. Now, the more times I explicitly state,
[00:22:51.240 --> 00:23:01.240]   you know, valid quarks are x, y, z, a, b, c, okay, say I
[00:23:01.240 --> 00:23:05.280]   defined this 20 times, all of a sudden, C is no longer a valid
[00:23:05.280 --> 00:23:08.560]   keyword argument. Now I have to go find everywhere I did C and
[00:23:08.560 --> 00:23:13.200]   delete it. Instead, if we leverage the hot linking that
[00:23:13.200 --> 00:23:21.120]   nbdev does, by just saying valid quarks for data loaders, they
[00:23:21.120 --> 00:23:25.400]   can just go look at data loaders to see what all it takes. And
[00:23:25.400 --> 00:23:30.120]   sometimes you'll see something like @delegates, which will also
[00:23:30.120 --> 00:23:34.680]   fill that in for you. But in some cases, we have this. Not
[00:23:34.680 --> 00:23:37.840]   Python magic, don't necessarily worry about that if you have no
[00:23:37.840 --> 00:23:41.040]   idea what a delegates is. That's me going partially too far. So
[00:23:41.040 --> 00:23:46.000]   we're going to bring it back. And so this is how we can sort
[00:23:46.000 --> 00:23:50.120]   of get away with linking documentation efficiently. By
[00:23:50.120 --> 00:23:53.240]   providing a clear path to the user of how to find information
[00:23:53.240 --> 00:23:58.600]   without having to make it horrendously long or difficult to
[00:23:58.600 --> 00:24:02.440]   refactor or review, we can just say, okay, how do we write this
[00:24:02.440 --> 00:24:05.240]   efficiently and effectively to get people the information they
[00:24:05.240 --> 00:24:09.880]   need to know the fastest without making it technical debt for
[00:24:09.880 --> 00:24:14.520]   ourselves later on. And so that is how you write a good
[00:24:14.520 --> 00:24:17.640]   document. And that went much better than my tangent Monday
[00:24:17.640 --> 00:24:22.640]   did. So if there are questions on this, do speak up. Same, you
[00:24:22.640 --> 00:24:25.560]   can 100% call me out for anything that was confusing and
[00:24:25.560 --> 00:24:28.080]   say that I lied about everything. It's making no
[00:24:28.080 --> 00:24:30.600]   sense. And I'm doing a horrible job.
[00:24:30.600 --> 00:24:32.880]   Sanyam Bhutani: This makes perfect sense to me. So I don't
[00:24:32.880 --> 00:24:35.120]   have any questions. I don't see anything. I need the chat
[00:24:35.120 --> 00:24:35.480]   either.
[00:24:35.480 --> 00:24:39.360]   Zach Lona: Perfect. If I can successfully teach it to you,
[00:24:39.360 --> 00:24:41.440]   that means probably everyone else got it too. That's amazing.
[00:24:41.440 --> 00:24:43.080]   Thank God. Okay.
[00:24:43.080 --> 00:24:44.840]   Sanyam Bhutani: Yeah, thanks. Thanks for keeping me the low
[00:24:44.840 --> 00:24:45.800]   bar, Zach.
[00:24:45.800 --> 00:24:48.680]   Zach Lona: Hey, I worry about it. I'm kidding. I'm kidding.
[00:24:48.680 --> 00:24:52.080]   You're smart. You're brilliant. It's the only live feedback I
[00:24:52.080 --> 00:24:53.080]   have outside the chat.
[00:24:53.080 --> 00:24:55.320]   Sanyam Bhutani: Now you said you can't take it back.
[00:24:55.840 --> 00:25:00.520]   Zach Lona: No. All right. So now let's talk about an example of,
[00:25:00.520 --> 00:25:07.200]   you know, how we would write a document and create a PR. So the
[00:25:07.200 --> 00:25:10.680]   first thing you're going to want to do is fork this repo. Now it
[00:25:10.680 --> 00:25:13.480]   might have you forked the fast.ai repo. If that's the
[00:25:13.480 --> 00:25:19.080]   case, don't stress on that too much. We're working on getting
[00:25:19.080 --> 00:25:22.800]   that all sorted out. It's mostly because it's a fork of fast.ai
[00:25:22.800 --> 00:25:28.560]   and everyone's PR into a fork. It's very strange. But so for
[00:25:28.560 --> 00:25:35.600]   example, say after you've forked the repository, right, and you
[00:25:35.600 --> 00:25:39.400]   want to make a PR and write something. So you're going to
[00:25:39.400 --> 00:25:42.920]   clone your repository, right, and do all that nonsense. And
[00:25:42.920 --> 00:25:52.000]   then what I like to do is create what's called a branch. So when
[00:25:52.040 --> 00:25:56.280]   we look at a git repo, for those that are new to it, we do get
[00:25:56.280 --> 00:26:00.960]   branch typically it will say either master or main,
[00:26:00.960 --> 00:26:05.200]   depending on if they switched over that naming convention.
[00:26:05.200 --> 00:26:07.000]   Sanyam Bhutani: Can we talk about that username?
[00:26:07.000 --> 00:26:09.920]   Zach Lona: What? The Jovan?
[00:26:09.920 --> 00:26:13.120]   Sanyam Bhutani: Yeah, what does that stand for? Where did that
[00:26:13.120 --> 00:26:13.600]   come from?
[00:26:13.600 --> 00:26:17.280]   Zach Lona: Oh, I should probably talk about that a little bit at
[00:26:17.280 --> 00:26:20.640]   least. So I'm the weird one in the group and I work at a
[00:26:20.640 --> 00:26:25.880]   Docker. So this is not my local system. This is actually
[00:26:25.880 --> 00:26:29.520]   running on a Docker environment on the laptop to the right of
[00:26:29.520 --> 00:26:33.560]   me. And I SSH into it. And that's why this is live on a
[00:26:33.560 --> 00:26:34.040]   server.
[00:26:34.040 --> 00:26:36.480]   Sanyam Bhutani: This little bit right. When you said Docker, I
[00:26:36.480 --> 00:26:38.520]   figured there's no point discussing it from there.
[00:26:38.520 --> 00:26:43.400]   Zach Lona: That's fair. The TLDR is, this is the base
[00:26:43.400 --> 00:26:47.560]   Jupyter Notebook Docker image. And that is your username.
[00:26:47.560 --> 00:26:48.960]   Sanyam Bhutani: Makes sense.
[00:26:49.560 --> 00:26:55.640]   So, um, so yeah, if we do get branch, right, say this would be
[00:26:55.640 --> 00:27:00.400]   like master. What I would then do is ideally create a new
[00:27:00.400 --> 00:27:08.520]   branch by going get branch -b. Or sorry, not get branch. Get
[00:27:08.520 --> 00:27:15.760]   checkout -b to specify a new branch. And we'll call this, oh,
[00:27:15.960 --> 00:27:20.920]   weights and biases string. That says I switched to new branch.
[00:27:20.920 --> 00:27:26.600]   Next thing I want to do is pick a notebook. So we're going to do
[00:27:26.600 --> 00:27:31.680]   the Vision Learner Notebook as our very basic demo. I'm going
[00:27:31.680 --> 00:27:37.480]   to run a few cells and get down to where I want to document. And
[00:27:37.480 --> 00:27:44.080]   I want to document, if I look at my cheat sheet, create by. Now,
[00:27:45.400 --> 00:27:51.360]   for those of you that have seen fast.ai's like very quick, learn
[00:27:51.360 --> 00:27:58.920]   equals CNN learner, data loaders, ResNet, 34, right?
[00:27:58.920 --> 00:28:04.080]   Ignore the typo there. When we do that whole like splitting of
[00:28:04.080 --> 00:28:07.200]   the model and freezing the backbone and everything, create
[00:28:07.200 --> 00:28:10.120]   body gets run as a part of it. But you might not know that. And
[00:28:10.120 --> 00:28:13.120]   this might seem very strange, because it says, cut off the
[00:28:13.120 --> 00:28:17.080]   head of a typically pre-trained arch with cut, defaulting to the
[00:28:17.080 --> 00:28:22.360]   first pooling layer. And yes, do tell me if my comedy is
[00:28:22.360 --> 00:28:25.200]   horrible. I will not take offense to it. I would rather
[00:28:25.200 --> 00:28:28.840]   this be educational than that. If not, I just tend to like to
[00:28:28.840 --> 00:28:34.800]   have fun. But so we have basically this very bare bones
[00:28:34.800 --> 00:28:38.080]   documentation of what create body does. I can see that I have
[00:28:38.080 --> 00:28:43.000]   an arch. I have no idea what n is, n in means. Does that mean
[00:28:43.000 --> 00:28:47.400]   like the number of inputs it wants the number of channels? I
[00:28:47.400 --> 00:28:51.320]   have no idea. pre-trained, I could probably guess what that
[00:28:51.320 --> 00:28:56.040]   means and cut. It says cut, but I don't really know what a cut
[00:28:56.040 --> 00:28:56.360]   is.
[00:28:56.360 --> 00:28:59.720]   I was going to interrupt and say also like I've been reading so
[00:28:59.720 --> 00:29:02.640]   much code on Kaggle. Someone would say, I don't know what
[00:29:02.640 --> 00:29:03.320]   arch means.
[00:29:03.320 --> 00:29:10.640]   That's also very, very valid. So let's quickly see how we can
[00:29:10.640 --> 00:29:16.600]   improve this. Now the first thing is, if it makes sense, add
[00:29:16.600 --> 00:29:20.120]   a type into it, we successfully managed to convert Jeremy into
[00:29:20.120 --> 00:29:23.280]   saying, hey, let's get typed in here. Because if you notice a
[00:29:23.280 --> 00:29:27.120]   lot of fastai is not typed, not strongly typed, at least so
[00:29:27.120 --> 00:29:30.960]   this, since we actually make use of the typing, we're going to
[00:29:30.960 --> 00:29:31.400]   bring it in.
[00:29:31.400 --> 00:29:34.400]   Now, this might be an opinionated thing. Sorry to
[00:29:34.400 --> 00:29:37.840]   interrupt you. But like, is there a possibility you end up
[00:29:37.880 --> 00:29:40.680]   overdoing it? Or is it like, in your opinion, always a good
[00:29:40.680 --> 00:29:41.640]   practice to do that?
[00:29:41.640 --> 00:29:44.320]   Absolutely, you can overdo it. And that's sort of what that
[00:29:44.320 --> 00:29:46.800]   tangent was earlier of whether or not a document is needed or
[00:29:46.800 --> 00:29:53.880]   not. Like, um, for example, let me open up a PR real quick
[00:29:53.880 --> 00:29:57.280]   where we I believe, talked about that.
[00:29:57.280 --> 00:30:00.520]   I was just referring to typing. So if you're in a
[00:30:00.520 --> 00:30:04.200]   Oh, yeah. Yeah, like too much typing. Absolutely. Like we're
[00:30:04.200 --> 00:30:08.040]   not doing something like, you know, something's union, you
[00:30:08.040 --> 00:30:14.880]   might see like typing that union in flow. We don't do that. We we
[00:30:14.880 --> 00:30:21.840]   do bare bones, making use of Python in flow. Makes sense. Now
[00:30:21.840 --> 00:30:25.400]   when it doesn't make sense to do typing is if it's very
[00:30:25.400 --> 00:30:30.040]   extraneous, and it's not exactly a specific type that we want. So
[00:30:30.080 --> 00:30:34.280]   for example, arch falls into this category. It's
[00:30:34.280 --> 00:30:37.400]   architecture in this context, I'll write the document first.
[00:30:37.400 --> 00:30:40.040]   And architecture.
[00:30:40.040 --> 00:30:46.520]   generator, which is just a basic example. I mean, technically, I
[00:30:46.520 --> 00:30:49.320]   could say since the generator, the callable.
[00:30:49.320 --> 00:30:51.440]   But
[00:30:51.440 --> 00:30:55.800]   I wouldn't even do that, personally.
[00:30:57.520 --> 00:31:02.000]   And really, when we think an architecture generator, we can
[00:31:02.000 --> 00:31:04.240]   go back and forth on this theme and everyone else right now, if
[00:31:04.240 --> 00:31:08.760]   we want to as well, basically, I want to say is, it's a function
[00:31:08.760 --> 00:31:14.960]   that is called where you we pass pre trained into it to get the
[00:31:14.960 --> 00:31:19.080]   model. So for example, this would be like torch vision.
[00:31:19.080 --> 00:31:27.480]   models.resnet.34, I wouldn't pass in the whole model, instead
[00:31:27.480 --> 00:31:30.040]   it's an architecture generator. So it's the function
[00:31:30.040 --> 00:31:36.800]   that generates a model. So actually, we could say a
[00:31:36.800 --> 00:31:42.240]   function that returns a model.
[00:31:42.240 --> 00:31:44.240]   There we go.
[00:31:44.240 --> 00:31:48.480]   And you know, when you submit a PR with whatever your document
[00:31:48.480 --> 00:31:52.080]   might be, we'll absolutely go back and forth into, you know,
[00:31:52.080 --> 00:31:55.160]   what is the best way to write this document? What is good,
[00:31:55.160 --> 00:31:56.360]   what is bad, and so forth.
[00:31:57.360 --> 00:32:01.560]   Now here, I wouldn't do that callable really, because I'm not
[00:32:01.560 --> 00:32:06.200]   100% sure doing that makes sense. The document alone is
[00:32:06.200 --> 00:32:08.920]   pretty explicit in what it does. And it can be different
[00:32:08.920 --> 00:32:12.040]   depending on what you're doing. So just saying a function that
[00:32:12.040 --> 00:32:15.680]   returns a model pretty much says what it means.
[00:32:15.680 --> 00:32:21.080]   Now let's get into the more trickier parts. So NN, what in
[00:32:21.080 --> 00:32:24.120]   the world is NN? So if I'm looking in here, I see it goes
[00:32:24.120 --> 00:32:28.440]   to update first layer. And if we go to update first layer, I
[00:32:28.440 --> 00:32:34.720]   again have an NN. And really, here we go, change the first
[00:32:34.720 --> 00:32:40.080]   layer based on the number of input channels. All right, so we
[00:32:40.080 --> 00:32:46.680]   can say the number of input channels. Now NN makes sense.
[00:32:46.680 --> 00:32:53.840]   And we don't have to say N input channels, because in fact,
[00:32:53.840 --> 00:32:56.720]   AI, we generally like to keep the variable names kind of
[00:32:56.720 --> 00:33:01.720]   short, ideally without losing meaning. Now we could say
[00:33:01.720 --> 00:33:07.240]   whether to grab the pre-trained weights. So here, we'll say
[00:33:07.240 --> 00:33:12.880]   that should be an integer. Here, that should be a Boolean. Now
[00:33:12.880 --> 00:33:17.760]   cuts where things get a little weird. Because if we look at the
[00:33:17.760 --> 00:33:24.480]   code, we see this like if cut is none, go and do a thing.
[00:33:24.480 --> 00:33:29.080]   Otherwise, if a cut is an integer, go do a thing. Or if
[00:33:29.080 --> 00:33:36.080]   it's a callable, do a thing. So my typing, if we follow that,
[00:33:36.080 --> 00:33:44.960]   is either going to be a none integer or a callable.
[00:33:44.960 --> 00:33:50.560]   And really, we can just say integer or callable. We don't
[00:33:50.560 --> 00:33:52.760]   really need none type. None type doesn't help too much.
[00:33:52.760 --> 00:34:04.360]   Ah, yes. We did type that as an int. And stream might be
[00:34:04.360 --> 00:34:13.040]   slightly behind, which is OK. So now that sort of helps a
[00:34:13.040 --> 00:34:16.280]   little bit. So what is cut? So cut is essentially a way that
[00:34:16.280 --> 00:34:20.280]   we're going to cut off the head of the model. Like for a
[00:34:20.280 --> 00:34:24.240]   ResNet-34, that's going to be that last layer. Because we've
[00:34:24.240 --> 00:34:27.160]   done the Fast.ai course, we understand Fast.ai creates a
[00:34:27.160 --> 00:34:29.840]   model by cutting off the last layer, adding on its own head,
[00:34:29.840 --> 00:34:33.800]   and we fine tune. So this does that first part. We cut off the
[00:34:33.800 --> 00:34:42.920]   head. So we'll say either is an index to cut the model at.
[00:34:43.240 --> 00:34:54.400]   Or a function, either an index or a function to cut the head
[00:34:54.400 --> 00:35:00.400]   of the model with. Right now that makes sense. Because it's
[00:35:00.400 --> 00:35:11.760]   a layer index here. Or it's a function here. Now, as a result,
[00:35:11.800 --> 00:35:14.760]   we sort of are repeating some information here, aren't we?
[00:35:14.760 --> 00:35:20.000]   Because we should expect that given this information, we can
[00:35:20.000 --> 00:35:24.520]   actually not repeat ourselves with the doctrine. So let's
[00:35:24.520 --> 00:35:33.600]   rewrite this a little bit. We could say cut off the head of an
[00:35:33.720 --> 00:35:48.480]   arch, defaulting to the first pooling layer if cut is not. I
[00:35:48.480 --> 00:35:51.960]   say that because we already went pretty long in how we have this
[00:35:51.960 --> 00:35:59.680]   document string here. And this kind of makes sense. So now we
[00:35:59.680 --> 00:36:07.640]   have a documented function. And when we do show doc, create
[00:36:07.640 --> 00:36:18.360]   body, here it is. We have our document that makes perfect
[00:36:18.360 --> 00:36:22.840]   sense. It's rendered. And we've taken this weird create body
[00:36:22.840 --> 00:36:26.080]   function, which even I had trouble understanding in the
[00:36:26.080 --> 00:36:30.040]   beginning when I was learning fast AI, and turned it into
[00:36:30.040 --> 00:36:34.160]   something nice and readable, and helpful for both beginners and
[00:36:34.160 --> 00:36:41.000]   advanced users of fast AI. All right, so Kevin says maybe a bit
[00:36:41.000 --> 00:36:44.400]   of nitpicking, but I would shorten document to an index or
[00:36:44.400 --> 00:36:51.280]   function used to cut the head of the model. Yes, very, very
[00:36:51.280 --> 00:36:55.120]   true. And index or function to cut the head of the model.
[00:36:55.120 --> 00:37:03.880]   Watch as I cut off. Now, and this is why it's important that
[00:37:03.880 --> 00:37:08.480]   I wanted this to be a community sprint. Because you're going to
[00:37:08.480 --> 00:37:11.320]   think something's really good. You're going to think, yes, this
[00:37:11.320 --> 00:37:15.320]   is exactly how it should be explained. But because we sort
[00:37:15.320 --> 00:37:18.040]   of have a rule here now where two people have to review every
[00:37:18.040 --> 00:37:22.080]   PR, you get two different perspectives of does this make
[00:37:22.080 --> 00:37:26.440]   sense? For me right now, that is Kevin in the stream and Saeem.
[00:37:26.440 --> 00:37:31.160]   That is my two reviewers that I have to make sure they align and
[00:37:31.160 --> 00:37:37.080]   all of us make sense. And that's very important because something
[00:37:37.080 --> 00:37:39.320]   that makes sense for you doesn't necessarily make sense to
[00:37:39.320 --> 00:37:42.400]   someone else. And the other thing we want to do with these
[00:37:42.400 --> 00:37:46.880]   documents is make sure that it's quick and to the point. And
[00:37:46.880 --> 00:37:51.040]   there's no extra bits in how we describe something.
[00:37:51.040 --> 00:37:54.400]   You have my child approval, don't worry.
[00:37:54.400 --> 00:38:01.000]   Thank you. I appreciate it. Terrifying the amount of trust
[00:38:01.000 --> 00:38:04.640]   you have in me, but I appreciate it. So now we have this
[00:38:04.640 --> 00:38:08.320]   beautiful document. So I've done this one single function.
[00:38:08.320 --> 00:38:14.920]   Great. Now let's go learn how we make PR. These are for those
[00:38:14.920 --> 00:38:17.280]   who haven't seen this before. This is where fastai's test
[00:38:17.280 --> 00:38:20.720]   live. So if I run this, it'll quickly test everything that we
[00:38:20.720 --> 00:38:22.080]   can worry about with create body.
[00:38:22.080 --> 00:38:27.240]   That needs to stay there. And really, I was gonna I have we
[00:38:27.240 --> 00:38:31.400]   went to that. So what do I do now? I made a I made an
[00:38:31.400 --> 00:38:34.200]   adjustment, I made a PR or I need to make PR, I need to
[00:38:34.200 --> 00:38:35.960]   figure out how to do all this nonsense, right?
[00:38:35.960 --> 00:38:41.240]   Now, the first question is, well, could I have just updated
[00:38:41.240 --> 00:38:47.280]   the Python file? And the answer is no, because fastai is built
[00:38:47.280 --> 00:38:50.680]   with nbdev. And so that's why we work out of a notebook. Because
[00:38:50.680 --> 00:38:54.560]   the other nice thing we could do with that notebook is run that
[00:38:54.560 --> 00:39:00.400]   show doc, create body and see how the documentation is going
[00:39:00.400 --> 00:39:03.480]   to be rendered. You don't get that in a Python file. And so we
[00:39:03.480 --> 00:39:07.040]   can't see whether or not this looks nice, which is very
[00:39:07.040 --> 00:39:12.880]   important. So now that we're done with that, we're going to
[00:39:12.880 --> 00:39:19.840]   do two functions, nbdev clean notebooks, this removes any sort
[00:39:19.840 --> 00:39:23.400]   of metadata that you might have, especially if you're doing a
[00:39:23.400 --> 00:39:26.520]   case where if you follow some tutorials, they say like, well,
[00:39:26.520 --> 00:39:28.800]   you can do some things in collab, even I did some things
[00:39:28.800 --> 00:39:33.440]   in collab. This is how that would operate. And then you do
[00:39:33.480 --> 00:39:39.200]   nbdev build lib, which what these two do is a remove all the
[00:39:39.200 --> 00:39:45.000]   metadata, and then B convert all of our notebooks into Python
[00:39:45.000 --> 00:39:47.200]   files. So you can see it's going through every single notebook,
[00:39:47.200 --> 00:39:50.400]   and taking every single one of those little source code bits
[00:39:50.400 --> 00:39:55.720]   and throwing it into Python files. I do like git status, you
[00:39:55.720 --> 00:39:59.360]   can see that we adjusted really to I know readmes, but we're
[00:39:59.360 --> 00:40:03.120]   going to ignore that for right now. We can see that it said,
[00:40:03.120 --> 00:40:08.040]   okay, we modified learner.py and learner.ipynotebook. Now the
[00:40:08.040 --> 00:40:12.720]   last thing we're going to do is build the documentation for this
[00:40:12.720 --> 00:40:17.040]   specific notebook. So we're gonna say nbdev build docs, I
[00:40:17.040 --> 00:40:21.000]   can do a dash H to see the help. And the one that I care about
[00:40:21.000 --> 00:40:27.960]   is file name. So we're gonna say nbdev build docs, and point to
[00:40:28.000 --> 00:40:34.480]   21 vision learner. If I can actually remember to pass in
[00:40:34.480 --> 00:40:41.680]   fname. Now what it's going to do is convert our notebook into a
[00:40:41.680 --> 00:40:48.360]   HTML file. This is how fast AI magically is able to take a
[00:40:48.360 --> 00:40:52.120]   notebook converted into the Python file and the Jupyter
[00:40:52.120 --> 00:40:55.200]   notebook, and all of our the Python file in the
[00:40:55.200 --> 00:40:57.760]   documentation. This is how all that is automatically done.
[00:40:58.760 --> 00:41:01.760]   So now we have this and I've seen that it all makes sense.
[00:41:01.760 --> 00:41:07.840]   I'm going to go ahead and I'll do the first part on here, but
[00:41:07.840 --> 00:41:11.320]   then I'm gonna switch computers for a moment. I think I should
[00:41:11.320 --> 00:41:17.400]   be able to just do this very quickly. And you can tell that I
[00:41:17.400 --> 00:41:20.360]   thoroughly plan this, especially the part where I realized, oh,
[00:41:20.360 --> 00:41:25.560]   wait, I don't want people to know my GitHub secret. I'm
[00:41:25.560 --> 00:41:32.560]   quickly going to VS code here. And we're gonna go back.
[00:41:32.560 --> 00:41:35.960]   I thought you'd literally switch computers.
[00:41:35.960 --> 00:41:41.120]   No, no, this is on the other monitor for a moment. I was
[00:41:41.120 --> 00:41:44.680]   about to be like, wait, no, we don't need that. So now I can do
[00:41:44.680 --> 00:41:48.160]   git status, right, we have our things I can, if everything is
[00:41:48.160 --> 00:41:54.000]   modified. Fun fact, you can do git commit am which runs git add.
[00:41:55.040 --> 00:42:04.400]   And also commit. So we'll say document, create body. And it
[00:42:04.400 --> 00:42:08.200]   says, okay, we cool, we updated some things. Now we do git push
[00:42:08.200 --> 00:42:17.200]   origin. Wait, the bias is green. Why it doesn't like that? I
[00:42:17.200 --> 00:42:19.840]   don't know. It could be because I did the ampersand. There we go.
[00:42:19.840 --> 00:42:24.680]   Yep. It was the ampersand. Note self. Git branches don't like
[00:42:24.680 --> 00:42:30.720]   having special characters. Cool. I wrote my PR. What's next?
[00:42:30.720 --> 00:42:32.400]   All right, I've made my adjustments.
[00:42:32.400 --> 00:42:37.760]   Can we add emojis to them? Can we add emojis in terminal? I've
[00:42:37.760 --> 00:42:38.520]   never done that.
[00:42:38.520 --> 00:42:44.000]   That's a good question. I know I've seen my co workers do that.
[00:42:44.000 --> 00:42:47.080]   Where they like add a commit message of the hugging emoji.
[00:42:47.080 --> 00:42:51.680]   You can't type in an emoji. I just did that. You can do that
[00:42:51.680 --> 00:42:54.720]   in a terminal. I'm not sure if you can do that in a commit
[00:42:54.720 --> 00:42:57.880]   message through the terminal through this year.
[00:42:57.880 --> 00:43:02.640]   Interesting. I'll find that out after this. Because I do kind of
[00:43:02.640 --> 00:43:05.480]   want to know if I can spruce things up and make it as
[00:43:05.480 --> 00:43:09.280]   unprofessional as I possibly can be also make it professional.
[00:43:09.280 --> 00:43:12.200]   Because this is the absolute cutting edge of software
[00:43:12.200 --> 00:43:15.160]   engineering. That's that's what we're doing here. Solving the
[00:43:15.160 --> 00:43:15.800]   unknowns.
[00:43:15.800 --> 00:43:20.080]   I swear to God I majored in software engineering. I swear.
[00:43:20.600 --> 00:43:25.040]   All right, so now what I'm hoping this will do is not crash
[00:43:25.040 --> 00:43:33.960]   horribly. It might. There we go. Beautiful. And we can see I'm
[00:43:33.960 --> 00:43:40.080]   opening a pull request into my master branch here. For the
[00:43:40.080 --> 00:43:42.320]   record, if you need to do what I just did, there are directions
[00:43:42.320 --> 00:43:46.080]   to do that in the discord. There's a ton of handy things
[00:43:46.080 --> 00:43:48.320]   that you learn how to do through the discord.
[00:43:48.800 --> 00:43:51.280]   Learn how to do through the discord that we just have in a
[00:43:51.280 --> 00:43:55.320]   separate channel. I'll show that in a little bit. But we're going
[00:43:55.320 --> 00:44:01.680]   to say, documented, create body.
[00:44:01.680 --> 00:44:05.840]   The next thing I can do is if I go to reviewers,
[00:44:05.840 --> 00:44:10.800]   ideally don't select Jeremy unless it's really needed, but
[00:44:10.800 --> 00:44:14.920]   select two people that you want to review your PR. Now for the
[00:44:14.920 --> 00:44:17.200]   sake of this demo, I'll select two and deselect two so they
[00:44:17.200 --> 00:44:21.480]   don't get unnecessarily pinged. But I'll go probably Dr. HB works
[00:44:21.480 --> 00:44:25.640]   with vision a lot. He might have some expertise and knowledge on
[00:44:25.640 --> 00:44:28.680]   what this works and how this works. And then I'll do Manny as
[00:44:28.680 --> 00:44:29.480]   well because he does.
[00:44:29.480 --> 00:44:31.920]   Don't even attack Kevin.
[00:44:31.920 --> 00:44:36.120]   Why do I not attack Kevin? Because he helped us write the
[00:44:36.120 --> 00:44:37.720]   thing. He's biased now.
[00:44:37.720 --> 00:44:40.280]   Makes sense.
[00:44:40.280 --> 00:44:46.880]   But so say we added those two. The other thing we can do is
[00:44:47.040 --> 00:44:51.160]   in now you can either do this or we will do this. In the
[00:44:51.160 --> 00:44:53.240]   project, you can select document sprint.
[00:44:53.240 --> 00:44:58.080]   If you so choose. This is basically just how we keep track
[00:44:58.080 --> 00:45:01.040]   of things to make sure if issues open. Ideally, you don't
[00:45:01.040 --> 00:45:02.240]   necessarily have to do that.
[00:45:02.240 --> 00:45:07.720]   And then you just actually there we go. That's what I want.
[00:45:07.720 --> 00:45:12.040]   That works. We're doing great. It's early in the morning for me
[00:45:12.040 --> 00:45:15.520]   still. So then I'm just gonna say create pull request.
[00:45:16.520 --> 00:45:22.520]   Yes. And if you are intimidated by whether or not like, who's
[00:45:22.520 --> 00:45:24.840]   the right person? Oh God, how do I know if I picked the right
[00:45:24.840 --> 00:45:28.000]   person will pick two mentors out for you.
[00:45:28.000 --> 00:45:32.760]   And just figure that out because it is very intimidating because
[00:45:32.760 --> 00:45:36.680]   you're like, ah, I'm gonna pick two names and that's gonna send
[00:45:36.680 --> 00:45:41.240]   them an email to say, hey, look at this thing I wrote. Oh God.
[00:45:42.960 --> 00:45:45.680]   And that can be intimidating, especially if it's your first
[00:45:45.680 --> 00:45:49.600]   PR and that's okay to just leave it in our hands to figure out
[00:45:49.600 --> 00:45:50.800]   who is the right person for this.
[00:45:50.800 --> 00:45:55.720]   Now you'll get this PR. It'll say files change with everything
[00:45:55.720 --> 00:46:01.080]   that happened, which is what we'll look at. You know, take a
[00:46:01.080 --> 00:46:06.920]   look at mostly we'll make comments on the document itself
[00:46:06.920 --> 00:46:10.360]   in here and then have you go update the notebook and do
[00:46:10.360 --> 00:46:13.880]   everything else is not really a good way for me to do add
[00:46:13.880 --> 00:46:16.360]   suggestion, have it trickle back into the notebook when you say
[00:46:16.360 --> 00:46:20.840]   add suggestion to too much. So that's why we do it this way.
[00:46:20.840 --> 00:46:26.200]   It's easier for us to review. But I can see. Okay, cool. Yes,
[00:46:26.200 --> 00:46:29.920]   I did what I said. I created a document for create body and I
[00:46:29.920 --> 00:46:33.760]   selected two reviewers and then the reviewers will come in.
[00:46:33.760 --> 00:46:37.480]   You'll have some back and forth. The CI should absolutely pass.
[00:46:38.160 --> 00:46:42.120]   The only reason the CI would ever fail is if you forgot to do
[00:46:42.120 --> 00:46:48.400]   the clean notebooks or build library. That nbdev_clean
[00:46:48.400 --> 00:46:53.080]   notebooks and nbdev_buildlib. Then we'll sit here, you know,
[00:46:53.080 --> 00:46:57.920]   we'll check it, grade it, see how you did. And then after some
[00:46:57.920 --> 00:47:01.520]   back and forth, because we're never going to say this PR is
[00:47:01.520 --> 00:47:04.600]   horrible. Why have you done this? Get away from me. We're
[00:47:04.600 --> 00:47:06.720]   going to work towards getting it in the library, no matter what
[00:47:06.720 --> 00:47:10.560]   starting point is. Once it's there, you have cemented
[00:47:10.560 --> 00:47:14.240]   yourself as an open source contributor. And once the sprint
[00:47:14.240 --> 00:47:18.200]   has ended, we're going to load all of the PRs that have ever
[00:47:18.200 --> 00:47:23.240]   been done on this on this fork into a fast AI PR, it will keep
[00:47:23.240 --> 00:47:28.960]   that git history. And so you will have officially been a
[00:47:28.960 --> 00:47:34.280]   contributor to fast AI. And the best part is you have a team of
[00:47:34.280 --> 00:47:38.840]   at least 10 people directly here to make sure you get to that
[00:47:38.840 --> 00:47:42.600]   point. So if at any time you're intimidated by Oh my god, this
[00:47:42.600 --> 00:47:46.440]   is so much I have to do. I do. There's too much information at
[00:47:46.440 --> 00:47:50.760]   once. We're available in the discord to help you step by
[00:47:50.760 --> 00:47:54.880]   step and make sure that you can get there because we want you to
[00:47:54.880 --> 00:47:59.440]   help. We don't want to have this barrier of Oh, it seems too
[00:47:59.440 --> 00:48:02.560]   complex because that's how it's been. And it's just because
[00:48:02.920 --> 00:48:06.080]   honestly, on our fault, we haven't really taken the time to
[00:48:06.080 --> 00:48:09.280]   do something as organized as this to show everyone. Here's
[00:48:09.280 --> 00:48:12.520]   how you do it outside of you know, Jeremy's courses and my
[00:48:12.520 --> 00:48:17.800]   courses. This is a much more interpersonal version of that.
[00:48:17.800 --> 00:48:25.480]   And that's that's basically it. That is documents. That's what
[00:48:25.480 --> 00:48:30.320]   we do. That is how we're doing it. But you are still in your
[00:48:30.320 --> 00:48:35.680]   private repo? Yes. So basically, what's going to happen is at the
[00:48:35.680 --> 00:48:40.440]   end of the sprint, I'm going to go to the fastai repo, make a
[00:48:40.440 --> 00:48:44.320]   new pull request, compare for my fork. And just to show that
[00:48:44.320 --> 00:48:48.760]   everyone still gets to keep what they did. You can see I'm going
[00:48:48.760 --> 00:48:52.480]   to create a pull request from the head repository of mine. And
[00:48:52.480 --> 00:48:55.080]   you can see over here, we don't have too many people that have
[00:48:55.080 --> 00:48:58.480]   helped yet, but we have a few. It keeps the entire commit
[00:48:58.480 --> 00:49:03.880]   history of everyone. And so as a result, the moment I hit create
[00:49:03.880 --> 00:49:05.920]   pull requests, I'm not gonna do that now because we're not ready.
[00:49:05.920 --> 00:49:10.600]   And it gets merged. That's how what you did for this sprint
[00:49:10.600 --> 00:49:16.640]   gets thrown into fastai. Excellent question. I always
[00:49:16.640 --> 00:49:19.360]   worry if someone's gonna ask that one, because it's a great
[00:49:19.360 --> 00:49:22.360]   question to ask. And I'm not sure if it was obvious or not to
[00:49:22.360 --> 00:49:27.040]   new people. So good, get can be very confusing, especially in
[00:49:27.040 --> 00:49:35.160]   how code ownership and whatnot goes. Excellent question. So I
[00:49:35.160 --> 00:49:38.040]   guess the last little bit is what does the discord look like?
[00:49:38.040 --> 00:49:42.640]   Because I've shown you, you know, here's the issues. If you
[00:49:42.640 --> 00:49:45.480]   want to look at how everyone's doing, we have a project open
[00:49:45.480 --> 00:49:49.720]   over here in the GitHub that shows you know what the sections
[00:49:49.720 --> 00:49:52.680]   all are split up. So you don't have to go search through a
[00:49:52.680 --> 00:49:57.360]   million and a half issues. But how is most of the communication
[00:49:57.360 --> 00:50:03.760]   happening? So we will talk about that. Give me just a moment.
[00:50:03.760 --> 00:50:10.920]   Because I realized I quit. I closed out of discord. So that
[00:50:10.920 --> 00:50:14.480]   we we wouldn't be spammed by things. So give me just a
[00:50:14.480 --> 00:50:19.800]   moment. But we have the discord community, right? And as it's
[00:50:19.800 --> 00:50:23.600]   starting, because discord is deciding to be extremely slow
[00:50:23.600 --> 00:50:30.280]   and not have its coffee first thing in the morning. There we
[00:50:30.280 --> 00:50:31.320]   go. This is what I want.
[00:50:31.320 --> 00:50:37.040]   I was I was looking at the chart. You caught my attention
[00:50:37.040 --> 00:50:37.640]   immediately.
[00:50:37.640 --> 00:50:47.240]   Yes. Um, alright, so now we'll go back to sharing my screen. So
[00:50:47.240 --> 00:50:49.800]   this is the fast day I discord I'm ignoring that ping for right
[00:50:49.800 --> 00:50:53.680]   now. Right. And so we have, you know, that was me tagging you,
[00:50:53.680 --> 00:50:56.760]   by the way. Oh, of course it was probably saying we're doing the
[00:50:56.760 --> 00:50:59.640]   stream. Can you tell I haven't even looked at discord or opened
[00:50:59.640 --> 00:51:04.720]   it yet. And what you'll see in here is for those that have been
[00:51:04.720 --> 00:51:08.120]   familiar with it, we used to have like, essentially, this
[00:51:08.120 --> 00:51:11.360]   main channels, ask for help study groups and voice channels.
[00:51:11.360 --> 00:51:15.320]   Now we have this section dedicated to the document
[00:51:15.320 --> 00:51:20.120]   sprint. So in general, you can see, this should be used for
[00:51:20.120 --> 00:51:23.240]   general communication questions pertaining to whether what
[00:51:23.240 --> 00:51:25.400]   certain fast AI code does, you probably can't see that well,
[00:51:25.400 --> 00:51:29.400]   and I apologize, I'm going to do my best to read it, and how best
[00:51:29.400 --> 00:51:34.920]   to document something and so forth. Resources is a pinned
[00:51:34.920 --> 00:51:39.400]   channel that only I can edit, where I basically drop any
[00:51:39.400 --> 00:51:42.640]   useful information you might need relating to the sprint. So
[00:51:42.640 --> 00:51:45.960]   for example, it has like a link to the base repository
[00:51:45.960 --> 00:51:50.920]   directions for your first PR, the style guides and whatnot. If
[00:51:50.920 --> 00:51:56.720]   you are too afraid of just throwing your PR into the fast
[00:51:56.720 --> 00:52:00.960]   AI repo and saying, please come trash my code, tell me how I did.
[00:52:00.960 --> 00:52:06.160]   We have this ask for review channel, where it's a much more
[00:52:06.160 --> 00:52:11.080]   informal approach to here's the function I did. Can someone tell
[00:52:11.080 --> 00:52:17.520]   me how this looks? Like we'll go up to an example, say, because
[00:52:17.520 --> 00:52:23.920]   I haven't been able to do it too much. Like Luke here wrote one
[00:52:23.920 --> 00:52:27.480]   where he was like, hey, I'm working on the tabular stuff. Can
[00:52:27.480 --> 00:52:32.840]   someone tell me how this starts to look? And we'll basically
[00:52:32.840 --> 00:52:36.400]   give him feedback to get him started before it's as
[00:52:36.400 --> 00:52:42.720]   intimidating as a full blown pull request. And then there is
[00:52:42.720 --> 00:52:47.480]   a completely separate channel for anyone who is completely new
[00:52:47.480 --> 00:52:53.000]   to submitting your first PR and you're confused on anything. You
[00:52:53.000 --> 00:52:58.400]   can ask questions in here. And those of us that are mentors,
[00:52:58.400 --> 00:53:03.320]   which you can, if you so choose, add us with @mentor. But really
[00:53:03.320 --> 00:53:08.040]   it's look for anyone with a green name in the discord. You
[00:53:08.040 --> 00:53:10.480]   can ask any questions in here if you're struggling, hitting
[00:53:10.480 --> 00:53:13.640]   issues and so forth. And we'll be able to help you out and make
[00:53:13.640 --> 00:53:17.800]   sure that you get your first PR and we have that first success,
[00:53:17.800 --> 00:53:22.680]   which can lead to more successes. And so hopefully you
[00:53:22.680 --> 00:53:26.480]   get the vibe of we are trying to do literally everything we
[00:53:26.480 --> 00:53:31.760]   possibly can to make sure that if you want to do open source,
[00:53:31.800 --> 00:53:39.440]   you can. If you don't, I have failed and I will quit. Don't
[00:53:39.440 --> 00:53:48.600]   quote me. But that that's it. That's the sprint. That is what
[00:53:48.600 --> 00:53:52.000]   we do, how we're going to do it, what it's all going to look
[00:53:52.000 --> 00:53:55.480]   like and sort of how you can get in on the fun.
[00:53:55.480 --> 00:54:00.720]   Awesome. I'll just wait if there are any final questions.
[00:54:00.720 --> 00:54:04.960]   Otherwise we can wrap up. But this was really helpful. I'm
[00:54:04.960 --> 00:54:08.760]   I'm hoping people in here would at least send five, six PRs,
[00:54:08.760 --> 00:54:10.800]   maybe more. Hopefully, we'll see.
[00:54:10.800 --> 00:54:17.760]   That that is the hope that is always the hope. Yes, we
[00:54:17.760 --> 00:54:18.640]   converted one.
[00:54:18.640 --> 00:54:19.800]   We converted one.
[00:54:19.800 --> 00:54:26.720]   Fantastic. Can't wait to see any questions you might have and
[00:54:26.720 --> 00:54:28.600]   what your PR looks like. I'm very excited.
[00:54:29.600 --> 00:54:33.120]   Amazing. Let me quickly grab this.
[00:54:33.120 --> 00:54:40.880]   Some I'll wrap up since I don't see any questions, but I'll
[00:54:40.880 --> 00:54:43.120]   mention that.
[00:54:43.120 --> 00:54:45.920]   I won't quit promise.
[00:54:45.920 --> 00:54:51.680]   You can find Zach on Twitter at the Zach Mueller. He also has an
[00:54:51.680 --> 00:54:56.720]   awesome YouTube channel where he uploads lectures, live streams.
[00:54:57.040 --> 00:54:59.200]   I think the live streams are on Twitch.
[00:54:59.200 --> 00:55:02.400]   Yes, Twitch, YouTube, Discord.
[00:55:02.400 --> 00:55:06.680]   Depends on basically find them on on either of these platforms.
[00:55:06.680 --> 00:55:11.280]   Twitter. Again, you can look up Zach Mueller on YouTube and
[00:55:11.280 --> 00:55:13.720]   Twitch, you'll find him there or just find him on fastair
[00:55:13.720 --> 00:55:16.160]   discord. He'll be replying to every third message, if not the
[00:55:16.160 --> 00:55:16.760]   second one.
[00:55:16.760 --> 00:55:21.520]   We have one question that I think we have to answer our PRs
[00:55:21.520 --> 00:55:23.040]   limited to the main fastair repo.
[00:55:23.480 --> 00:55:26.400]   Yes, so that one I probably would like a little more
[00:55:26.400 --> 00:55:30.600]   context in in what you're asking. But if it's generally
[00:55:30.600 --> 00:55:35.440]   hopefully my computer, oh, there we go. My mouse froze for a
[00:55:35.440 --> 00:55:35.760]   moment.
[00:55:35.760 --> 00:55:40.080]   Thought I'd like completely destroyed everything. So if your
[00:55:40.080 --> 00:55:43.200]   question is basically like, is this just around fastai? Or are
[00:55:43.200 --> 00:55:45.280]   we planning on doing like other repos?
[00:55:45.280 --> 00:55:51.480]   For right now, this sprint is very much so an experiment. This
[00:55:51.480 --> 00:55:54.240]   is the first time we've ever done anything of this magnitude
[00:55:54.240 --> 00:55:58.280]   with the community. And so we're trying to see how this goes. And
[00:55:58.280 --> 00:55:59.360]   it's going very well.
[00:55:59.360 --> 00:56:04.720]   That we did have some talk of if we wanted to do this for fast
[00:56:04.720 --> 00:56:08.440]   core as well, because that library is even more mysterious.
[00:56:08.440 --> 00:56:14.200]   And so we're kind of trying to do.
[00:56:14.200 --> 00:56:17.440]   Yes, thank you. Yes. Awesome. I am answering this question.
[00:56:17.440 --> 00:56:18.040]   Fantastic.
[00:56:19.880 --> 00:56:23.840]   When it comes to like fast core and be dev. Eventually, yes,
[00:56:23.840 --> 00:56:26.120]   this sprint and scope. No.
[00:56:26.120 --> 00:56:32.680]   Mostly just because we want to try and focus on one first, and
[00:56:32.680 --> 00:56:37.960]   trying to juggle more apples and we can really hold well, isn't
[00:56:37.960 --> 00:56:42.640]   the best use of our resources. So will it come in the future? I
[00:56:42.640 --> 00:56:46.240]   have no doubt what it'll look like how it'll look like. I'm
[00:56:46.240 --> 00:56:49.240]   not 100% sure. But the goal eventually is yes, since this is
[00:56:49.240 --> 00:56:53.960]   an NB dev, anything can use documents. If you go look in
[00:56:53.960 --> 00:56:56.400]   fast core, I think I even documented some things at one
[00:56:56.400 --> 00:57:00.800]   point, even NB dev has documents for all of their
[00:57:00.800 --> 00:57:06.240]   all their like command line stuff like NB dev build, build
[00:57:06.240 --> 00:57:10.840]   docs and everything. So yes, more news on that soon.
[00:57:10.840 --> 00:57:16.640]   Chris asked the question of is it just for docs or new
[00:57:16.640 --> 00:57:17.240]   functions?
[00:57:17.760 --> 00:57:21.120]   Or like feature generation for time series and tabular?
[00:57:21.120 --> 00:57:29.520]   That's a very good question. Yes. So for right now, it's just
[00:57:29.520 --> 00:57:34.400]   the documentation. But that's just because we're going off of
[00:57:34.400 --> 00:57:38.680]   what's in the library right now. If you want to do that, in the
[00:57:38.680 --> 00:57:44.840]   main fast AI repo, put a PR for it. You can include documents if
[00:57:44.840 --> 00:57:47.240]   you so choose. I don't know if Jeremy is going to say yes or no
[00:57:47.240 --> 00:57:49.560]   to that. He'll probably say yes. That's what we're aiming for.
[00:57:49.560 --> 00:57:54.480]   Anyways, I hope at least. And get it in the main library.
[00:57:54.480 --> 00:57:59.160]   Because basically what I'm doing is every two or three days, I'm
[00:57:59.160 --> 00:58:04.720]   rebasing my branch or my fork on fast AI repo. So any changes
[00:58:04.720 --> 00:58:07.280]   that occurred that affect like source code, new functions and
[00:58:07.280 --> 00:58:11.320]   whatnot, I'm making sure can be a part of the spread. And we're
[00:58:11.320 --> 00:58:15.640]   not like, oh, we did 100% of the library except because this has
[00:58:15.640 --> 00:58:19.120]   been going on for the last two weeks, five new functions were
[00:58:19.120 --> 00:58:23.240]   added, and we forgot to do them. So it's not really 100%. No, we
[00:58:23.240 --> 00:58:27.640]   genuinely are trying to get that 100%. So if you want to include
[00:58:27.640 --> 00:58:33.320]   something new in fast AI, do it in fast AI itself. This is just
[00:58:33.320 --> 00:58:37.960]   for documentation revamping. Great questions, Chris and
[00:58:37.960 --> 00:58:40.040]   Bharat. Excellent questions.
[00:58:40.040 --> 00:58:44.800]   So this is all to elaborate on that this is all community
[00:58:44.800 --> 00:58:49.280]   effort, right? You this is all in our free time, something we
[00:58:49.280 --> 00:58:52.320]   might passionate about Zach agreed to join this live stream,
[00:58:52.320 --> 00:58:55.840]   even though he's already done it. This is basically just to
[00:58:55.840 --> 00:58:59.160]   get more people involved. So it's, he's joining us on a
[00:58:59.160 --> 00:59:02.040]   Saturday morning. It's Saturday, right?
[00:59:02.040 --> 00:59:04.360]   Yeah, it's Saturday. It's Saturday, like 11 o'clock,
[00:59:04.360 --> 00:59:09.720]   something like that. Yes, I'm not paid to do any of this. None
[00:59:09.720 --> 00:59:13.120]   of the volunteers are paid to do this. You know, we just care a
[00:59:13.120 --> 00:59:16.800]   lot about this library. I've never been paid by Jeremy to do
[00:59:16.800 --> 00:59:22.280]   any of this. No matter how insane that might seem. I just
[00:59:22.280 --> 00:59:26.080]   decide to code in my free time because somehow that's fun.
[00:59:26.080 --> 00:59:29.560]   It's called recreational coding.
[00:59:29.560 --> 00:59:33.680]   Professor. Sure. We can call it that it makes it sound less like
[00:59:33.680 --> 00:59:35.440]   we have no life and no friends.
[00:59:35.440 --> 00:59:39.040]   Yeah, let's let's not say that on the live stream. And on that
[00:59:39.040 --> 00:59:39.480]   note, we can
[00:59:42.720 --> 00:59:46.280]   I don't see any questions. As a reminder, find Zach on Twitter,
[00:59:46.280 --> 00:59:49.720]   find him on YouTube on Twitch, chat with him on the first day
[00:59:49.720 --> 00:59:54.040]   discord. And yeah, I'm sure he'll be active across all three
[00:59:54.040 --> 00:59:56.920]   channels. Thank you so much again, Zach for teaching us how
[00:59:56.920 --> 01:00:00.760]   to do this. And I really hope for you, you the audience,
[01:00:00.760 --> 01:00:04.160]   please send a few PRs Zach. So tag him if you're afraid to tag
[01:00:04.160 --> 01:00:05.840]   other people in the section.
[01:00:05.840 --> 01:00:07.680]   Yeah, that's that's fair. That's fair.
[01:00:07.680 --> 01:00:10.640]   Awesome. Thanks, everybody for joining.
[01:00:11.080 --> 01:00:13.920]   This was a lot of fun. I guess you know, as you said, I've done
[01:00:13.920 --> 01:00:16.600]   this already once, but I will do it as many times as it takes to
[01:00:16.600 --> 01:00:19.520]   get even one new person into open source because it can be
[01:00:19.520 --> 01:00:21.280]   fun. Yeah, genuinely.
[01:00:21.280 --> 01:00:24.840]   Awesome. I'll end the live stream here. Thanks, everyone
[01:00:24.840 --> 01:00:25.360]   for joining.
[01:00:25.360 --> 01:00:26.200]   Thank you.
[01:00:26.200 --> 01:00:27.040]   Bye.

