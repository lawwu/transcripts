
[00:00:00.000 --> 00:00:05.520]   So the topic I want to discuss might seem unusual at first, but there is a backstory here.
[00:00:05.520 --> 00:00:07.440]   I will, I will quickly tell you here it is.
[00:00:07.440 --> 00:00:11.920]   Did Alan Turing invent the computer?
[00:00:11.920 --> 00:00:13.400]   All right.
[00:00:13.400 --> 00:00:14.480]   Why are we talking about this?
[00:00:14.480 --> 00:00:17.960]   Well, it goes back to last week.
[00:00:17.960 --> 00:00:23.480]   I was a guest on Sam Harris's podcast making sense.
[00:00:23.480 --> 00:00:25.320]   I don't know if you've heard that one yet, Jesse.
[00:00:25.320 --> 00:00:29.360]   Uh, but it's an episode that's creating quite a stir.
[00:00:29.720 --> 00:00:36.360]   Not because of me, but because the episode is, uh, begins with a 45 minute
[00:00:36.360 --> 00:00:41.920]   monologue from Sam, where he explains why he decided a few days before
[00:00:41.920 --> 00:00:44.080]   that episode posted to quit Twitter.
[00:00:44.080 --> 00:00:49.960]   So here is where, if we had a, uh, applause sound effect, a confetti and
[00:00:49.960 --> 00:00:52.880]   applause sound effect is where, where we would, where we would hear it.
[00:00:52.880 --> 00:00:59.080]   So Sam quit, uh, Twitter and it sort of made sense to attach his
[00:00:59.080 --> 00:01:00.680]   announcement about that to this interview.
[00:01:00.680 --> 00:01:03.000]   I'd recorded with him a few weeks earlier, because obviously when you
[00:01:03.000 --> 00:01:05.360]   talk to Cal Newport, you're going to, you're going to hear a lot about
[00:01:05.360 --> 00:01:09.240]   tech and tech and society and not necessarily a very positive view of Twitter.
[00:01:09.240 --> 00:01:14.360]   Now, interestingly in that interview, later in the interview, and we're
[00:01:14.360 --> 00:01:19.120]   talking about Twitter, Sam is cataloging a lot of his concerns about it.
[00:01:19.120 --> 00:01:24.120]   And I took a swing and made a pitch in the interview directly.
[00:01:24.120 --> 00:01:25.520]   Sam, you should quit Twitter.
[00:01:25.520 --> 00:01:28.280]   Now I don't get to take credit for that.
[00:01:28.280 --> 00:01:31.600]   Sam actually specifically addresses this at the end of his monologue.
[00:01:31.600 --> 00:01:35.360]   He says, as you will hear, I already had doubts when I was doing this
[00:01:35.360 --> 00:01:37.120]   interview and Cal was pushing me to quit it.
[00:01:37.120 --> 00:01:41.120]   I didn't quit Twitter because Cal told me to, but he was one of the voices
[00:01:41.120 --> 00:01:42.720]   in my head when I made the decision.
[00:01:42.720 --> 00:01:47.080]   So I'm going to take, let's take a partial W yeah, on that Jesse.
[00:01:47.080 --> 00:01:50.680]   Um, but anyways, obviously I'm glad he did it, not just for his own sanity,
[00:01:50.680 --> 00:01:52.160]   but I think because it's a role model.
[00:01:52.160 --> 00:01:55.040]   Uh, as long time listeners.
[00:01:56.680 --> 00:02:01.520]   No, my issue is not with the existence of these social media platforms.
[00:02:01.520 --> 00:02:03.320]   It is with the assumption of ubiquity.
[00:02:03.320 --> 00:02:04.960]   That I think is what the problem is.
[00:02:04.960 --> 00:02:07.760]   The idea that everyone has to use the platform.
[00:02:07.760 --> 00:02:09.440]   That's what I, that's what I might.
[00:02:09.440 --> 00:02:10.800]   I don't care that Twitter exists.
[00:02:10.800 --> 00:02:13.120]   I care that it's a big deal that I don't use it.
[00:02:13.120 --> 00:02:18.720]   And so when we have more high profile people like Sam opt out, it opens
[00:02:18.720 --> 00:02:22.160]   up that possibility to others, others who maybe feel like the.
[00:02:22.160 --> 00:02:24.200]   Cost or outweighing the benefits.
[00:02:24.200 --> 00:02:27.400]   It makes it easier and easier for those who follow in his wake to say, you know
[00:02:27.400 --> 00:02:29.320]   what, I'm going to do something similar.
[00:02:29.320 --> 00:02:33.280]   I got a lot of heat when I originally left Twitter, Sam, who's way more
[00:02:33.280 --> 00:02:37.000]   well-known to me is getting a huge amount of heat right now, but more of us
[00:02:37.000 --> 00:02:39.400]   who go through this, the easier it will become for those who follow.
[00:02:39.400 --> 00:02:40.640]   So I think that's all good news.
[00:02:40.640 --> 00:02:44.080]   Anyways, it's a long interview.
[00:02:44.080 --> 00:02:47.000]   A lot of it, we're dealing with tech issues, a lot of tech and
[00:02:47.000 --> 00:02:48.240]   society, a lot of tech criticism.
[00:02:48.240 --> 00:02:49.040]   Very interesting stuff.
[00:02:49.040 --> 00:02:50.840]   A lot of new theories you haven't heard me talk about before.
[00:02:50.840 --> 00:02:52.000]   Worth listening to.
[00:02:52.720 --> 00:02:57.720]   But earlier in the show, Sam and I wandered across a bunch of esoteric
[00:02:57.720 --> 00:03:00.520]   topics that just sort of popped to our head as we were chatting.
[00:03:00.520 --> 00:03:05.200]   And one of the topics that came up relatively early in the conversation
[00:03:05.200 --> 00:03:11.240]   was this thought experiment that Sam had considered before, where he was
[00:03:11.240 --> 00:03:17.080]   thinking if I could go back in time, somewhere between the 1930s, the 1940s.
[00:03:17.080 --> 00:03:20.080]   And, uh, let's say kill a single individual.
[00:03:21.000 --> 00:03:25.040]   If my goal was to delay as long as possible, the development of the
[00:03:25.040 --> 00:03:29.640]   modern computer, which individual would you kill now, obviously that's a,
[00:03:29.640 --> 00:03:33.400]   maybe a, a, a violent construction for what's an actually the very interesting
[00:03:33.400 --> 00:03:37.520]   question, you know, who was probably most singly influentially responsible for
[00:03:37.520 --> 00:03:39.040]   the development of the modern computer.
[00:03:39.040 --> 00:03:40.600]   I thought that was a cool thought experiment.
[00:03:40.600 --> 00:03:41.360]   So we got into it.
[00:03:41.360 --> 00:03:46.120]   Now, one of the names that often comes to people's mind when they think about the
[00:03:46.120 --> 00:03:48.840]   invention of the computer is Alan Turing.
[00:03:50.320 --> 00:03:58.200]   And as Sam and I talked about, I think Turing gets too much credit as a, uh,
[00:03:58.200 --> 00:04:01.080]   initiator of the development of modern digital computing.
[00:04:01.080 --> 00:04:02.640]   I'm a huge Alan Turing fan.
[00:04:02.640 --> 00:04:05.680]   I teach Turing to our doctoral students at Georgetown.
[00:04:05.680 --> 00:04:07.120]   I know his work very well.
[00:04:07.120 --> 00:04:10.040]   He's the father of theoretical computer science and incredibly
[00:04:10.040 --> 00:04:17.440]   influential thinker and a very original thinker, but his role in the invention
[00:04:17.440 --> 00:04:20.880]   of the computer, I think has been inflated in recent decades, he would
[00:04:20.880 --> 00:04:24.920]   not be, in other words, my choice of who to go back and, and, uh, rub out.
[00:04:24.920 --> 00:04:27.160]   If I was trying to delay the development of the computer.
[00:04:27.160 --> 00:04:31.360]   Now I'll tell you soon who I think that person is, but first let's
[00:04:31.360 --> 00:04:34.120]   return to the question of Turing.
[00:04:34.120 --> 00:04:41.240]   So what did he do that became so connected to computing in the modern minds?
[00:04:41.240 --> 00:04:44.240]   Well, it really comes down to the notion of the Turing machine.
[00:04:44.240 --> 00:04:47.080]   If you want to understand the notion of the Turing machine, and I promise you,
[00:04:47.080 --> 00:04:48.440]   I'm not going to get into professor mode here.
[00:04:48.440 --> 00:04:51.960]   I'll be very brief, but if we want to get into the notion of the Turing machine,
[00:04:51.960 --> 00:04:56.320]   you have to go back to this paper he wrote called on computable numbers and
[00:04:56.320 --> 00:05:01.440]   their connection to the Einstein problem, which is a German name for a problem that
[00:05:01.440 --> 00:05:04.520]   was posed in the late 19th century by David Hilbert.
[00:05:04.520 --> 00:05:07.200]   Now this problem had nothing to do with computers.
[00:05:07.200 --> 00:05:08.440]   This is from the 1800s.
[00:05:08.440 --> 00:05:14.240]   But what it asked is, can we come up with what they would call back
[00:05:14.240 --> 00:05:16.800]   then an effective procedure?
[00:05:16.800 --> 00:05:19.680]   Today, we might call this an algorithm, but back then they would
[00:05:19.680 --> 00:05:20.560]   call it an effective procedure.
[00:05:20.560 --> 00:05:24.960]   That is a step-by-step series of instructions for solving any
[00:05:24.960 --> 00:05:26.400]   math problem we might want to solve.
[00:05:26.400 --> 00:05:30.200]   Does every math problem have a step-by-step way to solve it?
[00:05:30.200 --> 00:05:32.320]   This was a big question in mathematical logic.
[00:05:32.320 --> 00:05:37.360]   A lot of people were working on it and Turing came up with an answer.
[00:05:37.360 --> 00:05:40.880]   And the way he came up with an answer is he said, let's have a formal
[00:05:40.880 --> 00:05:43.000]   definition of an effective procedure.
[00:05:43.000 --> 00:05:46.160]   And that's when he came up with this thought experiment of the Turing machine.
[00:05:46.160 --> 00:05:52.080]   It's a set of instructions, an infinite tape, a read head that can move from
[00:05:52.080 --> 00:05:55.880]   position to position on the tape, read what's there, look up in the instructions
[00:05:55.880 --> 00:05:59.600]   what to do, maybe overwrite what's there, move one direction or the other.
[00:05:59.600 --> 00:06:04.600]   Turing made this argument that this abstract machine in theory could implement
[00:06:04.600 --> 00:06:06.520]   any possible effective procedure.
[00:06:06.520 --> 00:06:10.320]   So every effective procedure has a corresponding Turing machine.
[00:06:11.880 --> 00:06:15.160]   He then did a bit of mathematical logical tricks where he said, look, we could
[00:06:15.160 --> 00:06:19.440]   describe any such Turing machine with a sequence of whole numbers.
[00:06:19.440 --> 00:06:23.120]   And we could just put those whole numbers together and just get a really big whole number.
[00:06:23.120 --> 00:06:26.520]   So every Turing machine and therefore every effective procedure has
[00:06:26.520 --> 00:06:28.520]   a corresponding whole number.
[00:06:28.520 --> 00:06:29.640]   Now it might be really big.
[00:06:29.640 --> 00:06:33.720]   It might be a couple hundred thousand digits long, but just conceptually speaking,
[00:06:33.720 --> 00:06:38.480]   there is a way to label every possible effective procedure with the whole number.
[00:06:38.480 --> 00:06:40.960]   Then he looked at what do we mean by a problem?
[00:06:41.960 --> 00:06:45.560]   And he focused in on a subset of problems you might try to solve.
[00:06:45.560 --> 00:06:46.800]   These were called decision problems.
[00:06:46.800 --> 00:06:53.440]   He did a little bit of mathematical logic and he argued every problem can be
[00:06:53.440 --> 00:06:55.480]   represented by a real number.
[00:06:55.480 --> 00:06:59.800]   That is a number, a decimal point number that has an infinite number of decimal places.
[00:06:59.800 --> 00:07:04.840]   You know, 1.0146578 often to infinity.
[00:07:04.840 --> 00:07:07.520]   And in fact, there's a one-to-one correspondence there that you could, you
[00:07:07.520 --> 00:07:13.480]   could, you could take every real number and that exactly describes a particular decision problem.
[00:07:13.480 --> 00:07:20.640]   This was a big deal because there is a well-known result going back to Cantor.
[00:07:20.640 --> 00:07:24.040]   Now we're going back to the 19th century that says there are many more real numbers
[00:07:24.040 --> 00:07:24.880]   than natural numbers.
[00:07:24.880 --> 00:07:30.880]   There exists no way to map every natural number onto a real number such that you've
[00:07:30.880 --> 00:07:32.000]   covered all the real numbers.
[00:07:34.400 --> 00:07:39.760]   The impact of that is, okay, if we, if we map every possible effective procedure to
[00:07:39.760 --> 00:07:43.720]   the problem it solves, there'll be many problems left over that aren't being mapped
[00:07:43.720 --> 00:07:46.040]   to by an effective procedure.
[00:07:46.040 --> 00:07:48.960]   Math, math, math, logic, logic, logic.
[00:07:48.960 --> 00:07:52.520]   And the conclusion is there's many more problems out there in the universe and
[00:07:52.520 --> 00:07:54.840]   there are algorithms or effective procedures that can solve them.
[00:07:54.840 --> 00:07:59.640]   Most things that most problems out there can't be solved by effective procedures.
[00:07:59.640 --> 00:08:02.480]   This was the question that Hilbert was trying to answer.
[00:08:02.480 --> 00:08:04.000]   Turing answered it.
[00:08:04.320 --> 00:08:09.440]   So this was all about logic, mathematical logic, foundational math that was going
[00:08:09.440 --> 00:08:09.960]   on right then.
[00:08:09.960 --> 00:08:11.640]   None of this had to do with computers.
[00:08:11.640 --> 00:08:18.960]   The reason why we connect this to modern digital computing is you can say Turing's
[00:08:18.960 --> 00:08:25.440]   notion of a Turing machine is an abstract notion of a computer because you have this,
[00:08:25.440 --> 00:08:29.480]   that the tape could have on it instructions that a Turing machine could run.
[00:08:29.480 --> 00:08:32.560]   He talked about in his original paper, something called the universal Turing
[00:08:32.560 --> 00:08:36.120]   machine, where the input on the tape is a description of another Turing machine and
[00:08:36.120 --> 00:08:36.760]   it simulates it.
[00:08:36.760 --> 00:08:39.640]   So you do have some of the conceptual basics there of a computer reading a
[00:08:39.640 --> 00:08:41.320]   program and executing it.
[00:08:41.320 --> 00:08:42.800]   Okay, fair enough.
[00:08:42.800 --> 00:08:47.760]   Also, we do know that von Neumann at Princeton was familiar with Turing's work.
[00:08:47.760 --> 00:08:51.640]   He met Turing when Turing was visiting the Institute for Advanced Study in
[00:08:51.640 --> 00:08:52.280]   Princeton.
[00:08:52.280 --> 00:08:56.400]   Von Neumann later advanced the von Neumann architecture for modern computers, which
[00:08:56.400 --> 00:08:57.360]   is the one we use today.
[00:08:57.360 --> 00:08:59.840]   So there's a little bit of an influence there as well.
[00:09:00.640 --> 00:09:05.120]   But the idea that Turing single handedly sort of introduced this idea that we could
[00:09:05.120 --> 00:09:07.680]   have these universal computing machines, that's just not true.
[00:09:07.680 --> 00:09:13.520]   Before Turing even did this work, well before this work was well known outside of
[00:09:13.520 --> 00:09:18.840]   esoteric mathematical circles, we already had general purpose analog electronic
[00:09:18.840 --> 00:09:19.360]   computers.
[00:09:19.360 --> 00:09:22.920]   We had, for example, Vannevar Bush's differential analyzer at MIT.
[00:09:22.920 --> 00:09:28.720]   In the mid 1930s, we got the very first, we began to get the very first ideas being
[00:09:28.720 --> 00:09:32.320]   proposed for making fully electronic computing machines.
[00:09:32.320 --> 00:09:36.760]   As the war went on, there was a huge push to have more advanced electronic
[00:09:36.760 --> 00:09:37.160]   computing.
[00:09:37.160 --> 00:09:41.680]   They were using these to calculate artillery tables and to help aim at the
[00:09:41.680 --> 00:09:43.720]   aircraft guns and some sort of cybernetic sensors.
[00:09:43.720 --> 00:09:45.440]   A huge research effort for this.
[00:09:45.440 --> 00:09:51.920]   And while it's true that Turing after the war got involved in a project in the UK to
[00:09:51.920 --> 00:09:55.560]   develop an electronic computer, this was one of at least a half dozen ongoing
[00:09:55.560 --> 00:09:58.760]   projects, many of which finished sooner.
[00:09:58.760 --> 00:10:02.760]   I think the ENIAC at Penn, for example, there was a Van Nuyman's project at
[00:10:02.760 --> 00:10:03.240]   Princeton.
[00:10:03.240 --> 00:10:05.040]   There was a project going on at Harvard.
[00:10:05.040 --> 00:10:07.600]   A lot of people were working on this problem.
[00:10:07.600 --> 00:10:10.600]   And they didn't need Turing to do it.
[00:10:10.600 --> 00:10:17.240]   The final thing people point to is they saw that that movie about whatever it was
[00:10:17.240 --> 00:10:19.240]   called, the imitation game.
[00:10:19.240 --> 00:10:23.240]   And like, well, didn't he invent these sort of computing machines to break the
[00:10:23.240 --> 00:10:23.840]   enigma code?
[00:10:24.280 --> 00:10:26.760]   No, those were developed by the Poles.
[00:10:26.760 --> 00:10:29.200]   The Polish code breakers developed those.
[00:10:29.200 --> 00:10:32.000]   Turing was just building a more advanced version of those machines.
[00:10:32.000 --> 00:10:33.280]   They had more funding.
[00:10:33.280 --> 00:10:37.600]   So they used the initial work that the Poles had put into breaking the enigma
[00:10:37.600 --> 00:10:38.360]   and then they expanded it.
[00:10:38.360 --> 00:10:42.080]   I love Turing, but he didn't invent the computer.
[00:10:42.080 --> 00:10:47.960]   So who would I go back and rub out if I was trying to delay the computer?
[00:10:47.960 --> 00:10:52.400]   I would say Claude Shannon in the early 1930s.
[00:10:54.000 --> 00:10:59.600]   Claude Shannon in the early 1930s wrote the most important master thesis that
[00:10:59.600 --> 00:11:01.120]   anyone has ever written before.
[00:11:01.120 --> 00:11:04.240]   It was called a symbolic analysis of relay and switching circuits.
[00:11:04.240 --> 00:11:09.320]   This master thesis is what figured out the entire field of digital electronics.
[00:11:09.320 --> 00:11:14.360]   This was the really key breakthrough that everything else was built on.
[00:11:14.360 --> 00:11:21.000]   Shannon had been interning at Bell labs where he was seeing electromagnetic
[00:11:21.000 --> 00:11:25.840]   relays, phone networks use electromagnetic relays to automatically connect calls
[00:11:25.840 --> 00:11:27.080]   using electrical signals.
[00:11:27.080 --> 00:11:31.280]   He was also studying for a degree in mathematics at MIT.
[00:11:31.280 --> 00:11:37.440]   He put those two things together and he said, wait a second, you can take purely
[00:11:37.440 --> 00:11:41.360]   logical statements expressed in Boolean algebra and you can implement them with
[00:11:41.360 --> 00:11:45.040]   electronic circuits using these electromechanic relays.
[00:11:45.040 --> 00:11:49.640]   So you can take an arbitrary mathematical specification of a logical circuit and
[00:11:49.640 --> 00:11:52.720]   build it, anything you can come up with, any Boolean algebra statement you can
[00:11:52.720 --> 00:11:59.640]   come up with, we have a systematic way of building that with wires and magnets.
[00:11:59.640 --> 00:12:01.400]   We can build an electronic circuit.
[00:12:01.400 --> 00:12:02.880]   I have a quote.
[00:12:02.880 --> 00:12:06.800]   He said this later in life, it just happened that no one else was familiar
[00:12:06.800 --> 00:12:08.720]   with both of these fields at the same time.
[00:12:08.720 --> 00:12:13.880]   So he happened to be in both worlds, math, phone company came together.
[00:12:13.880 --> 00:12:18.200]   That was probably the single biggest innovation because once we realized we
[00:12:18.200 --> 00:12:22.640]   can build arbitrary logic into electrical circuits, that's what opened up the whole
[00:12:22.640 --> 00:12:26.760]   hope that whatever idea we have that we want to implement, whatever adding circuit
[00:12:26.760 --> 00:12:31.160]   or logic circuit or whatever we need to implement our conceptual design of a
[00:12:31.160 --> 00:12:34.600]   computer, whatever we can come up with, if we can specify it mathematically, we can
[00:12:34.600 --> 00:12:35.000]   build it.
[00:12:35.000 --> 00:12:42.240]   So if we're going to follow this sort of oddly Marshall exploration of early
[00:12:42.240 --> 00:12:46.320]   computing, Shannon in the thirties, getting rid of Shannon in the thirties would
[00:12:46.320 --> 00:12:47.560]   probably have a bigger impact.
[00:12:48.080 --> 00:12:50.640]   Then getting rid of Turing in the thirties.
[00:12:51.240 --> 00:12:56.240]   [inaudible]
[00:12:57.240 --> 00:13:00.240]   [inaudible]
[00:13:00.240 --> 00:13:01.960]   (upbeat music)

