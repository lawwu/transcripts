
[00:00:00.000 --> 00:00:02.580]   [guitar music]
[00:00:02.580 --> 00:00:10.320]   So the way you leapfrog, right,
[00:00:10.320 --> 00:00:13.200]   is you come up with an idea
[00:00:13.200 --> 00:00:15.680]   or you take a direction, perhaps secretly,
[00:00:15.680 --> 00:00:17.760]   that the other people aren't taking.
[00:00:17.760 --> 00:00:23.760]   And so the Cruz, Waymo, even Aurora.
[00:00:23.760 --> 00:00:27.200]   - I don't know Aurora, Zooks is the same stack as well.
[00:00:27.200 --> 00:00:28.840]   They're all the same code base even.
[00:00:28.840 --> 00:00:31.440]   They're all the same DARPA Urban Challenge code base.
[00:00:31.440 --> 00:00:34.880]   - So the question is, do you think there's a room
[00:00:34.880 --> 00:00:36.240]   for brilliance and innovation there
[00:00:36.240 --> 00:00:37.600]   that will change everything?
[00:00:37.600 --> 00:00:41.020]   Like say, okay, so I'll give you examples.
[00:00:41.020 --> 00:00:46.760]   It could be if revolution and mapping, for example,
[00:00:46.760 --> 00:00:50.160]   that allow you to map things,
[00:00:50.160 --> 00:00:52.960]   do HD maps of the whole world,
[00:00:52.960 --> 00:00:55.200]   all weather conditions somehow really well,
[00:00:55.200 --> 00:01:00.200]   or revolution and simulation
[00:01:00.200 --> 00:01:05.940]   to where all the way you said before becomes incorrect,
[00:01:05.940 --> 00:01:08.440]   that kind of thing.
[00:01:08.440 --> 00:01:10.300]   Any room for breakthrough innovation?
[00:01:10.300 --> 00:01:13.080]   - What I said before about,
[00:01:13.080 --> 00:01:15.400]   oh, they actually get the whole thing.
[00:01:15.400 --> 00:01:19.760]   I'll say this about, we divide driving into three problems
[00:01:19.760 --> 00:01:20.920]   and I actually haven't solved the third yet,
[00:01:20.920 --> 00:01:21.920]   but I have an idea how to do it.
[00:01:21.920 --> 00:01:23.220]   So there's the static.
[00:01:23.220 --> 00:01:25.120]   The static driving problem is assuming
[00:01:25.120 --> 00:01:27.240]   you are the only car on the road.
[00:01:27.240 --> 00:01:29.080]   And this problem can be solved 100%
[00:01:29.080 --> 00:01:31.120]   with mapping and localization.
[00:01:31.120 --> 00:01:32.840]   This is why farms work the way they do.
[00:01:32.840 --> 00:01:35.560]   If all you have to deal with is the static problem
[00:01:35.560 --> 00:01:37.280]   and you can statically schedule your machines,
[00:01:37.280 --> 00:01:39.800]   it's the same as like statically scheduling processes.
[00:01:39.800 --> 00:01:41.160]   You can statically schedule your tractors
[00:01:41.160 --> 00:01:43.240]   to never hit each other on their paths
[00:01:43.240 --> 00:01:44.600]   'cause you know the speed they go at.
[00:01:44.600 --> 00:01:47.260]   So that's the static driving problem.
[00:01:47.260 --> 00:01:51.040]   Maps only helps you with the static driving problem.
[00:01:51.040 --> 00:01:54.100]   - Yeah, the question about static driving.
[00:01:54.100 --> 00:01:55.900]   You've just made it sound like it's really easy.
[00:01:55.900 --> 00:01:57.440]   - Static driving is really easy.
[00:01:57.440 --> 00:02:00.140]   - How easy?
[00:02:00.140 --> 00:02:04.140]   'Cause the whole drifting out of lane,
[00:02:04.140 --> 00:02:05.900]   when Tesla drifts out of lane,
[00:02:05.900 --> 00:02:09.140]   it's failing on the fundamental static driving problem.
[00:02:09.140 --> 00:02:11.600]   - Tesla is drifting out of lane?
[00:02:11.600 --> 00:02:14.860]   The static driving problem is not easy for the world.
[00:02:14.860 --> 00:02:17.500]   The static driving problem is easy for one route.
[00:02:18.980 --> 00:02:21.080]   - One route and one weather condition
[00:02:21.080 --> 00:02:25.080]   with one state of lane markings
[00:02:25.080 --> 00:02:28.080]   and like no deterioration, no cracks in the road.
[00:02:28.080 --> 00:02:29.760]   - I'm assuming you have a perfect localizer.
[00:02:29.760 --> 00:02:31.340]   So that's solved for the weather condition
[00:02:31.340 --> 00:02:32.720]   and the lane marking condition.
[00:02:32.720 --> 00:02:34.840]   - But that's the problem is how do you have a perfect--
[00:02:34.840 --> 00:02:36.320]   - You can build, perfect localizers
[00:02:36.320 --> 00:02:37.720]   are not that hard to build.
[00:02:37.720 --> 00:02:38.560]   - Okay, come on now.
[00:02:38.560 --> 00:02:40.520]   With LIDAR?
[00:02:40.520 --> 00:02:41.360]   - With LIDAR, yeah.
[00:02:41.360 --> 00:02:42.180]   - Oh, with LIDAR, okay.
[00:02:42.180 --> 00:02:43.560]   - With LIDAR, yeah, but you use LIDAR, right?
[00:02:43.560 --> 00:02:45.760]   Like use LIDAR to build a perfect localizer.
[00:02:45.760 --> 00:02:48.060]   Building a perfect localizer without LIDAR,
[00:02:49.040 --> 00:02:50.120]   (sighs)
[00:02:50.120 --> 00:02:51.440]   it's gonna be hard.
[00:02:51.440 --> 00:02:52.880]   You can get 10 centimeters without LIDAR,
[00:02:52.880 --> 00:02:54.360]   you can get one centimeter with LIDAR.
[00:02:54.360 --> 00:02:56.400]   - I'm not even concerned about the one or 10 centimeters.
[00:02:56.400 --> 00:02:59.800]   I'm concerned if every once in a while you're just way off.
[00:02:59.800 --> 00:03:03.080]   - Yeah, so this is why you have to
[00:03:03.080 --> 00:03:07.120]   carefully make sure you're always tracking your position.
[00:03:07.120 --> 00:03:08.840]   You wanna use LIDAR camera fusion,
[00:03:08.840 --> 00:03:11.560]   but you can get the reliability of that system
[00:03:11.560 --> 00:03:15.120]   up to 100,000 miles
[00:03:15.120 --> 00:03:16.800]   and then you write some fallback condition
[00:03:16.800 --> 00:03:19.260]   where it's not that bad if you're way off, right?
[00:03:19.260 --> 00:03:20.860]   I think that you can get it to the point,
[00:03:20.860 --> 00:03:21.900]   it's like as will be,
[00:03:21.900 --> 00:03:24.700]   that you're never in a case where you're way off
[00:03:24.700 --> 00:03:25.540]   and you don't know it.
[00:03:25.540 --> 00:03:27.300]   - Yeah, okay, so this is brilliant.
[00:03:27.300 --> 00:03:28.220]   So that's the static.
[00:03:28.220 --> 00:03:29.360]   - Static.
[00:03:29.360 --> 00:03:33.060]   - We can, especially with LIDAR and good HD maps,
[00:03:33.060 --> 00:03:34.140]   you can solve that problem.
[00:03:34.140 --> 00:03:34.980]   - Easy.
[00:03:34.980 --> 00:03:37.580]   - No, I just disagree with your word easy.
[00:03:37.580 --> 00:03:39.020]   - The static problem's so easy.
[00:03:39.020 --> 00:03:41.100]   - Very typical for you to say something's easy.
[00:03:41.100 --> 00:03:41.940]   I got it.
[00:03:41.940 --> 00:03:44.020]   It's not as challenging as the other ones, okay.
[00:03:44.020 --> 00:03:45.860]   - Well, it's, okay, maybe it's obvious how to solve it.
[00:03:45.860 --> 00:03:46.940]   The third one's the hardest.
[00:03:46.940 --> 00:03:47.780]   So where do we get,
[00:03:47.780 --> 00:03:49.020]   and a lot of people don't even think about the third one
[00:03:49.020 --> 00:03:50.740]   and even see it as different from the second one.
[00:03:50.740 --> 00:03:52.840]   So the second one is dynamic.
[00:03:52.840 --> 00:03:54.060]   The second one is like,
[00:03:54.060 --> 00:03:55.720]   say there's an obvious examples,
[00:03:55.720 --> 00:03:57.480]   like a car stopped at a red light, right?
[00:03:57.480 --> 00:03:59.640]   You can't have that car in your map
[00:03:59.640 --> 00:04:00.840]   because you don't know whether that car
[00:04:00.840 --> 00:04:02.000]   is gonna be there or not.
[00:04:02.000 --> 00:04:05.080]   So you have to detect that car in real time
[00:04:05.080 --> 00:04:07.800]   and then you have to do the appropriate action, right?
[00:04:07.800 --> 00:04:11.920]   Also, that car is not a fixed object.
[00:04:11.920 --> 00:04:12.840]   That car may move
[00:04:12.840 --> 00:04:15.840]   and you have to predict what that car will do, right?
[00:04:15.840 --> 00:04:17.960]   So this is the dynamic problem.
[00:04:17.960 --> 00:04:18.800]   - Yeah.
[00:04:18.800 --> 00:04:19.920]   - So you have to deal with this.
[00:04:19.920 --> 00:04:22.000]   This involves, again,
[00:04:22.000 --> 00:04:24.900]   like you're gonna need models of other people's behavior.
[00:04:24.900 --> 00:04:27.280]   - Do you, are you including in that,
[00:04:27.280 --> 00:04:29.440]   I don't wanna step on the third one.
[00:04:29.440 --> 00:04:30.280]   - Oh.
[00:04:30.280 --> 00:04:34.080]   - But are you including in that your influence on people?
[00:04:34.080 --> 00:04:35.320]   - Ah, that's the third one.
[00:04:35.320 --> 00:04:36.160]   - Okay.
[00:04:36.160 --> 00:04:36.980]   - That's the third one.
[00:04:36.980 --> 00:04:38.960]   We call it the counterfactual.
[00:04:38.960 --> 00:04:40.200]   - Yeah, brilliant. - And that.
[00:04:40.200 --> 00:04:41.440]   - I just talked to Judea Pearl
[00:04:41.440 --> 00:04:42.960]   who's obsessed with counterfactuals.
[00:04:42.960 --> 00:04:45.720]   - The counterfactual, oh yeah, yeah, I read his books.
[00:04:45.720 --> 00:04:47.880]   - So the static and the dynamic.
[00:04:47.880 --> 00:04:49.080]   - Yeah.
[00:04:49.080 --> 00:04:51.840]   - Our approach right now for lateral
[00:04:51.840 --> 00:04:54.680]   will scale completely to the static and dynamic.
[00:04:54.680 --> 00:04:58.440]   The counterfactual, the only way I have to do it yet,
[00:04:58.440 --> 00:05:01.080]   the thing that I wanna do once we have all of these cars
[00:05:01.080 --> 00:05:03.880]   is I wanna do reinforcement learning on the world.
[00:05:03.880 --> 00:05:05.980]   I'm always gonna turn the exploiter up to max.
[00:05:05.980 --> 00:05:07.540]   I'm not gonna have them explore.
[00:05:07.540 --> 00:05:09.880]   But the only real way to get at the counterfactual
[00:05:09.880 --> 00:05:11.200]   is to do reinforcement learning
[00:05:11.200 --> 00:05:13.440]   because the other agents are humans.
[00:05:13.440 --> 00:05:15.760]   (whooshing)
[00:05:15.760 --> 00:05:18.340]   (upbeat music)
[00:05:18.340 --> 00:05:20.660]   (whooshing)
[00:05:20.660 --> 00:05:22.980]   (whooshing)
[00:05:22.980 --> 00:05:25.300]   (whooshing)
[00:05:25.300 --> 00:05:27.620]   (whooshing)
[00:05:27.620 --> 00:05:29.940]   (whooshing)
[00:05:29.940 --> 00:05:39.940]   [BLANK_AUDIO]

