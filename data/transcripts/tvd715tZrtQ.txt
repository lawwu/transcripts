
[00:00:00.000 --> 00:00:02.720]   So here's the script that we've been using so far.
[00:00:02.720 --> 00:00:05.440]   We have our config defined in a dictionary,
[00:00:05.440 --> 00:00:10.280]   and we're creating a Weights & Biases run using wandb.ini.
[00:00:10.280 --> 00:00:12.200]   We're passing our config to that,
[00:00:12.200 --> 00:00:15.880]   and we're referencing that config throughout the script.
[00:00:15.880 --> 00:00:17.880]   And then when we want to log metrics,
[00:00:17.880 --> 00:00:19.880]   we're passing in a dictionary of the metrics
[00:00:19.880 --> 00:00:21.280]   that we're trying to improve,
[00:00:21.280 --> 00:00:24.320]   and any other details that might change throughout training.
[00:00:24.320 --> 00:00:26.880]   So I'm going to run our cell,
[00:00:26.880 --> 00:00:30.520]   and Weights & Biases will output a link to that runs page.
[00:00:30.520 --> 00:00:32.840]   We can click to navigate to that run
[00:00:32.840 --> 00:00:35.840]   and view our Weights & Biases workspace.
[00:00:35.840 --> 00:00:37.160]   Once we navigate to the run
[00:00:37.160 --> 00:00:38.880]   in the Weights & Biases workspace,
[00:00:38.880 --> 00:00:41.560]   we can see our metrics streaming it in real time.
[00:00:41.560 --> 00:00:44.480]   There are some plots created automatically for us
[00:00:44.480 --> 00:00:46.440]   to display our logged data.
[00:00:46.440 --> 00:00:49.320]   Unlike static plots you might make in Matplotlib
[00:00:49.320 --> 00:00:50.880]   or something like that,
[00:00:50.880 --> 00:00:53.440]   we can go in and interactively customize them
[00:00:53.440 --> 00:00:56.000]   to display our metrics how we would like
[00:00:56.000 --> 00:00:58.960]   by adding some smoothing or changing our axes.
[00:00:58.960 --> 00:01:02.240]   We can also add new panels to visualize our logged data
[00:01:02.240 --> 00:01:05.120]   in other ways to dive deeper into our runs.
[00:01:05.120 --> 00:01:07.880]   Weights & Biases supports lots of different visualizations
[00:01:07.880 --> 00:01:10.560]   that are helpful when running machine learning projects.
[00:01:10.560 --> 00:01:15.040]   Weights & Biases also captures system metrics automatically,
[00:01:15.040 --> 00:01:18.720]   like GPU utilization and CPU utilization.
[00:01:18.720 --> 00:01:20.080]   These are useful to have
[00:01:20.080 --> 00:01:21.440]   to make sure you're getting the most
[00:01:21.440 --> 00:01:23.680]   out of your expensive compute.
[00:01:23.680 --> 00:01:25.360]   If we navigate to the overview tab,
[00:01:25.360 --> 00:01:27.120]   we can see useful information
[00:01:27.120 --> 00:01:29.440]   that Weights & Biases has automatically captured
[00:01:29.440 --> 00:01:31.680]   that helps with reproducibility.
[00:01:31.680 --> 00:01:34.320]   I can see which environment I'm using,
[00:01:34.320 --> 00:01:38.120]   who ran the code, when, on what machine,
[00:01:38.120 --> 00:01:39.920]   and what command was used to run it.
[00:01:39.920 --> 00:01:45.760]   This is also where we can see the config that we passed in
[00:01:45.760 --> 00:01:48.040]   and verify that Weights & Biases is keeping track
[00:01:48.040 --> 00:01:49.800]   of all of those hyperparameters.
[00:01:49.800 --> 00:01:52.360]   So this is a runs page,
[00:01:52.360 --> 00:01:54.960]   but we also have the option to visit the project page,
[00:01:54.960 --> 00:01:56.720]   which you can find by using the breadcrumbs
[00:01:56.720 --> 00:01:58.440]   in the navigation bar.
[00:01:58.440 --> 00:02:00.040]   If we navigate to the project page,
[00:02:00.040 --> 00:02:02.960]   we'll be able to see multiple runs on one page
[00:02:02.960 --> 00:02:05.040]   and compare all of them there.
[00:02:05.040 --> 00:02:07.440]   In the next video, we'll log a few more runs
[00:02:07.440 --> 00:02:10.280]   and we'll see lots of the ways that you can compare
[00:02:10.280 --> 00:02:12.080]   and analyze them in Weights & Biases.

