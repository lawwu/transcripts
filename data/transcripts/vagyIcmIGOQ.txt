
[00:00:00.400 --> 00:00:05.460]   No one anywhere who's serious believes that cookie banners does anything good for anyone,
[00:00:05.460 --> 00:00:07.420]   yet we've been unable to get rid of it.
[00:00:07.420 --> 00:00:09.720]   This is the thing that really gets me about cookie banners too.
[00:00:09.720 --> 00:00:11.280]   It's not just the EU.
[00:00:11.280 --> 00:00:12.900]   It's the entire world.
[00:00:12.900 --> 00:00:16.060]   You can't hide from cookie banners anywhere on this planet.
[00:00:16.060 --> 00:00:21.880]   If you go to goddamn Mars on one of Elon's rockets and you try to access a webpage,
[00:00:21.880 --> 00:00:23.180]   you will still see a cookie banner.
[00:00:23.180 --> 00:00:26.040]   No one in the universe is safe from this nonsense.
[00:00:26.040 --> 00:00:29.020]   It sometimes feels like we're barely better off.
[00:00:29.500 --> 00:00:34.280]   Like, webpages aren't that different from what they were in the late 90s, early 2000s.
[00:00:34.280 --> 00:00:35.460]   They're still just forms.
[00:00:35.460 --> 00:00:37.280]   They're still just right to databases.
[00:00:37.280 --> 00:00:42.800]   A lot of people, I think, are very uncomfortable with the fact that they are essentially crud monkeys.
[00:00:42.800 --> 00:00:49.280]   They just make systems that create, read, update, or delete rows in a database.
[00:00:49.280 --> 00:00:55.880]   And they have to compensate for that existential dread by overcomplicating things.
[00:00:55.880 --> 00:00:59.420]   That's a huge part of the satisfaction of driving a race car.
[00:00:59.420 --> 00:01:06.340]   It's driving it at the edge of adhesion, as we call it, where you're essentially just a tiny movement away from spinning out.
[00:01:06.340 --> 00:01:07.280]   It doesn't take much.
[00:01:07.280 --> 00:01:08.580]   Then the car starts rotating.
[00:01:08.580 --> 00:01:12.380]   Once it starts rotating, you lose grip and you're going for the wall.
[00:01:13.340 --> 00:01:26.820]   The following is a conversation with David Heinemeyer Hansen, also known as DHH.
[00:01:27.240 --> 00:01:36.440]   He is a legend in the programming and tech world, brilliant and insightful, sometimes controversial, and always fun to talk to.
[00:01:36.440 --> 00:01:47.980]   He's the creator of Ruby on Rails, which is an influential web development framework behind many websites used by millions of people, including Shopify, GitHub, and Airbnb.
[00:01:47.980 --> 00:01:56.080]   He is the co-owner and CTO of 37 Signals that created Basecamp, Hay, and Once.
[00:01:56.080 --> 00:02:03.620]   He is a New York Times bestselling author, together with his co-author, Jason Fried, of four books.
[00:02:03.620 --> 00:02:09.360]   Rework, Remote, Getting Real, and It Doesn't Have to be Crazy at Work.
[00:02:10.040 --> 00:02:18.440]   And on top of that, he's also a race car driver, including being a class winner at the legendary 24-hour Le Mans race.
[00:02:18.440 --> 00:02:20.760]   This is the Lex Rupin Podcast.
[00:02:20.760 --> 00:02:26.740]   To support it, please check out our sponsors in the description and consider subscribing to this channel.
[00:02:26.740 --> 00:02:31.000]   And now, dear friends, here's DHH.
[00:02:31.000 --> 00:02:38.440]   For someone who became a legendary programmer, you officially got into programming late in life.
[00:02:39.000 --> 00:02:44.420]   And I guess that's because you tried to learn how to program a few times and you failed.
[00:02:44.420 --> 00:02:50.500]   So, can you tell me the full story, the saga of your failures to learn programming?
[00:02:50.500 --> 00:02:52.180]   Was Commodore 64 involved?
[00:02:52.180 --> 00:02:54.920]   Commodore 64 was the inspiration.
[00:02:54.920 --> 00:02:57.100]   I really wanted a Commodore 64.
[00:02:57.100 --> 00:02:59.840]   That was the first computer I ever sat down in front.
[00:02:59.840 --> 00:03:06.280]   And the way I sat down in front of it was I was five years old, and there was this one kid on my street who had a Commodore 64.
[00:03:06.760 --> 00:03:08.000]   No one else had a computer.
[00:03:08.000 --> 00:03:13.080]   So, we were all the kids just getting over there, and we were all playing Yer Kung Fu.
[00:03:13.080 --> 00:03:14.300]   I don't know if you've ever seen that game.
[00:03:14.300 --> 00:03:16.000]   It was one of the original fighting games.
[00:03:16.000 --> 00:03:17.300]   It's really a great game.
[00:03:17.300 --> 00:03:20.020]   And I was playing that for the first time at five years old.
[00:03:20.020 --> 00:03:26.960]   And we were like seven kids sitting up in this one kid's bedroom, all taking our turn to play the game.
[00:03:27.080 --> 00:03:30.100]   And I just found that unbelievably interesting.
[00:03:30.100 --> 00:03:35.000]   And I begged, and I begged, and I begged, my dad, could I get a computer?
[00:03:35.000 --> 00:03:37.220]   And he finally comes home.
[00:03:37.220 --> 00:03:38.180]   He's like, I got your computer.
[00:03:38.180 --> 00:03:41.160]   I was like, yes, my own Commodore 64.
[00:03:41.160 --> 00:03:46.340]   And he pulls out this black, green, and blue keyboard.
[00:03:46.780 --> 00:03:49.300]   That's an Armstrad 464.
[00:03:49.300 --> 00:03:52.040]   I was like, Dad, what's this?
[00:03:52.040 --> 00:03:54.420]   The disappointment.
[00:03:54.420 --> 00:03:56.740]   This is not a Commodore 64.
[00:03:56.740 --> 00:03:58.140]   But it was a computer.
[00:03:58.620 --> 00:04:04.660]   So, I got my first computer at essentially six years old, that Armstrad 464.
[00:04:04.660 --> 00:04:07.580]   And, of course, the first thing I wanted to do, I wanted to play video games.
[00:04:07.580 --> 00:04:16.600]   And I think the computer, which he, by the way, had traded for a TV and a stereo recorder or something like that, came with, like, two games.
[00:04:16.600 --> 00:04:20.440]   One was this Frogger game where you had to escape from underground.
[00:04:20.440 --> 00:04:22.660]   It was actually kind of dark, like this frog.
[00:04:22.660 --> 00:04:23.880]   You're trying to get it out from underground.
[00:04:23.880 --> 00:04:25.600]   And I was just, I was pretty bad at it.
[00:04:25.600 --> 00:04:27.220]   And I only had those two games.
[00:04:27.320 --> 00:04:29.420]   And then I wanted more games.
[00:04:29.420 --> 00:04:37.040]   And one way to get more games when you're a kid who doesn't have a lot of money and can't just buy a bunch of games is to type them in yourself.
[00:04:37.040 --> 00:04:44.740]   Back in 84, 85, magazines would literally print source code at the back of their magazines.
[00:04:44.740 --> 00:04:46.580]   And you could just sit and type it in.
[00:04:46.580 --> 00:04:47.900]   So, I tried to do that.
[00:04:47.900 --> 00:04:53.280]   And it would take, like, two hours to print this game into the Armstrad.
[00:04:53.280 --> 00:04:57.300]   And, of course, I'd make some spelling mistake along the way and something wouldn't work.
[00:04:57.300 --> 00:04:59.920]   And the whole thing, I wasn't that good of English.
[00:04:59.920 --> 00:05:00.960]   I was born in Denmark.
[00:05:00.960 --> 00:05:05.280]   So, I was really trying to get into it because I wanted all these games.
[00:05:05.280 --> 00:05:06.440]   I didn't have the money to buy them.
[00:05:06.440 --> 00:05:10.020]   And I tried quite hard for quite a while to get into it.
[00:05:10.020 --> 00:05:10.920]   But it just never clicked.
[00:05:11.180 --> 00:05:13.740]   And then I discovered the magic of piracy.
[00:05:13.740 --> 00:05:21.980]   And after that, I kind of basically just took some time off from learning the program because, well, now suddenly I had access to all sorts of games.
[00:05:21.980 --> 00:05:25.780]   So, that was the first attempt, like, around six, seven years old.
[00:05:26.740 --> 00:05:30.020]   And what's funny is I remember these fragments.
[00:05:30.020 --> 00:05:33.020]   I remember not understanding the purpose of a variable.
[00:05:33.020 --> 00:05:37.500]   If there's a thing and you assign something, why would you assign another thing to it?
[00:05:37.500 --> 00:05:39.700]   So, for some reason, I understand constants.
[00:05:39.700 --> 00:05:42.280]   Like, constants made sense to me, but variables didn't.
[00:05:43.240 --> 00:05:45.240]   Then, maybe I'm 11 or 12.
[00:05:45.240 --> 00:05:48.320]   I've gotten into the Amiga at this point.
[00:05:48.320 --> 00:05:49.340]   The Amiga, by the way.
[00:05:49.340 --> 00:05:52.680]   Still, perhaps my favorite computer of all time.
[00:05:52.680 --> 00:05:57.400]   I mean, this is one of those things where you're like, people get older and they're like, oh, the music from the 80s was amazing.
[00:05:57.400 --> 00:06:09.840]   To me, even as someone who loves computers, who loves new computers, the Amiga was this magical machine that was made by the same company that produced the Commodore 64.
[00:06:09.840 --> 00:06:15.420]   And I got the Amiga 500, I think, in 87.
[00:06:15.420 --> 00:06:17.060]   Look at this sexy thing.
[00:06:17.060 --> 00:06:19.220]   That is a sexy machine right there.
[00:06:19.220 --> 00:06:23.680]   This is from an age, by the way, where computing wasn't global in the same sense.
[00:06:23.680 --> 00:06:26.820]   The different territories had different computers that were popular.
[00:06:26.820 --> 00:06:32.280]   The Amiga was really popular in Europe, but it wasn't very popular at all in the U.S., as far as I understand it.
[00:06:32.280 --> 00:06:33.600]   It wasn't popular in Japan.
[00:06:33.600 --> 00:06:35.480]   There were just different machines.
[00:06:35.480 --> 00:06:38.300]   The Apple II was a big thing in the U.S.
[00:06:38.300 --> 00:06:42.040]   I'd never even heard of Apple in the 80s in Copenhagen.
[00:06:42.040 --> 00:06:46.740]   But the Amiga 500 was the machine that brought me to want to try it again.
[00:06:46.740 --> 00:06:47.860]   And you know what's funny?
[00:06:47.860 --> 00:06:56.240]   The reason I wanted to try it again was I remembered the first time to learn, and then there was this programming language that was literally called Easy Amo.
[00:06:56.240 --> 00:06:59.000]   Amos, like the easy version of Amos.
[00:06:59.000 --> 00:07:01.960]   I'm like, if it's Easy Amos, how hard can it be?
[00:07:01.960 --> 00:07:03.860]   I got to be able to figure this out.
[00:07:03.860 --> 00:07:06.160]   And this time I tried harder.
[00:07:06.160 --> 00:07:08.660]   I got into conditionals.
[00:07:08.660 --> 00:07:09.700]   I got into loops.
[00:07:09.700 --> 00:07:10.540]   I got into all these things.
[00:07:10.540 --> 00:07:12.540]   And I still, I couldn't do it.
[00:07:13.640 --> 00:07:18.620]   And on the second attempt, I really got to the point, like, maybe this is, maybe I'm not smart enough.
[00:07:18.620 --> 00:07:20.560]   Maybe programming is just nothing.
[00:07:20.560 --> 00:07:22.240]   Maybe it's too much math.
[00:07:22.240 --> 00:07:25.820]   Like, I like math in this sort of superficial way.
[00:07:25.820 --> 00:07:31.740]   I don't like it in the deep way that some of my, perhaps, slightly nerdier friends did, who I had tremendous respect for.
[00:07:31.800 --> 00:07:33.560]   I'm like, I'm not that person.
[00:07:33.560 --> 00:07:37.340]   I'm not the math geek who's going to figure it all out.
[00:07:37.340 --> 00:07:46.700]   So after that attempt with Easy Amos and failing to even get, I don't even think I completed one even very basic game.
[00:07:47.140 --> 00:07:49.140]   I thought, the program's just not for me.
[00:07:49.140 --> 00:07:50.520]   I'm going to have to do something else.
[00:07:50.520 --> 00:07:51.480]   I still love computers.
[00:07:51.480 --> 00:07:52.980]   I still love video games.
[00:07:52.980 --> 00:07:59.560]   I actually, at that time, had already begun making friends with people who knew how to program, who weren't even programming Easy Amos.
[00:07:59.560 --> 00:08:01.100]   They were programming freaking Assembler.
[00:08:01.100 --> 00:08:08.900]   And I would sit down and just go, how do you, the moves and the memories and the copies, how do you even do this?
[00:08:08.900 --> 00:08:14.660]   I don't even understand how you go from this to Amiga demos, for example.
[00:08:14.660 --> 00:08:15.780]   That was the big thing with the Amiga.
[00:08:15.780 --> 00:08:18.100]   It had this wonderful demo scene in Europe.
[00:08:18.100 --> 00:08:35.040]   It's this really interesting period of time in the Amiga's history where you had all these programmers spread out, mostly all over Europe, who would compete on graphic competitions, where you could probably bring one of these up on YouTube.
[00:08:35.040 --> 00:08:44.020]   This thing, they would make these little, almost like music videos, combining some MIDI music, combining some cool graphics.
[00:08:44.020 --> 00:08:52.080]   And they would do all of it in like 4K, 4 kilobytes, that is not 4Ks of revolution, 4 kilobytes of memory.
[00:08:52.080 --> 00:08:54.300]   And I just thought that was such a cool scene.
[00:08:54.300 --> 00:08:56.920]   This was obviously pre-internet.
[00:08:56.920 --> 00:09:01.440]   It was even pre-BBS, bulletin board systems, to some extent.
[00:09:01.800 --> 00:09:10.300]   It was you swap your demo software with someone else by sending them a disk in the mail, like the 3.5s.
[00:09:10.300 --> 00:09:13.440]   And I just, I was enamored with that whole scene.
[00:09:13.440 --> 00:09:15.340]   I was enamored with what they were able to create.
[00:09:15.340 --> 00:09:19.540]   And I just wanted to be a part of it, even though I kind of didn't have any skills to contribute.
[00:09:20.080 --> 00:09:22.640]   And that's how I got into running BBSs.
[00:09:22.640 --> 00:09:28.720]   I didn't learn programming then, and I wouldn't learn programming until much later, until I was almost 20 years old.
[00:09:28.720 --> 00:09:39.600]   The bulletin board systems existed in this funny space where they were partly a service to the demo scenes, allowing all these demo groups to distribute their amazing demos.
[00:09:40.140 --> 00:09:44.220]   And then it was also a place to trade piracy software, pirated software.
[00:09:44.220 --> 00:09:50.740]   And I ended up starting one of those when I was 14 years old in my tiny little bedroom in Copenhagen.
[00:09:50.740 --> 00:09:53.840]   I had my, at that point, Amiga 4000.
[00:09:53.840 --> 00:09:59.300]   I had three telephone lines coming into my tiny room.
[00:09:59.300 --> 00:09:59.820]   Nice.
[00:09:59.820 --> 00:10:02.600]   Which is funny because, again, I'm 14 years old.
[00:10:02.600 --> 00:10:07.340]   By the time I was installing my third line, you had to get someone from the telephone company to come do it.
[00:10:07.460 --> 00:10:11.280]   I get this guy, and he's just looking around like, what is this?
[00:10:11.280 --> 00:10:16.440]   Why the hell is a 14-year-old having three phone lines into their tiny little bedroom?
[00:10:16.440 --> 00:10:18.600]   What are, what's going on here?
[00:10:18.600 --> 00:10:23.340]   Why are all these modems blinking red and black and making funny sounds?
[00:10:23.340 --> 00:10:24.360]   Did your parents know?
[00:10:24.360 --> 00:10:26.860]   They did, and they didn't.
[00:10:26.860 --> 00:10:28.480]   They knew I had the phone lines.
[00:10:28.480 --> 00:10:29.420]   They knew I had the computer.
[00:10:29.620 --> 00:10:38.060]   I don't think they really understood that I was trading pirated software that was both illegal and whatever else was going on.
[00:10:38.060 --> 00:10:47.940]   We should probably say that in Europe, maybe you can comment on this, especially in Eastern Europe, but Europe in general, piracy, I think, was more acceptable than it was in the United States.
[00:10:47.940 --> 00:10:48.620]   I don't know.
[00:10:48.620 --> 00:10:51.580]   Maybe it's just my upbringing.
[00:10:51.580 --> 00:10:53.460]   Even that conversation wasn't present.
[00:10:53.460 --> 00:11:00.140]   I never spoke to anyone growing up in Denmark who had any moral qualms whatsoever about piracy.
[00:11:00.140 --> 00:11:03.680]   It was just completely accepted that you're a kid.
[00:11:03.680 --> 00:11:05.020]   You want a lot of games.
[00:11:05.020 --> 00:11:06.200]   You don't have a lot of money.
[00:11:06.200 --> 00:11:06.920]   What do you do?
[00:11:06.920 --> 00:11:08.000]   You trade.
[00:11:08.000 --> 00:11:10.260]   Some people would occasionally buy a game.
[00:11:10.660 --> 00:11:17.560]   I mean, I once bought a Sega Master System, and I bought one game because that was what I could afford.
[00:11:17.560 --> 00:11:18.920]   I got Afterburner 2.
[00:11:18.920 --> 00:11:20.340]   I don't know if you've ever played that game.
[00:11:20.340 --> 00:11:27.520]   It's pretty bad implementation on the Sega Master System, but it was like 600 crowners.
[00:11:27.520 --> 00:11:32.080]   And I was making money at that time doing newspaper delivery.
[00:11:32.080 --> 00:11:35.760]   I had to do that for a month to afford one game.
[00:11:36.200 --> 00:11:39.960]   I like video games way too much to wait a month just to get one game.
[00:11:39.960 --> 00:11:42.300]   So piracy was just the way you did it.
[00:11:42.300 --> 00:11:50.040]   And that was how I got into running this bulletin board system, being part of the demo scene, being part of the piracy scene to some extent.
[00:11:50.040 --> 00:11:55.320]   And then also, at some point, realizing, oh, you can actually also make money on this.
[00:11:55.320 --> 00:12:00.360]   And this can fund buying more phone lines and buying more modems and buying more Amigas.
[00:12:00.360 --> 00:12:02.620]   Oh, yeah, that was one of the demo parties.
[00:12:02.620 --> 00:12:04.120]   These were amazing things.
[00:12:04.120 --> 00:12:05.940]   What am I looking at?
[00:12:06.040 --> 00:12:06.520]   Isn't that amazing?
[00:12:06.520 --> 00:12:08.080]   Look at all those CRT monitors.
[00:12:08.080 --> 00:12:09.240]   All these CRT monitors.
[00:12:09.240 --> 00:12:14.540]   Again, when I was 14, I don't understand fully why my parents allowed this.
[00:12:14.920 --> 00:12:27.900]   But I traveled from Copenhagen, the capital of Denmark, to Aus, this tiny little town in Judland, on the train with a bunch of dudes who were like late teens and their 20s.
[00:12:27.900 --> 00:12:28.780]   I'm 14 years old.
[00:12:28.940 --> 00:12:35.040]   I'm lugging my 14-inch CRT monitor with my computer in the back to go to the party.
[00:12:35.040 --> 00:12:36.080]   That was what it was called.
[00:12:36.080 --> 00:12:38.200]   That was the biggest demo scene party at that time.
[00:12:38.200 --> 00:12:40.140]   And it was exactly as you see in that picture.
[00:12:40.140 --> 00:12:47.640]   Thousands of people just lining up with their computers, programming demos all day long, and trading these things back and forth.
[00:12:48.320 --> 00:12:49.420]   That's kind of awesome.
[00:12:49.420 --> 00:12:50.260]   Not going to lie.
[00:12:50.260 --> 00:12:51.320]   It's a little ridiculous.
[00:12:51.320 --> 00:12:53.080]   It's totally awesome.
[00:12:53.080 --> 00:12:57.760]   And I miss it in ways where the internet has connected people in some ways.
[00:12:57.800 --> 00:13:07.000]   But the connection you get from sitting right next to someone else who has their own CRT monitor, who's lugged it halfway around the country to get there, is truly special.
[00:13:07.000 --> 00:13:10.020]   Because it was also just this burst of creativity.
[00:13:10.020 --> 00:13:11.320]   You're constantly running around.
[00:13:11.320 --> 00:13:14.120]   You're constantly surrounded by people who are really good at what they could do.
[00:13:14.120 --> 00:13:15.600]   They're really good at programming computers.
[00:13:15.600 --> 00:13:16.540]   It's infectious.
[00:13:16.540 --> 00:13:22.420]   It was part of that pang I felt then going like, oh, man, why can't I figure this out?
[00:13:22.420 --> 00:13:24.960]   I mean, why can't I even figure out Easy Amos?
[00:13:24.960 --> 00:13:27.320]   I mean, it's kind of frustrating.
[00:13:28.160 --> 00:13:30.240]   But on your third attempt, you're a little more successful.
[00:13:30.240 --> 00:13:33.560]   So third attempt is when I start getting it.
[00:13:33.560 --> 00:13:38.660]   This is when I start helping out, let's say, building things for the internet.
[00:13:38.660 --> 00:13:45.000]   So around 95, I think it is, or 96, I discovered the internet.
[00:13:45.000 --> 00:13:47.320]   Actually, in ninth grade, that was my first experience.
[00:13:47.320 --> 00:13:51.800]   I went to some university in Denmark.
[00:13:51.800 --> 00:13:54.320]   And in ninth grade, we had this excursion.
[00:13:55.100 --> 00:13:56.860]   And they sat us down in front of a computer.
[00:13:56.860 --> 00:13:59.940]   And the computer had Netscape Navigator, the first version.
[00:13:59.940 --> 00:14:02.340]   Or maybe it was even the precursor to that.
[00:14:02.340 --> 00:14:04.620]   And they had a text editor.
[00:14:04.620 --> 00:14:07.200]   And us kids just got like, hey, build something on the internet.
[00:14:07.200 --> 00:14:08.100]   And it was just HTML.
[00:14:08.100 --> 00:14:14.100]   And the first thing you do is like, oh, I can make the text blink by just putting in this tag and saving it.
[00:14:14.580 --> 00:14:16.840]   That was that moment.
[00:14:16.840 --> 00:14:22.940]   That was actually when I reawakened the urge to want to learn to program because I got a positive experience.
[00:14:22.940 --> 00:14:28.240]   All the other experiences I had with programming was I'd spend hours typing something in.
[00:14:28.240 --> 00:14:30.320]   I'd click run and it wouldn't work.
[00:14:30.320 --> 00:14:36.320]   And I'd get an error message that made no sense to me as a kid, either at six or seven or at 12.
[00:14:36.420 --> 00:14:39.940]   And here I am sitting in front of a computer connected to the internet.
[00:14:39.940 --> 00:14:41.500]   And I'm making text blink.
[00:14:41.500 --> 00:14:42.920]   I'm making it larger.
[00:14:42.920 --> 00:14:45.080]   I'm turning it into an H1 or an H2.
[00:14:45.080 --> 00:14:49.940]   And these guys out here, we just did it for like an hour and a half.
[00:14:49.940 --> 00:14:57.000]   And suddenly I go, oh, I can make things for the internet that someone in Germany can be able to access and see.
[00:14:57.000 --> 00:14:58.620]   And I don't have to ask anyone for permission.
[00:14:59.140 --> 00:15:00.180]   This is super cool.
[00:15:00.180 --> 00:15:01.160]   I got to do more of this.
[00:15:01.160 --> 00:15:02.660]   So I got into the internet.
[00:15:02.660 --> 00:15:04.420]   I got into working with HTML.
[00:15:04.420 --> 00:15:06.720]   And I still had all these friends from these demo parties.
[00:15:06.720 --> 00:15:10.660]   And I started working with them on creating gaming websites.
[00:15:10.660 --> 00:15:12.400]   I'd write about the video games.
[00:15:12.400 --> 00:15:13.140]   I'd review them.
[00:15:13.140 --> 00:15:18.960]   This was another good way of getting new video games was to walk down to some store and say like, hey, I'm a journalist.
[00:15:18.960 --> 00:15:20.760]   I'm like this 15-year-old kid.
[00:15:20.760 --> 00:15:22.060]   And they're looking at me.
[00:15:22.060 --> 00:15:22.960]   You're a journalist?
[00:15:22.960 --> 00:15:24.640]   Yeah, can I borrow some games?
[00:15:24.640 --> 00:15:28.180]   Because this was when games moved on to the PlayStation and these other things.
[00:15:28.260 --> 00:15:31.660]   You couldn't just as easily pirate, at least not at first.
[00:15:31.660 --> 00:15:33.240]   So I went down there, did all that.
[00:15:33.240 --> 00:15:37.240]   And that started the journey of the internet for me.
[00:15:37.240 --> 00:15:43.000]   It started working on these gaming websites, working with programmers, figuring out that I could do something.
[00:15:43.000 --> 00:15:44.300]   I could work on the HTML part.
[00:15:44.300 --> 00:15:46.480]   It's not really programming, but it kind of smells like it.
[00:15:46.480 --> 00:15:47.920]   You're talking to a computer.
[00:15:47.920 --> 00:15:50.160]   You're making it put text on the screen.
[00:15:50.160 --> 00:15:52.780]   And you're communicating with someone halfway around the world.
[00:15:52.780 --> 00:15:56.740]   So that became my pathway back into programming.
[00:15:56.880 --> 00:15:59.240]   And then slowly I picked up more and more of it.
[00:15:59.240 --> 00:16:06.780]   First website I did with someone, one of these programmers from the demo scene, that was dynamic, was ASP.net.
[00:16:06.780 --> 00:16:08.700]   It wasn't even actually called .net.
[00:16:08.700 --> 00:16:09.820]   That was what we started on.
[00:16:09.820 --> 00:16:11.220]   And then we moved on to PHP.
[00:16:11.220 --> 00:16:13.860]   And PHP was when I finally got it.
[00:16:13.860 --> 00:16:15.140]   When it finally clicked.
[00:16:16.140 --> 00:16:25.900]   And then all of that stuff started to make sense enough to me that I thought, I can do this.
[00:16:25.900 --> 00:16:32.640]   So would it be fair to say that we wouldn't have DHH without PHP and therefore you owe all your success to PHP?
[00:16:33.520 --> 00:16:34.760]   A hundred percent that's true.
[00:16:34.760 --> 00:16:42.300]   And it's even better than that because PHP to me didn't just give me a start in terms of making my own web applications.
[00:16:42.300 --> 00:16:44.260]   It actually gave me a bar.
[00:16:44.260 --> 00:16:51.600]   In many ways, I think the pinnacle of web developer ergonomics is late 90s PHP.
[00:16:52.220 --> 00:16:58.160]   You write this script, you FTP it to a server, and instantly it's deployed.
[00:16:58.160 --> 00:16:59.580]   Instantly it's available.
[00:16:59.580 --> 00:17:02.180]   You change anything in that file and you reload.
[00:17:02.180 --> 00:17:02.620]   Boom.
[00:17:02.620 --> 00:17:03.180]   It's right there.
[00:17:03.180 --> 00:17:04.740]   There's no web servers.
[00:17:04.740 --> 00:17:06.180]   There's no setup.
[00:17:06.420 --> 00:17:09.920]   There's just an Apache that runs ModPHP.
[00:17:09.920 --> 00:17:14.660]   And it was essentially the easiest way to get a dynamic web page up and going.
[00:17:14.660 --> 00:17:19.820]   And this is one of the things I've been chasing that high for basically the rest of my career.
[00:17:19.820 --> 00:17:25.540]   That it was so easy to make things for the internet in the mid to late 90s.
[00:17:25.540 --> 00:17:36.060]   How did we lose the sensibilities that allowed us to not just work this way, but get new people into the industry to give them their success experiences?
[00:17:36.060 --> 00:17:51.000]   That I had adding a freaking blink tag to an HTML page, FTPing a PHP page to an Apache web server without knowing really anything about anything, without knowing anything about frameworks, without knowing anything about setup.
[00:17:51.000 --> 00:17:58.080]   All of that stuff have really taken us to a place where it sometimes feels like we're barely better off.
[00:17:58.080 --> 00:18:03.320]   Like webpages aren't that different from what they were in the late 90s, early 2000s.
[00:18:03.320 --> 00:18:04.500]   They're still just forms.
[00:18:04.500 --> 00:18:06.340]   They still just write to databases.
[00:18:06.340 --> 00:18:11.920]   A lot of people, I think, are very uncomfortable with the fact that they are essentially crud monkeys.
[00:18:11.920 --> 00:18:18.320]   They just make systems that create, read, update, or delete rows in a database.
[00:18:18.320 --> 00:18:24.920]   And they have to compensate for that existential dread by overcomplicating things.
[00:18:24.920 --> 00:18:26.280]   Now, that's a bit of a character.
[00:18:26.280 --> 00:18:27.160]   There's more to it.
[00:18:27.160 --> 00:18:30.540]   And there's things you can learn for more sophisticated ways of thinking about this.
[00:18:30.540 --> 00:18:36.660]   But there's still an ideal here, which is why I was so happy you had Peter Levels on, because he still basically works like this.
[00:18:36.660 --> 00:18:38.720]   And I look at that and go, man, that's amazing.
[00:18:38.720 --> 00:18:40.280]   Yeah, you're chasing that high.
[00:18:40.280 --> 00:18:42.120]   He's been high all along.
[00:18:42.120 --> 00:18:42.420]   Yes.
[00:18:42.540 --> 00:18:47.540]   Using PHP, jQuery, and SQLite.
[00:18:47.540 --> 00:18:52.800]   I think it's amazing because he's proving that this isn't just a nostalgic dream.
[00:18:52.800 --> 00:18:54.420]   He's actually doing it.
[00:18:54.420 --> 00:18:55.780]   He's running all these businesses.
[00:18:55.780 --> 00:19:02.280]   Now, some of that is, as he would admit up first, up front, is that he's just one guy.
[00:19:02.280 --> 00:19:04.620]   And you can do different things when you're just one guy.
[00:19:04.760 --> 00:19:15.660]   When you're working in a team, when I started working on a team, when I started working with Jason Freed on Basecamp, we at first didn't use version control together.
[00:19:15.660 --> 00:19:17.480]   I used version control for myself.
[00:19:17.480 --> 00:19:18.840]   And then I thought, you know what?
[00:19:18.840 --> 00:19:23.360]   Designers, they're probably not smart enough to figure out CBS.
[00:19:23.360 --> 00:19:27.540]   And therefore, I'm just like, no, no, no, you just FTP it up.
[00:19:27.540 --> 00:19:28.420]   You just FTP it.
[00:19:28.420 --> 00:19:30.040]   I knew they knew how to do FTP.
[00:19:30.640 --> 00:19:34.140]   And then after the third time I had overridden their changes, I was like, God damn it.
[00:19:34.140 --> 00:19:37.960]   I guess I got to teach Jason CBS to not do that again.
[00:19:37.960 --> 00:19:49.360]   But I think there's still way more truth to the fact that we can work the way we did in the 90s, work the way Peter works today, even in the team context.
[00:19:49.360 --> 00:19:57.000]   And that we've been far too willing to hand over far too much of our developer ergonomics to the merchants of complexity.
[00:19:57.000 --> 00:19:59.840]   And you've been chasing that with Rails 8.
[00:19:59.840 --> 00:20:13.080]   So how do you bring all the cool features of a modern framework and make it no build, make it as easy to create something and to ship it as it was in the 90s with just PHP?
[00:20:13.080 --> 00:20:21.620]   It's very difficult for me to beat the Peter Lovell's approach of just, it's so easy to just ship some PHP.
[00:20:21.980 --> 00:20:23.080]   And it should be.
[00:20:23.080 --> 00:20:24.940]   Why should it be harder than that?
[00:20:24.940 --> 00:20:30.500]   Our computers today are almost infinitely faster than what they were in the 90s.
[00:20:30.500 --> 00:20:33.800]   So shouldn't we be able to work in even easier ways?
[00:20:33.800 --> 00:20:37.780]   We should be looking back on the 90s and go like, oh, that was way too complicated.
[00:20:37.780 --> 00:20:44.400]   Now we have more sophisticated technology that's way faster and it allows us to work in these easier to use ways.
[00:20:44.400 --> 00:20:45.520]   But that's not true.
[00:20:45.520 --> 00:20:51.480]   But now you can see the line I draw in my work with Ruby and Rails and especially with Rails 8.
[00:20:51.480 --> 00:21:02.380]   No build to me is reaching back to that 90s feeling and going, now we can do some of those things without giving up on all the progress.
[00:21:02.380 --> 00:21:04.220]   Because I do think you can get too nostalgic.
[00:21:04.220 --> 00:21:09.140]   I do think you can start just fantasizing that everything was better in the 90s.
[00:21:09.140 --> 00:21:09.860]   It wasn't.
[00:21:10.200 --> 00:21:11.080]   I mean, I was there.
[00:21:11.080 --> 00:21:12.440]   There was a lot of things that sucked.
[00:21:12.440 --> 00:21:23.780]   And if we can somehow find a way to combine the advantages and advances we've had over the past 20 years with that ease of developer ergonomics, we can win.
[00:21:23.780 --> 00:21:34.560]   No build is a rejection of the part of web development I've hated the most in the past 10, 15 years, which is the JavaScript scene.
[00:21:35.060 --> 00:21:37.720]   And I don't say that as someone who hates JavaScript.
[00:21:37.720 --> 00:21:41.760]   I mean, I often joke that JavaScript is my second favorite programmer language.
[00:21:41.760 --> 00:21:43.180]   It's a very distant second.
[00:21:43.180 --> 00:21:45.300]   Ruby is by far and away number one.
[00:21:45.300 --> 00:21:46.800]   But I actually like JavaScript.
[00:21:46.800 --> 00:21:49.020]   I don't think it's a bad language.
[00:21:49.020 --> 00:21:51.040]   It gets a lot of flack.
[00:21:51.040 --> 00:21:55.280]   People add a string of two plus a one and it gives something nonsense.
[00:21:55.280 --> 00:21:57.900]   And I just go like, yeah, but why would you do that?
[00:21:57.900 --> 00:21:58.600]   Just don't do that.
[00:21:58.600 --> 00:22:02.340]   The language is actually quite lovely, especially the modern version.
[00:22:02.340 --> 00:22:12.540]   And ES6 that really introduced a proper class syntax to it so I could work with JavaScript in many of the same ways that I love working with Ruby made things so much better.
[00:22:13.340 --> 00:22:24.620]   But in the early 2010s until quite recently, all of that advancement happened in preprocessing, happened in built pipelines.
[00:22:24.620 --> 00:22:29.020]   The browsers couldn't speak a dialect of JavaScript that was pleasant to work with.
[00:22:29.220 --> 00:22:42.340]   So everyone started to precompiling their JavaScript to be able to use more modern ways of programming with a browser that was seen as stuck with an ancient version of JavaScript that no one actually wanted to work with.
[00:22:42.340 --> 00:22:45.720]   And that made sense to me, but it was also deeply unpleasant.
[00:22:46.380 --> 00:22:55.440]   And I remember thinking during that time, the dark ages, as I referred to them with JavaScript, that this cannot be the final destination.
[00:22:55.440 --> 00:23:09.020]   There's no way that we have managed to turn the internet into such an unpleasant place to work where I would start working on a project in JavaScript using Webpack and all of these dependencies.
[00:23:09.380 --> 00:23:13.660]   And I would put it down for literally five minutes and the thing wouldn't compile anymore.
[00:23:13.660 --> 00:23:24.320]   The amount of churn that the JavaScript community, especially with its frameworks and its tooling, went through in the decade from 2010 to 2020 was absurd.
[00:23:24.900 --> 00:23:38.260]   And you had to be trapped inside of that asylum to not realize what an utterly perverse situation we had landed ourselves in.
[00:23:38.260 --> 00:23:41.440]   Why does everything break all the time?
[00:23:41.440 --> 00:23:44.040]   I mean, the joke wouldn't be just that the software would break.
[00:23:44.040 --> 00:23:45.140]   That would annoy me personally.
[00:23:45.140 --> 00:23:51.260]   But then I'd go on Hacker News and I'd see some thread on the latest JavaScript release of some framework.
[00:23:51.600 --> 00:23:57.900]   And the thread would be like, someone would ask, well, aren't we using the thing we just used three months ago?
[00:23:57.900 --> 00:24:00.060]   And people would be like, that thing is so outdated.
[00:24:00.060 --> 00:24:02.060]   That's so three months ago.
[00:24:02.060 --> 00:24:04.220]   You got to get with the new program.
[00:24:04.220 --> 00:24:07.640]   We're completely rewriting everything for the oomph-teen time.
[00:24:07.640 --> 00:24:13.980]   And anything you've learned in the framework you've been spending the last amount of time on, it's all useless.
[00:24:13.980 --> 00:24:16.080]   You got to throw everything out and you got to start over.
[00:24:16.080 --> 00:24:18.200]   Why aren't you doing it, stupid idiot?
[00:24:18.200 --> 00:24:22.200]   Is that a kind of mass hysteria that took over the developer community, you think?
[00:24:22.200 --> 00:24:25.380]   Like where you have to keep creating new frameworks and new frameworks?
[00:24:25.380 --> 00:24:28.880]   And are we past that dark age?
[00:24:28.880 --> 00:24:30.860]   I think we're getting out of it.
[00:24:30.860 --> 00:24:35.260]   And we're getting out of it because browsers have gotten so much better.
[00:24:35.260 --> 00:24:38.440]   There was a stagnation in browser technology.
[00:24:38.440 --> 00:24:41.940]   Some of it was an overhang all the way back from IE5.
[00:24:43.040 --> 00:24:52.680]   So IE5 essentially put the whole internet development experience into a deep freeze because Microsoft won the browser wars in the mid-2000s.
[00:24:52.680 --> 00:24:57.520]   And then they basically disbanded their browser development team because they're like, all right, job done.
[00:24:57.520 --> 00:24:59.600]   We don't need any more innovation on the internet.
[00:24:59.600 --> 00:25:03.840]   Can we just go back to writing Windows forms or something now that we control everything?
[00:25:03.840 --> 00:25:15.740]   And it really wasn't until obviously Firefox kind of kindled a little bit of something, then Chrome got into the scene and Google got serious about moving the web forward.
[00:25:15.740 --> 00:25:20.480]   That you had a kindling of maybe the browser could be better.
[00:25:20.480 --> 00:25:23.220]   Maybe the browser wasn't frozen in time in 2005.
[00:25:23.220 --> 00:25:29.380]   Maybe the browser could actually evolve like the development platform that it is.
[00:25:29.680 --> 00:25:40.680]   But then what happened was you had a lot of smart people who poured in to the web because the web turned out to be the greatest application development platform of all time.
[00:25:40.680 --> 00:25:42.460]   This was where all the money was being made.
[00:25:42.460 --> 00:25:45.160]   This was where all the billionaires were being minted.
[00:25:45.160 --> 00:25:49.400]   This was where the Facebooks and whatever of the world came to be.
[00:25:49.400 --> 00:25:55.500]   So you had all of this brain power applied to the problem of how to work with the web.
[00:25:55.500 --> 00:26:08.400]   And there were some very smart people with some, I'm sure, very good ideas who did not have programmer happiness as their motivation number one.
[00:26:08.400 --> 00:26:20.320]   They had other priorities and those priorities allowed them to discount and even rationalize the complexity they were injecting everywhere.
[00:26:20.320 --> 00:26:23.860]   Some of that complexity came from organizational structure.
[00:26:23.860 --> 00:26:28.480]   When you have a company like Facebook, for example, that does depend on the web and want to push it forward,
[00:26:28.480 --> 00:26:35.160]   but have sliced the development role, job, into these tiny little niches.
[00:26:35.160 --> 00:26:40.720]   I'm a front-end glob pipeline configurator.
[00:26:40.720 --> 00:26:41.680]   Oh, yeah.
[00:26:41.680 --> 00:26:44.220]   Well, I'm a front-end whatever engineer.
[00:26:44.220 --> 00:26:48.100]   And suddenly the web developer was no longer one person.
[00:26:48.100 --> 00:26:50.040]   It was 15 different roles.
[00:26:50.040 --> 00:26:52.200]   That in itself injected a ton of complexity.
[00:26:52.520 --> 00:27:01.060]   But I also want to give it the bold case here, which was that some of the complexity was necessary to get to where we are today.
[00:27:01.060 --> 00:27:03.420]   That the complexity was a bridge.
[00:27:03.420 --> 00:27:10.600]   It wasn't the destination, but we had to cross that bridge to get to where we are today, where browsers are, frankly, incredible.
[00:27:10.600 --> 00:27:17.760]   The JavaScript you can write in a text file and then serve on a web server for a browser to ingest is amazing.
[00:27:17.760 --> 00:27:19.380]   It's actually a really good experience.
[00:27:19.380 --> 00:27:20.760]   You don't need any preprocessing.
[00:27:20.760 --> 00:27:25.540]   And you could just write text files, send them to a browser, and you have an incredible development.
[00:27:25.540 --> 00:27:31.220]   And we should also say that it can kind of be broken, at least the HTML, but even the JavaScript could be a little bit broken.
[00:27:31.220 --> 00:27:33.000]   And it kind of still works.
[00:27:33.000 --> 00:27:43.520]   Like maybe half-ass works, but like just the amount of mess, of smelly code that a browser has to deal with is insane.
[00:27:43.860 --> 00:27:49.600]   This is one of the hardest problems in computing today, is to parse the entire internet.
[00:27:49.600 --> 00:28:02.840]   Because thankfully for us as web developers, but perhaps not so much for the browser developers, every web page that has ever been created, minus the brief period with Flash, still runs today.
[00:28:03.700 --> 00:28:10.100]   The web page I did in ninth grade would render on a modern browser today, 30 years later.
[00:28:10.100 --> 00:28:12.580]   That is completely crazy.
[00:28:12.580 --> 00:28:20.260]   When you think about the amount of evolution we've had with the web, how much better we've made it, how many more standards browsers have adopted.
[00:28:20.700 --> 00:28:30.920]   It's essentially an Apollo project today to create a new browser, which is why it doesn't happen very often, which is why even companies like Microsoft have to throw in the towel and say, we can't do it.
[00:28:30.920 --> 00:28:33.700]   Now, I actually don't think that's good for the web.
[00:28:33.700 --> 00:28:39.760]   There is the danger of the monoculture if we just get a single browser engine that runs everything, and we are in danger of that.
[00:28:39.980 --> 00:28:45.820]   I love the fact that the Ladybird project, for example, is trying to make a new browser engine from scratch.
[00:28:45.820 --> 00:28:47.160]   I've supported that project.
[00:28:47.160 --> 00:28:49.140]   I would encourage people to look into that.
[00:28:49.140 --> 00:28:52.180]   It's really a wonderful thing.
[00:28:52.180 --> 00:28:56.820]   It's staffed by a bunch of people who worked on other browser projects in the past.
[00:28:56.820 --> 00:28:58.840]   Truly independent web browser.
[00:28:58.840 --> 00:29:00.320]   We really need that.
[00:29:00.860 --> 00:29:14.340]   But I can hold that thought in my head at the same time I hold the thought in my head that Google's Chrome was pivotal to the web surviving as the premier web development platform.
[00:29:14.340 --> 00:29:37.960]   If it had not been for Google and their entire business, depending on a thriving open web, Apple, Microsoft, I think would have been just as fine to see the web go away, to disappear into being something that's just served native mobile applications and native desktop applications that they could completely control.
[00:29:37.960 --> 00:29:42.440]   So I have all sorts of problems with Google, but it's not Chrome.
[00:29:42.720 --> 00:29:53.840]   Chrome is a complete gift to web developers everywhere, to the web as a development platform, and they deserve an enormous amount of credit, I think, for that.
[00:29:53.840 --> 00:30:12.520]   Even if it's entangled with their business model and half of Chrome is code that spies on you or informs targeted ads and a bunch of things I'm not a big fan of, I can divorce that from the fact that we need champions in the corner of the web who have trillions of dollars.
[00:30:12.520 --> 00:30:16.460]   Of market cap value riding on the open web.
[00:30:16.460 --> 00:30:20.360]   We're going to take tangents upon tangents upon tangents upon tangents, so let's go to Chrome.
[00:30:20.360 --> 00:30:27.200]   I think Chrome positive impact on humanities is immeasurable for reasons that you just described.
[00:30:27.760 --> 00:30:35.460]   On the technology front, the features they presented, the competition they created, it spurred on this wonderful flourishing of web technologies.
[00:30:35.460 --> 00:30:43.000]   But anyway, I have to ask you about the recent stuff with the DOJ, trying to split up Chrome and Google.
[00:30:43.000 --> 00:30:44.480]   Do you think this is a good idea?
[00:30:44.480 --> 00:30:46.340]   Do you think this does harm?
[00:30:47.220 --> 00:30:47.920]   It's a disaster.
[00:30:47.920 --> 00:30:57.860]   And I say that as someone who's been very sympathetic to the antitrust fight, because I do think we have antitrust problems in technology.
[00:30:57.860 --> 00:31:07.940]   But the one place where we don't have them, by and large, is with browsers, is with the tools we use to access the open web.
[00:31:08.160 --> 00:31:10.140]   First of all, we have Firefox.
[00:31:10.140 --> 00:31:13.040]   Now, Firefox is not doing all that great.
[00:31:13.040 --> 00:31:21.840]   And Firefox has been propped up by Google for many years to deter from exactly what's going on with the DOJ, that they were the only game in town.
[00:31:21.840 --> 00:31:23.600]   Apple has Safari.
[00:31:23.600 --> 00:31:25.840]   I have a bunch of problems with Apple, too.
[00:31:25.840 --> 00:31:27.120]   But I love Safari.
[00:31:27.120 --> 00:31:36.220]   I love the fact that we have a Premiere browser running on a Premiere operating system, that people can't turn the web into just a Chrome experience.
[00:31:36.220 --> 00:31:44.140]   But I also think that the open web needs this trillion-dollar champion, or at least benefits from it.
[00:31:44.140 --> 00:31:46.800]   Maybe it doesn't need it, but it certainly benefits from it.
[00:31:46.800 --> 00:31:53.820]   And of all the things that are wrong with monopoly formation in technology, Chrome is the last thing.
[00:31:53.820 --> 00:32:01.000]   And this is why I get so frustrated sometimes about the anti- or the monopoly fight, that there are real problems.
[00:32:01.000 --> 00:32:07.760]   And we should be focusing on the Premiere problems first, like the toll booths on our mobile phones.
[00:32:07.760 --> 00:32:09.200]   They're a far bigger problem.
[00:32:09.200 --> 00:32:10.240]   It's not the open web.
[00:32:10.240 --> 00:32:12.120]   It's not the tools that we use to access the open web.
[00:32:12.120 --> 00:32:21.160]   If I don't want to use Chrome, if my customers of my businesses that run on the Internet don't want to use Chrome, they don't have to.
[00:32:21.160 --> 00:32:23.040]   We're never forced to go through it.
[00:32:23.040 --> 00:32:24.840]   The open Internet is still open.
[00:32:24.840 --> 00:32:31.760]   So I think it's a real shame that the DOJ has chosen to pursue Google in this way.
[00:32:31.760 --> 00:32:44.580]   I do think there are other things you can nail Google for, and there are ad monopoly, maybe, or the shenanigans they've done in controlling both sides of the ad ledger, that they both control the supply and the demand.
[00:32:44.580 --> 00:32:45.640]   There are problems.
[00:32:45.640 --> 00:32:46.880]   Chrome isn't it.
[00:32:47.060 --> 00:32:50.040]   And you end up making the web much worse.
[00:32:50.040 --> 00:32:59.300]   And this is the thing we always got to remember when we think about legislation, when we think about monopoly fights, is you may not like how things look today.
[00:32:59.780 --> 00:33:01.560]   And you may want to do something about it.
[00:33:01.560 --> 00:33:03.980]   But you may also make it worse.
[00:33:04.760 --> 00:33:10.760]   The good intentions behind the GDPR in Europe currently has amounted to what?
[00:33:10.760 --> 00:33:29.620]   Cookie banners that everyone on the Internet hates, that helps no one do anything better, anything more efficient, that saves no privacy in any way, shape or form, has been a complete boondoggle that has only enriched lawyers and accountants and bureaucrats.
[00:33:29.620 --> 00:33:39.320]   Yeah, you said that the cookie banner is a monument for why Europe is losing, is doing the worst of all the regions in tech.
[00:33:39.320 --> 00:33:45.600]   It's a monument to good intentions leading straight to hell.
[00:33:45.600 --> 00:33:52.760]   And the Europe is actually world class in good intentions leading straight to hell.
[00:33:52.760 --> 00:33:55.960]   So hell is the cookie accept button.
[00:33:55.960 --> 00:33:58.020]   They have to accept all cookies.
[00:33:58.160 --> 00:33:59.060]   That's what hell looks like.
[00:33:59.060 --> 00:34:03.280]   Over and over, you don't actually ever get to the web page.
[00:34:03.280 --> 00:34:16.840]   Just on a human scale, try to imagine how many hours every day are wasted clicking that away and how much harm we've done to the web as a platform that people enjoy because of them.
[00:34:16.840 --> 00:34:20.540]   The Internet is ugly in part because of cookie banners.
[00:34:20.540 --> 00:34:27.020]   Cookie banners were supposed to save us from advertisement and advertisement can make the web ugly.
[00:34:27.020 --> 00:34:28.320]   There's plenty of examples of that.
[00:34:28.320 --> 00:34:32.940]   But cookie banners made the entire Internet ugly in one fell swoop.
[00:34:32.940 --> 00:34:34.340]   And that's a complete tragedy.
[00:34:34.340 --> 00:34:42.120]   But what's even worse, and this is why I call it out as a monument to everything the EU gets wrong, is that we have known this for a decade.
[00:34:42.120 --> 00:34:47.740]   No one anywhere who's serious believes that cookie banners does anything good for anyone.
[00:34:47.740 --> 00:34:49.720]   Yet we've been unable to get rid of it.
[00:34:50.140 --> 00:34:54.120]   There's this one piece of legislation that's now, I think, 10 or 12 years old.
[00:34:54.120 --> 00:34:57.340]   It's a complete failure on every conceivable metric.
[00:34:57.340 --> 00:35:01.100]   Everyone hates it universally, yet we can't seem to do anything about it.
[00:35:02.100 --> 00:35:13.880]   That's a bankruptcy declaration for any body of bureaucrats who pretend or pretend to make things better for not just citizens, but people around the world.
[00:35:14.380 --> 00:35:16.920]   This is the thing that really gets me about cookie banners, too.
[00:35:16.920 --> 00:35:18.460]   It's not just the EU.
[00:35:18.460 --> 00:35:20.080]   It's the entire world.
[00:35:20.080 --> 00:35:23.240]   You can't hide from cookie banners anywhere on this planet.
[00:35:23.240 --> 00:35:30.580]   If you go to goddamn Mars on one of Elon's rockets and you try to access a web page, you'll still see a cookie banner.
[00:35:30.580 --> 00:35:33.440]   No one in the universe is safe from this nonsense.
[00:35:33.680 --> 00:35:36.680]   Probably the interface on the rocket.
[00:35:36.680 --> 00:35:36.960]   You'll be even slower.
[00:35:36.960 --> 00:35:41.780]   You'll have basically 150-second ping time.
[00:35:41.780 --> 00:35:45.580]   So it'll take you 45 seconds just to get through the cookie banners from Mars.
[00:35:45.580 --> 00:35:47.040]   All right.
[00:35:47.040 --> 00:35:51.280]   Let's walk back up the stack of this recursive tangents we've been taking.
[00:35:51.280 --> 00:35:58.240]   So Chrome, we should say, at least in my opinion, is not winning unfairly.
[00:35:58.240 --> 00:36:02.780]   It's winning in the fair way by just being better.
[00:36:02.780 --> 00:36:04.000]   It is.
[00:36:04.000 --> 00:36:10.440]   If I was going to steel man the other side just for a half second, people would say, well, maybe, yes.
[00:36:10.440 --> 00:36:15.440]   Most people do sort of begrudgingly agree that Chrome is a pretty good browser.
[00:36:15.440 --> 00:36:18.640]   But then they'll say the reason it got dominance was distribution.
[00:36:18.640 --> 00:36:27.180]   And the reason it got distribution was because Google also controls Android and therefore can make Chrome the default browser on all these phones.
[00:36:27.180 --> 00:36:29.660]   Now, I don't buy that.
[00:36:29.660 --> 00:36:44.300]   And the reason I don't buy that is because on Android, you're actually allowed to ship a different browser that has a browser engine that's not the same as Chrome, unlike on iOS, where if you want to ship a browser, Chrome, for example, ships for iOS.
[00:36:44.300 --> 00:36:45.140]   But it's not Chrome.
[00:36:45.140 --> 00:36:47.260]   It's Safari wrapped in a dress.
[00:36:47.260 --> 00:36:53.780]   And every single alternative browser on iOS have to use the Safari web engine.
[00:36:53.780 --> 00:36:54.960]   That's not competition.
[00:36:54.960 --> 00:36:57.060]   That's not what happened on Android.
[00:36:57.060 --> 00:37:00.160]   Again, I think there are some nuances to it.
[00:37:00.220 --> 00:37:05.240]   But if you zoom out and you look at all the problems we have with big tech, Chrome is not it.
[00:37:05.240 --> 00:37:07.140]   Chrome won on merits.
[00:37:07.140 --> 00:37:12.180]   I begrudgingly have switched to Chrome on that realization alone.
[00:37:12.180 --> 00:37:14.540]   As a web developer, I just prefer it.
[00:37:14.540 --> 00:37:16.640]   I like Firefox in many ways.
[00:37:16.640 --> 00:37:17.940]   I like the ethos of it.
[00:37:17.940 --> 00:37:21.080]   But Chrome is a better browser than Firefox, full stop.
[00:37:21.580 --> 00:37:23.180]   And by the way, we've never mentioned Edge.
[00:37:23.180 --> 00:37:24.860]   Edge is also a good browser.
[00:37:24.860 --> 00:37:27.340]   Because it's also Chrome in a dress.
[00:37:27.340 --> 00:37:28.920]   But it never gets the love.
[00:37:28.920 --> 00:37:30.980]   I don't think I've ever used Bing.
[00:37:30.980 --> 00:37:33.620]   And I'm sure Bing is really nice.
[00:37:33.620 --> 00:37:34.560]   Maybe you have.
[00:37:34.560 --> 00:37:36.380]   Because you know what is Bing in a dress?
[00:37:36.380 --> 00:37:36.940]   What?
[00:37:36.940 --> 00:37:37.680]   DuckDuckGo.
[00:37:37.680 --> 00:37:40.740]   Which is actually the search engine that I use.
[00:37:40.740 --> 00:37:44.020]   DuckDuckGo gets its search results from Bing.
[00:37:44.020 --> 00:37:45.000]   Or at least it used to.
[00:37:45.120 --> 00:37:46.920]   If they change that, that would be news to me.
[00:37:46.920 --> 00:37:52.280]   Well, maybe everything is just a wrap or a dress.
[00:37:52.280 --> 00:37:53.480]   Everything is wearing a dress.
[00:37:53.480 --> 00:37:54.580]   Underneath there's some other.
[00:37:54.580 --> 00:37:55.180]   There's some of that.
[00:37:55.180 --> 00:37:55.980]   It's turtles.
[00:37:55.980 --> 00:37:57.200]   Dresses all the way down.
[00:37:57.200 --> 00:37:57.880]   Okay.
[00:37:57.880 --> 00:37:58.720]   What were we talking about?
[00:37:58.720 --> 00:38:03.400]   We got there from JavaScript and from you learning how to program.
[00:38:03.400 --> 00:38:09.880]   So eventually, the big success story is when you built a bunch of stuff with PHP.
[00:38:09.880 --> 00:38:14.160]   And you were like actually shipping things.
[00:38:14.160 --> 00:38:14.600]   Yes.
[00:38:14.840 --> 00:38:17.480]   And that's when the Ruby story came.
[00:38:17.480 --> 00:38:22.840]   So what your big love affair with programming began there.
[00:38:22.840 --> 00:38:24.080]   So can you take me there?
[00:38:24.080 --> 00:38:25.140]   What is Ruby?
[00:38:25.140 --> 00:38:26.340]   Tell the story of Ruby.
[00:38:26.340 --> 00:38:28.080]   Explain Ruby to me.
[00:38:28.080 --> 00:38:35.640]   PHP was what converted me from just being able to fondle HTML and turn out some web pages to
[00:38:35.640 --> 00:38:38.880]   actually being able to produce web applications myself.
[00:38:38.880 --> 00:38:42.960]   So I owe a tremendous gratitude to PHP in that regard.
[00:38:42.960 --> 00:38:46.600]   But I never thought of PHP as a calling.
[00:38:46.600 --> 00:38:51.080]   I never thought I'm a professional programmer who writes PHP.
[00:38:51.080 --> 00:38:52.200]   That's who I am.
[00:38:52.200 --> 00:38:52.840]   And that's what I do.
[00:38:52.840 --> 00:39:00.040]   I thought of PHP as a tool I needed to smack the computer with until it produced web applications
[00:39:00.040 --> 00:39:00.440]   I wanted.
[00:39:00.440 --> 00:39:02.960]   It was very much a means to an end.
[00:39:03.700 --> 00:39:05.300]   I didn't fall in love with PHP.
[00:39:05.300 --> 00:39:13.900]   I'm very grateful that it taught me the basics of programming and I'm very grateful that it set the bar for the economics.
[00:39:14.440 --> 00:39:20.000]   But it really wasn't until Ruby that I started thinking of myself as a programmer.
[00:39:20.000 --> 00:39:31.420]   And the way that came about was that the first time I ever got hired as a professional programmer to write code was actually by Jason Fried, my business partner still.
[00:39:31.620 --> 00:39:39.320]   All the way back in 2001, I had been working on these gaming websites in PHP for essentially 18 months at that point.
[00:39:39.740 --> 00:39:42.220]   No one had been paying me to do code in that regard.
[00:39:42.220 --> 00:39:52.700]   And I connect with Jason Fried over an email sent from Copenhagen, Denmark to Chicago, Illinois to a person who didn't know who I was.
[00:39:52.700 --> 00:39:55.320]   I was just offering solicited advice.
[00:39:55.320 --> 00:39:59.980]   Jason had asked a question on the Internet and I had sent him the answer and he was asking in PHP.
[00:40:00.800 --> 00:40:07.340]   And I'd send him the answer to that question and we started talking and then we started working, which, by the way, is a miracle of what the Internet can allow.
[00:40:07.340 --> 00:40:15.780]   How can a kid in Copenhagen who's never met this guy in Chicago connect just over email and start working together?
[00:40:15.780 --> 00:40:19.980]   And by the way, we're still working together now, 24 years later.
[00:40:19.980 --> 00:40:20.920]   That's incredible.
[00:40:20.920 --> 00:40:24.760]   But we started working together and we started working together on some client projects.
[00:40:24.760 --> 00:40:26.340]   Jason would do the design.
[00:40:26.340 --> 00:40:27.940]   37 Signals would do design.
[00:40:27.940 --> 00:40:29.620]   I would bring the programming PHP.
[00:40:30.240 --> 00:40:38.040]   And after we worked on, I think, two or three client projects together in PHP, we kept hitting the same problem.
[00:40:38.040 --> 00:40:42.680]   That whenever you work with a client, you start that project off an email.
[00:40:42.680 --> 00:40:44.460]   Oh, yeah, let's work together.
[00:40:44.460 --> 00:40:45.780]   Here's what we're building.
[00:40:45.780 --> 00:40:47.840]   And you start trading more and more emails.
[00:40:47.840 --> 00:40:52.400]   And before a few weeks have passed, you've got to add someone to the project.
[00:40:52.400 --> 00:40:54.400]   They don't have the emails.
[00:40:54.400 --> 00:40:55.420]   They don't have the context.
[00:40:55.420 --> 00:40:57.700]   You send them, where's the latest file?
[00:40:57.700 --> 00:40:59.320]   Oh, I've uploaded on the FTP.
[00:40:59.320 --> 00:41:02.880]   It's like final, final V06 2.0.
[00:41:02.880 --> 00:41:03.720]   That's the one to get.
[00:41:03.720 --> 00:41:04.680]   It's just a mess.
[00:41:04.680 --> 00:41:06.500]   A beautiful mess in some ways.
[00:41:06.500 --> 00:41:10.020]   A mess that still runs the vast majority of projects to this day.
[00:41:10.020 --> 00:41:12.020]   Email is the lowest common denominator.
[00:41:12.020 --> 00:41:13.200]   That's wonderful.
[00:41:13.740 --> 00:41:18.100]   But we had dropped the ball a couple of times in serious ways with customers.
[00:41:18.100 --> 00:41:20.040]   And we thought we can do better.
[00:41:20.040 --> 00:41:22.180]   We know how to make web applications.
[00:41:22.180 --> 00:41:26.540]   Can't we just make a system that's better than email for managing projects?
[00:41:26.800 --> 00:41:28.060]   It can't be that hard.
[00:41:28.060 --> 00:41:30.040]   We've been doing blogs.
[00:41:30.040 --> 00:41:31.300]   We've been doing to-do lists.
[00:41:31.300 --> 00:41:38.960]   Let's put some of these things together and just make a system where everything that anyone involved in the project needs is on one page.
[00:41:39.140 --> 00:41:44.660]   And it has to be simple enough that I'm not going to run a seminar teaching you how to use the system.
[00:41:44.660 --> 00:41:46.040]   I'm just going to give you the login code.
[00:41:46.040 --> 00:41:46.960]   You're going to jump into it.
[00:41:46.960 --> 00:41:48.740]   So that's Basecamp.
[00:41:49.440 --> 00:42:00.220]   And when we started working on Basecamp, I, for the first time in the experience I had with Jason, had the freedom of technology choice.
[00:42:00.220 --> 00:42:04.000]   There was no client telling me, yeah, PHP, that sounds good.
[00:42:04.000 --> 00:42:04.700]   We know PHP.
[00:42:04.700 --> 00:42:05.720]   Can you build it in PHP?
[00:42:05.720 --> 00:42:07.340]   I had free reigns.
[00:42:08.160 --> 00:42:27.320]   And at that time, I'd been reading IEEE magazine and a couple of other magazines back from the early 2000s where Dave Thomas and Martin Fowler had been writing about programming patterns and how to write better code.
[00:42:27.320 --> 00:42:36.320]   And these two guys, in particular, were both using Ruby to explain their concepts because Ruby looked like pseudocode.
[00:42:36.580 --> 00:42:44.160]   Whether you were programming in C or Java or PHP, all three constituencies could understand Ruby because it basically just reads like English.
[00:42:44.160 --> 00:42:47.440]   So these guys were using Ruby to describe their concepts.
[00:42:47.440 --> 00:42:52.240]   And first of all, I would read these articles for just the concepts they were explaining.
[00:42:52.240 --> 00:42:55.440]   And I'd be like, what is this programming language?
[00:42:55.440 --> 00:42:59.340]   I mean, I like the concept you're explaining, but I also want to see the programming language.
[00:42:59.340 --> 00:43:01.940]   Why haven't I heard of this?
[00:43:01.940 --> 00:43:03.500]   So I started looking into Ruby.
[00:43:04.300 --> 00:43:10.760]   And I realized at that time, Ruby might not be known by anyone, but it's actually been around for a long time.
[00:43:10.760 --> 00:43:19.320]   Matz, the Japanese creator of Ruby, had started working on Ruby back in 93, before the Internet was even a thing.
[00:43:19.680 --> 00:43:31.580]   And here I am in 2003, 10 years later, picking up what seems like this hidden gem that's just laying in obscurity in plain sight.
[00:43:31.580 --> 00:43:46.660]   But Dave Thomas and Martin Fowler, I think, successfully put me and a handful of other people on the trail of a programming language that hadn't been used much in the West, but could be.
[00:43:46.900 --> 00:43:51.860]   So I picked up Ruby and I thought, this is, this is very different.
[00:43:51.860 --> 00:43:54.840]   First of all, where are all the semicolons?
[00:43:54.840 --> 00:43:59.020]   I'd been programming in PHP, in ASP.
[00:43:59.020 --> 00:44:00.260]   I'd even done some Pascal.
[00:44:00.260 --> 00:44:01.960]   I'd looked at some C.
[00:44:01.960 --> 00:44:03.600]   There are semicolons everywhere.
[00:44:03.600 --> 00:44:07.620]   And that was the first thing that struck me is where are the damn semicolons?
[00:44:08.160 --> 00:44:12.440]   And I started thinking, actually, why do we have semicolons in programming?
[00:44:12.440 --> 00:44:19.980]   They're to tell the interpreter that there's a new line of instructions, but I don't need him as a human.
[00:44:19.980 --> 00:44:20.820]   How?
[00:44:20.820 --> 00:44:25.840]   Oh, someone is looking out for the human here, not for the machine.
[00:44:25.840 --> 00:44:27.720]   So that really got me interested.
[00:44:28.120 --> 00:44:31.040]   And then I thought to myself, do you know what?
[00:44:31.040 --> 00:44:32.220]   I know PHP quite well.
[00:44:32.220 --> 00:44:34.520]   I'm not an amazing programmer.
[00:44:34.520 --> 00:44:38.080]   I haven't been working in programming for all that long.
[00:44:38.080 --> 00:44:40.640]   But maybe I can figure it out.
[00:44:40.640 --> 00:44:42.400]   I'm going to give myself two weeks.
[00:44:42.400 --> 00:44:46.440]   I'm going to write a proof of concept where I talk to a database.
[00:44:46.440 --> 00:44:48.180]   I pull some records.
[00:44:48.740 --> 00:44:51.800]   I format them a bit and I display them on an HTML page.
[00:44:51.800 --> 00:44:53.360]   Can I figure that out in a couple of weeks?
[00:44:53.360 --> 00:44:58.900]   It took about one weekend and I was completely mesmerized.
[00:44:58.900 --> 00:45:12.000]   I was completely mind blown because Ruby was made for my brain like a perfect tailored glove by someone I'd never met.
[00:45:12.000 --> 00:45:14.300]   Like, how is this even possible?
[00:45:14.300 --> 00:45:20.420]   We should say maybe, like, paint a picture of the certain qualities that Ruby has, maybe even compared to PHP.
[00:45:20.420 --> 00:45:27.760]   We should also say that there's a ridiculous thing that I'm used to that I forget about, that there's dollar signs everywhere.
[00:45:27.760 --> 00:45:28.160]   Yes.
[00:45:28.160 --> 00:45:28.520]   PHP.
[00:45:28.520 --> 00:45:29.080]   Yes.
[00:45:29.080 --> 00:45:30.500]   There's line noise.
[00:45:30.500 --> 00:45:31.640]   That's what I like to call it.
[00:45:31.640 --> 00:45:32.340]   Line noise.
[00:45:32.340 --> 00:45:33.640]   Line noise.
[00:45:33.640 --> 00:45:34.900]   That's such a beautiful phrase.
[00:45:34.900 --> 00:45:35.620]   Yeah.
[00:45:35.620 --> 00:45:38.600]   So there's all these things that look like programs.
[00:45:38.600 --> 00:45:42.500]   And with Ruby, I mean, there's some similarities in Python there.
[00:45:43.100 --> 00:45:45.420]   It just looks kind of like natural language.
[00:45:45.420 --> 00:45:47.180]   You can read it normally.
[00:45:47.180 --> 00:45:50.140]   Here's a while loop that does five iterations.
[00:45:50.140 --> 00:45:54.340]   You can literally type the number five dot.
[00:45:54.340 --> 00:45:57.260]   Now I'm calling a method under number five, by the way.
[00:45:57.260 --> 00:45:59.600]   That's one of the beautiful aspects of Ruby.
[00:45:59.600 --> 00:46:03.460]   That primitives, like integers, are also objects.
[00:46:03.960 --> 00:46:10.040]   And you can call five dot times start brackets.
[00:46:10.040 --> 00:46:14.120]   Now you're iterating over the code in that bracket five times.
[00:46:14.120 --> 00:46:15.060]   That's it.
[00:46:15.060 --> 00:46:15.420]   Okay.
[00:46:15.420 --> 00:46:16.040]   That's nice.
[00:46:16.040 --> 00:46:17.620]   That's not just nice.
[00:46:17.620 --> 00:46:18.340]   That's exceptional.
[00:46:18.340 --> 00:46:32.380]   There is literally no other programming language that I know of that has managed to boil away the line noise that almost every other programming language would inject into a five-time iteration over a block of code to that extent.
[00:46:32.620 --> 00:46:33.680]   That's a really nice.
[00:46:33.680 --> 00:46:35.100]   Oh, thank you for giving that example.
[00:46:35.100 --> 00:46:36.720]   That's a beautiful example.
[00:46:36.720 --> 00:46:38.000]   Wow.
[00:46:38.000 --> 00:46:40.320]   I don't think I know a programming language that does that.
[00:46:40.320 --> 00:46:41.020]   That's really nice.
[00:46:41.020 --> 00:46:42.160]   Ruby is full of that.
[00:46:42.160 --> 00:46:43.660]   And there's...
[00:46:43.660 --> 00:46:44.900]   So let me dive into a couple of examples.
[00:46:44.900 --> 00:46:46.960]   Because I really think it helps paint the picture.
[00:46:46.960 --> 00:46:51.600]   And let me preface this by saying, I actually, I like the ethos of Python.
[00:46:51.600 --> 00:46:56.020]   I think the Ruby and the Python community share a lot of similarities.
[00:46:56.020 --> 00:46:58.820]   They're both dynamic, interpreted languages.
[00:46:58.820 --> 00:47:05.440]   They're both focused on immediacy and productivity and ease of use in a bunch of ways.
[00:47:05.440 --> 00:47:08.060]   But then they're also very different in many other ways.
[00:47:08.060 --> 00:47:10.940]   And one of the ways they're very different is aesthetically.
[00:47:12.160 --> 00:47:15.340]   Python, to me, I hope I don't offend people too much.
[00:47:15.340 --> 00:47:16.100]   I've said this before.
[00:47:16.100 --> 00:47:17.820]   It's just, it's ugly.
[00:47:17.820 --> 00:47:34.620]   And it's ugly in its base because it's full of superfluous instructions that are necessary for legacy reasons of when Guido made Python back in 87 that are still here in 2025.
[00:47:34.620 --> 00:47:36.820]   And my brain can't cope with that.
[00:47:36.820 --> 00:47:38.060]   Let me give you a basic example.
[00:47:38.060 --> 00:47:44.280]   When you make a class in Python, the initializer method, the starting method, is def.
[00:47:44.280 --> 00:47:45.080]   Okay, fair enough.
[00:47:45.080 --> 00:47:46.060]   That's actually the same as Ruby.
[00:47:46.060 --> 00:47:48.020]   D-E-F, definition of a method.
[00:47:48.020 --> 00:47:50.400]   Then it is underscore.
[00:47:50.400 --> 00:47:52.200]   Not one.
[00:47:52.200 --> 00:47:53.640]   Underscore.
[00:47:53.640 --> 00:47:54.440]   Two.
[00:47:54.440 --> 00:47:55.900]   In it.
[00:47:55.900 --> 00:47:57.520]   Underscore.
[00:47:57.520 --> 00:47:58.140]   Underscore.
[00:47:58.140 --> 00:47:58.660]   Yeah.
[00:47:58.660 --> 00:48:00.320]   Parenthesis start.
[00:48:00.320 --> 00:48:01.420]   Self.
[00:48:01.420 --> 00:48:02.460]   Comma.
[00:48:02.460 --> 00:48:03.760]   And then the first argument.
[00:48:03.760 --> 00:48:04.680]   Yeah, the whole self thing.
[00:48:04.680 --> 00:48:04.940]   Yeah.
[00:48:04.940 --> 00:48:08.440]   I look at that and go, I'm sorry, I'm out.
[00:48:08.440 --> 00:48:09.160]   I can't do it.
[00:48:09.160 --> 00:48:14.480]   It's just, it's everything about it offends my sensibilities to the core.
[00:48:14.480 --> 00:48:20.800]   Here you have the most important method that all new objects or classes have to implement.
[00:48:20.800 --> 00:48:26.660]   And it is one of the most aesthetically offensive ways of typing initialized that I've ever seen anywhere.
[00:48:26.660 --> 00:48:28.780]   And you guys are okay with this?
[00:48:28.780 --> 00:48:33.420]   Yeah, you're making me, you know, you're like talking about my marriage or something like this.
[00:48:33.420 --> 00:48:37.440]   And I'm not realizing I've been in a toxic relationship all along yet.
[00:48:37.440 --> 00:48:38.700]   I just get used to it.
[00:48:38.700 --> 00:48:41.400]   That to me, by the way, was the magic of Ruby.
[00:48:41.400 --> 00:48:45.860]   It opened my eyes to how beautiful programs could be.
[00:48:45.860 --> 00:48:47.140]   I didn't know.
[00:48:47.140 --> 00:48:48.780]   I'd been working in ASP.
[00:48:48.780 --> 00:48:49.640]   I'd been working in PHP.
[00:48:49.860 --> 00:48:56.620]   I didn't even have the concept that aesthetics, beautiful code, was something we could optimize for.
[00:48:56.620 --> 00:48:58.160]   That's something we could pursue.
[00:48:58.160 --> 00:49:02.620]   And even more than that, that we could pursue it above other objectives.
[00:49:02.620 --> 00:49:06.060]   That Ruby is as beautiful as it is.
[00:49:06.060 --> 00:49:06.980]   It's not an accident.
[00:49:06.980 --> 00:49:08.160]   And it's not easy.
[00:49:08.160 --> 00:49:10.320]   Ruby itself is implemented in C.
[00:49:10.700 --> 00:49:13.820]   It's very difficult to parse Ruby code.
[00:49:13.820 --> 00:49:16.220]   Because Ruby is written for humans.
[00:49:16.220 --> 00:49:18.420]   And humans are messy creatures.
[00:49:18.420 --> 00:49:21.360]   They like things in just the right way.
[00:49:21.360 --> 00:49:28.720]   I can't fully explain why the underscore, underscore, init, underscore, underscore make me repulse.
[00:49:28.980 --> 00:49:29.980]   But it does.
[00:49:29.980 --> 00:49:33.540]   And when I look at the Ruby alternative, it's really instructive.
[00:49:33.540 --> 00:49:40.480]   So it's def, same part, def, space, initialize, parentheses.
[00:49:40.480 --> 00:49:41.680]   Not even parentheses.
[00:49:41.680 --> 00:49:44.200]   If you don't need to call it within the arguments, there's not even a parentheses.
[00:49:44.200 --> 00:49:46.160]   That in itself is actually also a major part.
[00:49:46.160 --> 00:49:53.440]   If the human doesn't need the additional characters, we're not just going to put them in because it'd be nicer to parse for the computer.
[00:49:53.440 --> 00:49:55.500]   We're going to get rid of the semicolons.
[00:49:55.500 --> 00:49:56.860]   We're going to get rid of the parentheses.
[00:49:57.220 --> 00:50:00.240]   We're going to get rid of the underscores.
[00:50:00.240 --> 00:50:05.500]   We're going to get rid of all that ugliness, all the line noise, and boil it down to its pure essentials.
[00:50:05.500 --> 00:50:09.120]   And at the same time, we're not going to abbreviate.
[00:50:09.120 --> 00:50:13.820]   This is a key difference in the aesthetics between Ruby and Python as well.
[00:50:13.820 --> 00:50:16.120]   Init is short of the type.
[00:50:16.120 --> 00:50:17.140]   It's only five characters.
[00:50:17.140 --> 00:50:20.440]   Initialize is a lot longer, but it looks a lot better.
[00:50:20.440 --> 00:50:22.680]   And you don't type it very often.
[00:50:22.680 --> 00:50:24.500]   So you should look at something pretty.
[00:50:24.500 --> 00:50:28.020]   If you don't have to do it all the time, it's okay that it's long.
[00:50:28.020 --> 00:50:34.320]   Those kinds of aesthetic evaluations are rife all over the Ruby language.
[00:50:34.320 --> 00:50:35.700]   But let me give you an even better example.
[00:50:36.940 --> 00:50:41.740]   If conditional, that's the bedrug of all programming languages.
[00:50:41.740 --> 00:50:43.320]   They have the if conditional.
[00:50:43.320 --> 00:50:46.560]   If you take most programming languages, they all have if.
[00:50:46.560 --> 00:50:48.640]   That's basically the same in almost every language.
[00:50:48.640 --> 00:50:49.540]   Space.
[00:50:49.540 --> 00:50:50.840]   Start parentheses.
[00:50:50.840 --> 00:50:51.840]   We all do that.
[00:50:52.560 --> 00:51:11.260]   And then you have perhaps, let's say you're calling an object called user dot is admin, close parentheses, close parentheses, start brackets, and here's what we're going to do if the user's an admin, right?
[00:51:11.260 --> 00:51:12.780]   That would be a normal programming language.
[00:51:12.780 --> 00:51:14.540]   Ruby doesn't do it like that.
[00:51:14.540 --> 00:51:16.680]   Ruby boils almost all of it away.
[00:51:16.800 --> 00:51:17.500]   We start with the if.
[00:51:17.500 --> 00:51:18.380]   Okay, that's the same.
[00:51:18.380 --> 00:51:27.760]   No parentheses necessary because there's no ambiguity for the human to distinguish that the next part is just a single statement.
[00:51:27.760 --> 00:51:35.320]   So you do if space user dot admin question mark.
[00:51:35.320 --> 00:51:37.880]   Yeah.
[00:51:38.260 --> 00:51:42.220]   No open brackets, no parentheses, no nothing.
[00:51:42.220 --> 00:51:45.140]   Next open line, here's your conditional.
[00:51:45.140 --> 00:51:52.780]   That question mark means nothing to the computer, but it means something to the human.
[00:51:52.780 --> 00:52:01.780]   Ruby put in the predicate method style purely as a communication tool between humans.
[00:52:02.400 --> 00:52:08.160]   It's actually more work for the interpreter to be able to see that this question mark is there.
[00:52:08.160 --> 00:52:09.560]   Why is this question mark in here?
[00:52:09.560 --> 00:52:12.460]   Because it just reads so nicely.
[00:52:12.460 --> 00:52:15.260]   If user admin question mark.
[00:52:15.260 --> 00:52:19.080]   That's a very human phrase, but it gets better.
[00:52:19.080 --> 00:52:21.560]   You can turn this around.
[00:52:21.560 --> 00:52:26.920]   You can have your statement you want to execute before the conditional.
[00:52:26.920 --> 00:52:37.780]   You can do user dot upgrade, say you're calling an upgrade method on a user, space if space user dot admin question mark.
[00:52:37.780 --> 00:52:41.060]   We do the thing if the thing is true.
[00:52:41.060 --> 00:52:43.780]   Instead of saying if the thing is true, do the thing.
[00:52:43.780 --> 00:52:45.100]   But it gets even better.
[00:52:45.100 --> 00:52:48.580]   This is why I love this example with the conditional because you can keep diving into it.
[00:52:48.700 --> 00:52:50.980]   So let's flip it around.
[00:52:50.980 --> 00:52:59.680]   User dot downgrade if exclamation point not user dot admin, right?
[00:52:59.680 --> 00:53:01.360]   That'd be a typical way of writing it.
[00:53:01.360 --> 00:53:05.440]   Ruby goes, that exclamation point is light and noise.
[00:53:05.440 --> 00:53:08.400]   Why do we have if and then an exclamation point?
[00:53:08.400 --> 00:53:08.940]   That's ugly.
[00:53:08.940 --> 00:53:16.720]   We could do user dot downgrade unless user admin question mark.
[00:53:16.720 --> 00:53:30.940]   That to me is an encapsulation of the incredible beauty that Ruby affords the programmer through ambiguity that is only to serve the human reader and writer.
[00:53:30.940 --> 00:53:34.420]   All of these statements we've just discussed, they're the same for the computer.
[00:53:34.420 --> 00:53:36.960]   It'll compile down to the same C code.
[00:53:36.960 --> 00:53:39.260]   They'll compile down to the same assembly code.
[00:53:39.260 --> 00:53:40.860]   It makes no difference whatsoever.
[00:53:40.860 --> 00:53:43.760]   In fact, it just makes it harder to write an interpreter.
[00:53:43.760 --> 00:53:52.300]   But for the human who gets to choose whether the statement comes before the conditional or the predicate method has, it's just incredible.
[00:53:52.300 --> 00:53:54.920]   It reads like poetry at some point.
[00:53:54.920 --> 00:53:59.120]   It's also incredible that, you know, one language designer is creating that.
[00:53:59.700 --> 00:54:01.780]   You know, Guido van Rossum also.
[00:54:01.780 --> 00:54:09.780]   It's like one person gets to make these extremely difficult decisions because it's, you have to think about how does that all get parsed.
[00:54:09.780 --> 00:54:17.340]   And you have to think about the thousands, if it's a popular language, of millions of people that end up using this.
[00:54:17.340 --> 00:54:23.080]   And what they feel with that question mark on the, for the if statement, what does that feel like?
[00:54:23.720 --> 00:54:28.820]   That's what Matt's thought about because he started his entire mission off a different premise.
[00:54:28.820 --> 00:54:37.580]   Then almost every programming language designer that I'd heard at least articulate their vision, that his number one goal was programmer happiness.
[00:54:37.580 --> 00:54:53.680]   That his number one goal was the affordances that would allow programmers to articulate code in ways that not just executed correctly, but were a joy to write and were a joy to read.
[00:54:53.840 --> 00:55:00.300]   And that vision is based on a fundamentally different view of humanity.
[00:55:00.300 --> 00:55:06.380]   There's no greater contrast between Matt's and James Gosselin, the designer of Java.
[00:55:06.380 --> 00:55:11.060]   I wanted to listen to James talk about the design of Java.
[00:55:11.060 --> 00:55:12.780]   Why was it the way it was?
[00:55:12.780 --> 00:55:14.180]   Why was it so rigid?
[00:55:14.180 --> 00:55:17.540]   And he was very blunt about it, which, by the way, I really appreciate.
[00:55:17.540 --> 00:55:20.540]   And I think Gosselin has done a tremendous job with Java.
[00:55:20.540 --> 00:55:23.520]   But his view of humanity is rather dark.
[00:55:23.520 --> 00:55:29.760]   His view of humanity was programmers, at the average, are stupid creatures.
[00:55:29.760 --> 00:55:39.780]   They cannot be trusted with sophisticated programming languages because they're going to shoot their foot off or their hand off.
[00:55:39.940 --> 00:55:51.240]   And that would be kind of inconvenient to the regional development office of a mid-tier insurance company writing code that has to last for 20 years.
[00:55:52.380 --> 00:56:01.080]   Now, it's actually a very Thomas Sowell view of constrained capacity in humans that I've come to appreciate much later in life.
[00:56:01.080 --> 00:56:10.860]   But it's also a very depressing view of programmers that there are just certain programmers who are too dumb to appreciate code poetry.
[00:56:10.860 --> 00:56:13.980]   They're too ignorant to learn how to write it well.
[00:56:13.980 --> 00:56:19.160]   We need to give them a sandbox where they just won't hurt themselves too much.
[00:56:19.160 --> 00:56:23.160]   Matz went the complete opposite direction.
[00:56:23.160 --> 00:56:25.120]   He believes in humanity.
[00:56:25.120 --> 00:56:30.660]   He believes in the unlimited capacity of programmers to learn and become better.
[00:56:30.660 --> 00:56:37.920]   So much so that he's willing to put the stranger at his own level.
[00:56:37.920 --> 00:56:41.860]   This is the second part I truly appreciate about Ruby.
[00:56:42.100 --> 00:56:46.060]   Ruby allows you to extend base classes.
[00:56:46.060 --> 00:56:53.040]   You know how we just talked about five dot times is a way to iterate over a statement five times?
[00:56:53.040 --> 00:56:55.360]   That five is obviously a base class.
[00:56:55.360 --> 00:56:56.800]   It's a number.
[00:56:56.800 --> 00:56:57.840]   Do you know what?
[00:56:57.840 --> 00:57:00.260]   You can add your own methods to that.
[00:57:00.260 --> 00:57:03.160]   I did extensively.
[00:57:03.160 --> 00:57:10.320]   In Rails, we have something called active support, which is essentially my dialect of Ruby for programming web applications.
[00:57:11.440 --> 00:57:12.620]   And I'll give you one example.
[00:57:12.620 --> 00:57:17.320]   I've added a method called days to the number.
[00:57:17.320 --> 00:57:27.540]   So if you do five dot days, you get five days in seconds because seconds is the way we set cash expiration times and other things like that.
[00:57:27.540 --> 00:57:41.160]   So you can say cash expires in five dot days and you're going to get whatever five times 24 times 60 times 60 is or whatever the math is.
[00:57:41.160 --> 00:57:41.320]   Right.
[00:57:41.580 --> 00:57:50.880]   In a normal programming language, you would type out the seconds and then you would have a little comment above it saying this represent five days.
[00:57:50.880 --> 00:57:53.220]   In Ruby, you get to write five days.
[00:57:53.220 --> 00:57:56.000]   But even better than that, Matt's didn't come up with it.
[00:57:56.000 --> 00:57:58.440]   Matt's didn't need the five days.
[00:57:58.560 --> 00:58:01.240]   I needed that because I needed to expire cashes.
[00:58:01.240 --> 00:58:16.180]   I was allowed by Matt's to extend his story with my own chapters on equal footing such that a reader of Ruby could not tell the difference between the code Matt's wrote and the code that I wrote.
[00:58:16.180 --> 00:58:24.280]   He trusted me as a complete stranger from Denmark who had never met to mess with his beautiful story.
[00:58:24.280 --> 00:58:27.820]   That level of trust is essentially unheard of.
[00:58:27.820 --> 00:58:34.380]   I know there are other program languages that allow things with macros and so forth, but none do it in a way like Ruby does it.
[00:58:34.380 --> 00:58:41.220]   None does it with an articulated vision of humanity, a trust in humanity like Matt's does.
[00:58:41.220 --> 00:58:46.080]   That is the opposite end of the spectrum of Java.
[00:58:46.080 --> 00:58:53.680]   Yeah, I mean for my aesthetic sensibilities, just the way you described five dot days, that's really pleasant to me.
[00:58:53.680 --> 00:59:00.400]   I could see myself sitting alone, sleep deprived, and just writing that.
[00:59:00.400 --> 00:59:02.060]   It's just an easy thing.
[00:59:02.060 --> 00:59:04.020]   You can write it in a long way with a comment.
[00:59:04.020 --> 00:59:05.640]   You can write it in multiple lines.
[00:59:05.640 --> 00:59:11.700]   Now with AI, I'm sure it's going to generate it correctly, but there's something really pleasant about the simplicity of that.
[00:59:11.700 --> 00:59:13.780]   I'm not sure what that is, but you're right.
[00:59:13.860 --> 00:59:25.800]   There is a good feeling there, and I'm sure we'll talk about happiness from all kinds of philosophical angles, but that is what happiness is made of.
[00:59:25.800 --> 00:59:28.300]   That little good feeling there.
[00:59:28.300 --> 00:59:34.780]   It's the good feeling that come out of a concept compressed to its pure essence.
[00:59:35.040 --> 00:59:39.040]   There's nothing you can take away from that statement that's superfluous.
[00:59:39.040 --> 00:59:47.880]   But see, I also want to push back a little bit, because it's not, because I also programmed in Perl a bunch, just to be cool.
[00:59:47.880 --> 00:59:51.020]   So like, it's not all about compression.
[00:59:51.020 --> 00:59:53.020]   No, you can compress it too far.
[00:59:53.020 --> 00:59:59.460]   Perl Golf is a thing where you can turn programs into something that's unreadable for humans.
[00:59:59.580 --> 01:00:02.660]   Now, the great thing about Perl was that it came out before Ruby.
[01:00:02.660 --> 01:00:12.720]   Matz was a great student of Wall, was a great student of Perl, was a great student of Python and Smalltalk and Lisp.
[01:00:12.720 --> 01:00:22.180]   He took inspiration from all of these prior attempts at creating good programming languages and really edited down the very best bits into this.
[01:00:22.180 --> 01:00:24.320]   So he was able to learn from his lessons.
[01:00:24.320 --> 01:00:32.380]   But what I found incredible about Ruby is that here we are, 2025, Ruby has been worked on for over 30 years.
[01:00:32.380 --> 01:00:38.060]   And essentially, the first draft is 90% of what we're still using.
[01:00:38.060 --> 01:00:51.520]   There was almost a sense of divine inspiration possible in wherever Matz was writing that initial version of Ruby that transcended time to such a degree that no one has still even begun to reach it.
[01:00:51.520 --> 01:00:53.160]   And this is the other thing I always find fascinating.
[01:00:53.160 --> 01:01:06.560]   I generally believe in the efficient market theory, that if someone comes up with a better mousetrap or better idea, others will eventually copy them to such an extent that perhaps the original mousetrap is no longer even remembered.
[01:01:06.560 --> 01:01:09.960]   No one has been able to copy that essence of Ruby.
[01:01:09.960 --> 01:01:12.540]   They borrowed elements, and that's totally fine.
[01:01:12.540 --> 01:01:20.700]   But Ruby still stands taller than everyone else on these metrics, on this trust in humanity and programmers.
[01:01:20.860 --> 01:01:26.920]   And we should also say, like, you know, maybe the perfect programming language is that metric.
[01:01:26.920 --> 01:01:30.380]   And then there's the successful language, and those are often different.
[01:01:30.380 --> 01:01:33.980]   There is something wonderful about the Brendan Eich story of creating JavaScript.
[01:01:33.980 --> 01:01:34.460]   Yes.
[01:01:35.140 --> 01:01:42.760]   There's something truly beautiful about the way JavaScript took over the world.
[01:01:43.300 --> 01:01:49.920]   I've recently got to visit the Amazon jungle, and just one of my favorite things to do is just to watch the ants take over anything, everything.
[01:01:49.920 --> 01:01:53.140]   And it's just like, it's a nice distributed system.
[01:01:53.140 --> 01:01:56.980]   It's a messy thing that doesn't seem to be order, but it just works.
[01:01:56.980 --> 01:01:58.520]   And the machinery of it.
[01:01:58.520 --> 01:01:59.440]   Worse is better.
[01:01:59.440 --> 01:02:06.720]   I mean, that's actually the name of a pattern in software development and other ways of how is the pattern of Linux.
[01:02:06.720 --> 01:02:11.600]   Linux was quantifiably worse than, I think it was Minix at the time.
[01:02:11.600 --> 01:02:18.980]   Other ways of it that were more cathedral, less bizarre, and it's still one.
[01:02:19.080 --> 01:02:23.620]   That there's something to it that the imperfections can help something go forward.
[01:02:23.620 --> 01:02:29.880]   It's actually a trick I've studied to the degree that I now incorporate it in almost all open source that I do.
[01:02:29.880 --> 01:02:35.320]   I make sure that when I release the first version of any new thing I work on, it's a little broken.
[01:02:35.320 --> 01:02:40.220]   It's a little busted in ways that invite people to come in and help me.
[01:02:40.220 --> 01:02:48.700]   Because there's no easier way to get the collaboration of other programmers than to put something out that they know how to fix and improve.
[01:02:48.960 --> 01:02:49.780]   Yeah, that's awesome.
[01:02:49.780 --> 01:02:54.020]   But Ruby is somehow, or was at least, a little bit different in that regard.
[01:02:54.020 --> 01:02:55.160]   Not in all regards.
[01:02:55.160 --> 01:03:00.020]   Matt's got the ethos of the language, the design of the language just right.
[01:03:00.020 --> 01:03:03.140]   But the first versions of Ruby were terribly slow.
[01:03:03.140 --> 01:03:14.860]   It's taken, I mean, hundreds of man years to get Ruby to be both this beautiful, yet also highly efficient and really fast.
[01:03:14.860 --> 01:03:18.820]   And we should say that the thing that made you fall in love with this particular programming,
[01:03:18.840 --> 01:03:20.400]   language is metaprogramming.
[01:03:20.400 --> 01:03:21.380]   Yes.
[01:03:21.380 --> 01:03:26.540]   So that takes all of these elements we've just talked about and turned them up to 11.
[01:03:26.540 --> 01:03:28.640]   I'll explain metaprogramming real simple.
[01:03:28.640 --> 01:03:33.920]   Metaprogramming is essentially a version of the five-dot days.
[01:03:33.920 --> 01:03:37.240]   You get to add keywords to the language.
[01:03:37.240 --> 01:03:42.040]   Active record is the part of Rails that communicates with the database.
[01:03:42.660 --> 01:03:49.620]   This is a system where every table in the database is represented by a class.
[01:03:49.620 --> 01:03:57.080]   So if we take the user example again, you do class user descends from active record base.
[01:03:57.080 --> 01:04:00.000]   And then the first line you can write is this.
[01:04:00.000 --> 01:04:04.140]   I want my users to have many posts or have many comments.
[01:04:04.140 --> 01:04:04.760]   Let's do that.
[01:04:04.900 --> 01:04:06.800]   We're making some system where users can make comments.
[01:04:06.800 --> 01:04:14.360]   The very next line is has underscore many space colon comments.
[01:04:14.760 --> 01:04:27.520]   Now you've set up a dependency between users and comments that will give you a whole host of access and factory methods for users to be able to own comments, to create comments, to update comments.
[01:04:27.760 --> 01:04:32.740]   In that line alone, has many looks like a keyword.
[01:04:32.740 --> 01:04:34.900]   It looks like it's part of the Ruby language.
[01:04:34.900 --> 01:04:36.080]   That's metaprogramming.
[01:04:36.080 --> 01:04:48.220]   When Rails is able to add these elements to how you define a class, and then that runs code that adds a bunch of methods to the user class, that's metaprogramming.
[01:04:48.220 --> 01:04:53.220]   And when metaprogramming is used in this way, we call it domain-specific languages.
[01:04:53.400 --> 01:05:04.400]   You take a generic language like Ruby, and you tailor it to a certain domain like describing relationships in a database at a object level.
[01:05:04.400 --> 01:05:15.440]   And this is one of those early examples where you can do user has many comments, belongs underscore to space colon account.
[01:05:15.440 --> 01:05:20.520]   Now you've set up a one-to-one relationship before we had a one-to-many relationship.
[01:05:21.180 --> 01:05:28.880]   Rails is rife with all these kinds of domain-specific languages where sometimes it doesn't even look like Ruby.
[01:05:28.880 --> 01:05:31.460]   You can't identify Ruby keywords.
[01:05:31.460 --> 01:05:37.360]   You can just identify what looks like keywords in its own programming language.
[01:05:37.360 --> 01:05:41.540]   Now, again, I know that Lisp and others also do this stuff.
[01:05:41.720 --> 01:05:48.660]   They just do it with the maximum amount of line noise that can ever be crammed into a programming language.
[01:05:48.660 --> 01:05:55.980]   And Ruby does it at a level where you cannot tell my metaprogramming from Matt's keywords and with zero line noise.
[01:05:55.980 --> 01:05:58.380]   Yeah, I should say that my first love was Lisp.
[01:05:58.380 --> 01:06:01.400]   So there's a slow tear that you can't see.
[01:06:01.400 --> 01:06:04.300]   I've actually never written any real Lisp myself.
[01:06:04.580 --> 01:06:06.640]   Well, how can you judge it so harshly then?
[01:06:06.640 --> 01:06:14.440]   Because I have two eyes and I can look at code and my aesthetic sensibilities forbid me to even go much further, which is a limitation.
[01:06:14.440 --> 01:06:24.820]   I know I should actually dive into Lisp because I found that I've learned a lot just diving into, maybe I'm insulting Lisp again here, but the past of programming languages.
[01:06:24.820 --> 01:06:35.860]   With Smalltalk, for example, I think Smalltalk is a incredible experiment that also worked, but isn't suitable for today's programming environments.
[01:06:35.860 --> 01:06:41.540]   I love that we're talking about Ruby so much and what beautiful code is, what a beautiful programming language is.
[01:06:41.540 --> 01:06:52.040]   So one of the things that is, I think, implied, maybe you made explicit in your descriptions there is that Ruby is dynamic typing versus strict typing.
[01:06:52.040 --> 01:07:00.180]   And you have been not just saying that it's a nice thing, but that you will defend dynamic typing to the death.
[01:07:00.180 --> 01:07:04.060]   Like that freedom is a powerful freedom to preserve.
[01:07:04.060 --> 01:07:06.900]   It's the essence of what makes Ruby, Ruby.
[01:07:07.220 --> 01:07:15.420]   This is why I don't fully understand when people call for Ruby to add static typing, because to me, it's the bedrock of what this is.
[01:07:15.420 --> 01:07:21.480]   Why would you want to turn one of the most beautiful languages into something far uglier?
[01:07:21.480 --> 01:07:25.460]   This is one of my primary objections to static typing.
[01:07:25.460 --> 01:07:28.480]   It's not just that it limits you in certain ways.
[01:07:28.480 --> 01:07:30.100]   It makes metaprogramming harder.
[01:07:30.100 --> 01:07:32.220]   I write a bunch of metaprogramming.
[01:07:32.220 --> 01:07:34.880]   I've seen what it takes to do metaprogramming in TypeScript.
[01:07:34.880 --> 01:07:42.000]   That was actually one of the things that just really sent me on a tear of getting meta or getting TypeScript out of some of the projects that I'm involved with.
[01:07:42.000 --> 01:07:52.740]   We pulled TypeScript out of Turbo, one of the front-end frameworks that we have, because I tried to write to metaprogramming in TypeScript, and I was just infuriated.
[01:07:52.740 --> 01:07:54.540]   I don't want that experience.
[01:07:54.540 --> 01:07:57.520]   But I also don't want it from an aesthetic point of view.
[01:07:57.660 --> 01:07:58.980]   I hate repetition.
[01:07:58.980 --> 01:08:06.020]   We've just talked about how much I love that Ruby boils all of these expressions down to its essence.
[01:08:06.020 --> 01:08:07.980]   You can't remove one dot.
[01:08:07.980 --> 01:08:11.220]   You can't remove one character without losing something.
[01:08:11.220 --> 01:08:14.560]   This moment you go for static typing that you declare, at least.
[01:08:14.560 --> 01:08:17.460]   I know there are ways to do implied typing and so forth.
[01:08:17.460 --> 01:08:21.520]   But let's just take the stereotypical case of the Java example, for example.
[01:08:21.520 --> 01:08:24.720]   Capital U, user.
[01:08:24.720 --> 01:08:27.320]   I'm declaring the type of the variable.
[01:08:27.320 --> 01:08:29.100]   Lowercase user.
[01:08:29.100 --> 01:08:31.340]   I'm now naming my variable.
[01:08:31.340 --> 01:08:35.020]   Equals uppercase user or new uppercase user.
[01:08:35.020 --> 01:08:37.040]   I've repeated user three times.
[01:08:37.040 --> 01:08:40.020]   I don't have time for this.
[01:08:40.260 --> 01:08:42.560]   I don't have sensibilities for this.
[01:08:42.560 --> 01:08:45.600]   I don't want my Ruby polluted with this.
[01:08:45.600 --> 01:08:49.700]   Now, I understand all the arguments for why people like static typing.
[01:08:49.700 --> 01:08:53.180]   One of the primary arguments is that it makes tooling easier.
[01:08:53.180 --> 01:08:56.560]   It makes it easier to do autocomplete in editors, for example.
[01:08:56.560 --> 01:09:04.740]   It makes it easier to find certain kinds of bugs, because maybe you're calling methods that don't exist on an object,
[01:09:04.740 --> 01:09:08.720]   and the editor can actually catch that bug before you even run it.
[01:09:09.440 --> 01:09:10.420]   I don't care.
[01:09:10.420 --> 01:09:14.720]   First of all, I don't write code with tools.
[01:09:14.720 --> 01:09:16.860]   I write them with text editors.
[01:09:16.860 --> 01:09:21.620]   I chisel them out of the screen with my bare hands.
[01:09:21.620 --> 01:09:22.980]   I don't autocomplete.
[01:09:22.980 --> 01:09:30.420]   And this is why I love Ruby so much, and this is why I continue to be in love with the text editor rather than the IDE.
[01:09:30.420 --> 01:09:32.360]   I don't want an IDE.
[01:09:32.360 --> 01:09:38.300]   I want my fingers to have to individually type out every element of it,
[01:09:38.400 --> 01:09:43.420]   because it will force me to stay in the world where Ruby is beautiful.
[01:09:43.420 --> 01:09:47.900]   Because as soon as it gets easy to type a lot of boilerplate, well, guess what?
[01:09:47.900 --> 01:09:48.920]   You're going to have a lot of boilerplate.
[01:09:48.920 --> 01:09:56.760]   Every single language, basically, that has great tooling support has a much higher tolerance for boilerplate,
[01:09:56.760 --> 01:09:59.220]   because the thinking is, well, you're not typing it anyway.
[01:09:59.220 --> 01:10:00.440]   You're just autocompleting it.
[01:10:00.680 --> 01:10:01.880]   I don't want that at all.
[01:10:01.880 --> 01:10:08.240]   I want something where the fabric I'm working in is just a text file.
[01:10:08.240 --> 01:10:09.480]   There's nothing else to it.
[01:10:10.120 --> 01:10:12.020]   So, these things play together.
[01:10:12.020 --> 01:10:13.240]   There's the aesthetic part.
[01:10:13.240 --> 01:10:14.580]   There's the tooling part.
[01:10:14.580 --> 01:10:16.460]   There's the metaprogramming part.
[01:10:16.460 --> 01:10:23.020]   There's the fact that Ruby's ethos of duck typing, I don't know if you've heard that term before.
[01:10:23.020 --> 01:10:30.260]   It's essentially not about, can I call this method if an object is of a certain class?
[01:10:30.260 --> 01:10:33.860]   It is, can I call this method if the method responds?
[01:10:34.460 --> 01:10:36.680]   It's very out of small talk in that regard.
[01:10:36.680 --> 01:10:44.980]   You don't actually check of whether that class has the method, which allows you to dynamically add methods at runtime
[01:10:44.980 --> 01:10:50.620]   and do all sorts of really interesting things that underpin all the beautiful metaprogramming that we do in Ruby.
[01:10:50.620 --> 01:10:52.460]   I don't want to lose any of that.
[01:10:52.460 --> 01:10:54.960]   And I don't care for the benefits.
[01:10:54.960 --> 01:11:00.920]   One of the benefits I've seen touted over and over again is that it's much easier to write correct software.
[01:11:00.920 --> 01:11:02.400]   You're going to have fewer bugs.
[01:11:02.400 --> 01:11:05.800]   You're going to have less null pointer exceptions.
[01:11:05.800 --> 01:11:07.280]   You're going to have less, all of this stuff.
[01:11:07.280 --> 01:11:08.620]   Yeah, I don't have any of that.
[01:11:08.620 --> 01:11:12.960]   It's just not something that occurs in my standard mode of operation.
[01:11:12.960 --> 01:11:14.480]   I'm not saying I don't have bugs.
[01:11:14.480 --> 01:11:15.120]   Of course I do.
[01:11:15.120 --> 01:11:19.220]   But I catch those bugs with unit testing, with integration testing.
[01:11:19.220 --> 01:11:27.440]   Those are the kinds of precautions that will catch logical bugs, things that compile but are wrong,
[01:11:27.440 --> 01:11:30.520]   along with the uncompilable stuff.
[01:11:30.520 --> 01:11:33.640]   So I've never been drawn into this world.
[01:11:33.640 --> 01:11:36.260]   And part of it is because I work on a certain class of systems.
[01:11:36.260 --> 01:11:37.500]   I fully accept that.
[01:11:37.500 --> 01:11:44.600]   If you're writing systems that have 5, 10, 50 million lines of code with hundreds, thousands,
[01:11:44.600 --> 01:11:49.380]   or tens of thousands of programmers, I fully accept that you need different methods.
[01:11:49.740 --> 01:11:57.280]   What I object to is the idea that what's right for a code base of 10 million lines of code with 100,000 programmers working on it
[01:11:57.280 --> 01:12:03.240]   is also the same thing I should be using in my bedroom to create Basecamp because I'm just a single individual.
[01:12:03.240 --> 01:12:04.680]   That's complete nonsense.
[01:12:04.960 --> 01:12:08.420]   In the real world, we would know that that makes no sense at all.
[01:12:08.420 --> 01:12:13.700]   That you don't, I don't know, use your Pagani to go pick up groceries at Costco.
[01:12:13.700 --> 01:12:16.260]   It's a bad vehicle for that.
[01:12:16.260 --> 01:12:17.560]   It just doesn't have the space.
[01:12:17.560 --> 01:12:19.640]   You don't want to muddy the beautiful seats.
[01:12:19.640 --> 01:12:20.640]   You don't want to do any of those things.
[01:12:20.640 --> 01:12:26.200]   We know that certain things that are very good in certain domains don't apply to all.
[01:12:26.200 --> 01:12:28.680]   In programming languages, it seems like we forget that.
[01:12:28.680 --> 01:12:32.800]   Now, to be fair, I also had a little bit, perhaps, of a reputation of forgetting that.
[01:12:32.800 --> 01:12:37.780]   When I first learned Ruby, I was so head over heels in love with this programming language
[01:12:37.780 --> 01:12:44.840]   that I almost found it unconceivable that anyone would choose any other programming language at all to write web applications.
[01:12:44.840 --> 01:12:51.300]   And I kind of engaged the evangelism of Ruby on Rails in that spirit as a crusade,
[01:12:51.300 --> 01:12:53.880]   as I just need to teach you the gospel.
[01:12:54.000 --> 01:12:57.320]   I just need to show you this conditional code that we just talked about.
[01:12:57.320 --> 01:13:01.420]   And you will convert at the point of a sharp argument.
[01:13:01.420 --> 01:13:03.220]   Now, I learned that that's not the way.
[01:13:03.220 --> 01:13:06.480]   And part of the reason it's not the way is that programmers think differently.
[01:13:06.480 --> 01:13:09.780]   Our brains are configured differently.
[01:13:09.780 --> 01:13:18.080]   My brain is configured perfectly for Ruby, perfectly for a dynamically duct-typed language
[01:13:18.080 --> 01:13:21.640]   that I can chisel code out of a text editor with.
[01:13:22.100 --> 01:13:26.460]   And other people need the security of an IDE.
[01:13:26.460 --> 01:13:33.120]   They want the security of classes that won't compile unless you call the methods on it.
[01:13:33.120 --> 01:13:34.980]   I have come to accept that.
[01:13:34.980 --> 01:13:36.400]   But most programmers don't.
[01:13:36.400 --> 01:13:39.920]   They're still stuck in, essentially, I like static typing.
[01:13:40.380 --> 01:13:45.260]   Therefore, static typing is the only way to create reliable, correct systems.
[01:13:45.260 --> 01:13:52.340]   Which is just such a mind-blowing, to be blunt, idiotic thing to say in the face of evidence,
[01:13:52.340 --> 01:13:54.740]   mountains of evidence to the contrary.
[01:13:54.740 --> 01:14:03.160]   This is one of the reasons I'm so in love with Shopify as the flagship application for Ruby on Rails.
[01:14:03.860 --> 01:14:09.580]   Shopify exists at a scale that most programmers will never touch.
[01:14:09.580 --> 01:14:14.880]   On Black Friday, I think Shopify did 1 million requests per second.
[01:14:14.880 --> 01:14:17.860]   That's not 1 million requests of images.
[01:14:17.860 --> 01:14:22.500]   That's of dynamic requests that are funneling through the pipeline of commerce.
[01:14:22.740 --> 01:14:28.600]   I mean, Shopify runs something like 30% of all e-commerce stores on the damn internet.
[01:14:28.600 --> 01:14:35.460]   A huge portion of all commerce in total runs through Shopify, and that runs on Ruby on Rails.
[01:14:35.460 --> 01:14:45.420]   So, Ruby on Rails is able to scale up to that level without using static typing in all of what it does.
[01:14:45.500 --> 01:14:51.100]   Now, I know they've done certain experiments in certain ways, because they are hitting some of the limits that you will hit with dynamic typing.
[01:14:51.100 --> 01:14:58.180]   And some of those limits you hit with dynamic typing are actually, by the way, just limits you hit when you write 5 million lines of code.
[01:14:58.180 --> 01:15:01.440]   I think the Shopify monolith is about 5 million lines of code.
[01:15:01.440 --> 01:15:09.280]   At that scale, everything breaks, because you're at the frontier of what humans are capable of doing with programming languages.
[01:15:09.460 --> 01:15:19.680]   The difference, in part, is that Ruby is such a succinct language, that those 5 million, if they'd been written in, let's just say, Go or Java, would have been 50 or 25.
[01:15:19.680 --> 01:15:27.100]   Now, that might have alleviated some of the problems that you have when you work on huge systems with many programmers,
[01:15:27.100 --> 01:15:31.720]   but it certainly would also have compounded them, trying to understand 25 million lines of code.
[01:15:32.640 --> 01:15:34.200]   So, the thing does scale.
[01:15:34.200 --> 01:15:36.940]   That's a persistent myth, that it doesn't scale.
[01:15:36.940 --> 01:15:41.500]   Shopify and others, but Shopify, I think, is a great example.
[01:15:41.500 --> 01:15:44.920]   By the way, I love Shopify, and I love Toby.
[01:15:44.920 --> 01:15:46.260]   You've got to have Toby on.
[01:15:46.260 --> 01:15:47.000]   Yeah, for sure.
[01:15:47.000 --> 01:15:47.480]   Let's talk to you about this morning.
[01:15:47.480 --> 01:15:47.960]   For sure.
[01:15:47.960 --> 01:15:48.860]   He's a brilliant...
[01:15:48.860 --> 01:15:51.740]   I got to hang out with him in the desert somewhere, I forget, in Utah.
[01:15:51.740 --> 01:15:53.220]   He's just a brilliant human.
[01:15:53.220 --> 01:16:00.120]   And Shopify, shopify.com slash Lux, has been supporting this podcast for the longest time.
[01:16:00.120 --> 01:16:03.760]   I don't think, actually, Toby knows that they sponsor this podcast.
[01:16:03.760 --> 01:16:05.300]   I mean, it's a big company, right?
[01:16:05.300 --> 01:16:06.500]   It's a huge company.
[01:16:06.500 --> 01:16:16.340]   I think just under 10,000 employees, market cap of $120 billion, GMV of a quarter of a trillion every quarter.
[01:16:16.340 --> 01:16:18.140]   And he's involved with the details still.
[01:16:18.140 --> 01:16:19.360]   He is, very much so.
[01:16:19.360 --> 01:16:20.820]   Funny story about Toby.
[01:16:20.820 --> 01:16:26.640]   Toby was on the Rails core team back in the mid-2000s.
[01:16:26.640 --> 01:16:32.340]   Toby himself wrote Active Merchant, which is one of the frameworks for creating shops.
[01:16:32.340 --> 01:16:37.080]   He wrote the liquid templating language that Shopify still uses to this day.
[01:16:37.080 --> 01:16:41.920]   He has a huge list of contributions to the Rails ecosystem.
[01:16:41.920 --> 01:16:44.000]   And he's the CEO of the company.
[01:16:44.000 --> 01:16:45.320]   I think it's just...
[01:16:45.320 --> 01:16:49.880]   It's very inspiring to me because it's such at the opposite end of what I like to do.
[01:16:50.100 --> 01:16:54.020]   I like to chisel code with my own hands most of the day.
[01:16:54.020 --> 01:17:01.500]   He runs a company of almost 10,000 people that is literally like world commerce depends on it.
[01:17:01.500 --> 01:17:05.300]   A level of criticality I can't even begin to understand.
[01:17:05.300 --> 01:17:11.860]   And yet we can see eye to eye on so many of these fundamental questions in computer science and program development.
[01:17:12.860 --> 01:17:32.720]   That is a dynamic range to be able to encompass Rails being a great tool for the one developer who's just starting out with an idea, who don't even fully know everything, who is right at the level where PHP would have been a good fit in those late 90s because, yeah, I could probably upload something to an FTP server and so on.
[01:17:32.720 --> 01:17:37.420]   Rails does have more complexity than that, but it also has so much longer runway.
[01:17:37.540 --> 01:17:39.780]   The runway goes all the way to goddamn Shopify.
[01:17:39.780 --> 01:17:46.200]   That is about the most convincing argument I can make for sort of dynamic range that we can do a lot of it.
[01:17:46.200 --> 01:17:50.480]   And even having said that, Shopify is the outlier, of course.
[01:17:50.480 --> 01:17:55.680]   I don't think about Shopify as the primary target when I write Rails.
[01:17:55.680 --> 01:17:57.320]   I think of the single developer.
[01:17:57.320 --> 01:18:00.960]   Actually, I do think about Shopify, but I don't think about Shopify now.
[01:18:00.960 --> 01:18:10.140]   I think of Shopify when Toby was writing Snow Devil, which was the first e-commerce store to sell snowboards that he created that was the pre-Shopify Shopify.
[01:18:10.140 --> 01:18:12.020]   He created it all by himself.
[01:18:12.020 --> 01:18:17.440]   And that was possible because Ruby on Rails isn't just about beautiful code.
[01:18:17.440 --> 01:18:19.320]   It's just as much about productivity.
[01:18:19.560 --> 01:18:37.000]   It's just as much about the impact that an individual programmer is able to have, that they can build a system where they can keep the whole thing in their head and be able to move it forward such that you can go from one developer sitting and working on something, and that something is Shopify, and it turns into what it is today.
[01:18:37.680 --> 01:18:42.980]   When we talk about programming languages and we compare them, we often compare them at a very late stage.
[01:18:42.980 --> 01:18:49.260]   Like, what is the better programming language for, let's say, Twitter in 2009, when it's already a huge success?
[01:18:49.260 --> 01:18:51.180]   Twitter was started on Ruby on Rails.
[01:18:51.180 --> 01:18:53.160]   They then hit some scaling problems.
[01:18:53.160 --> 01:18:55.240]   It was a big debacle at the time.
[01:18:55.240 --> 01:19:03.720]   They end up then, I think, writing it in some other language, which, by the way, I think is the best advertisement ever for Ruby on Rails,
[01:19:03.720 --> 01:19:07.900]   because nothing fucking happened for 10 years after they switched over, right?
[01:19:07.900 --> 01:19:09.780]   Essentially, zero innovation.
[01:19:09.780 --> 01:19:20.200]   Some of that was because they were doing a long conversion, and all of the early success, in part, came because they had the agility to quickly change and adopt and so forth.
[01:19:20.200 --> 01:19:21.860]   That's what startups need.
[01:19:21.860 --> 01:19:23.120]   That's what Shopify needed.
[01:19:23.120 --> 01:19:24.440]   That's what Twitter needed.
[01:19:24.440 --> 01:19:25.580]   That's what everyone needs.
[01:19:25.580 --> 01:19:30.340]   And that's the number one priority for Ruby on Rails, to make sure that we don't lose that.
[01:19:30.340 --> 01:19:38.700]   Because what happens so often when development tools and programming language are driven by huge companies is that they mirror their org chart.
[01:19:38.700 --> 01:19:47.580]   React and everything else needed to use that is, in some ways, a reflection of how Meta builds Facebook.
[01:19:47.580 --> 01:19:48.900]   Because, of course, it is.
[01:19:48.900 --> 01:19:50.620]   Because, of course, it's an instruction of that.
[01:19:50.620 --> 01:19:54.040]   I'm not saying React isn't a great tool and that can't be used by smaller teams.
[01:19:54.040 --> 01:19:54.680]   Of course it can.
[01:19:54.680 --> 01:19:58.960]   But it's born in a very different context than something like Ruby on Rails.
[01:19:58.960 --> 01:20:05.120]   Let me say as a small aside, because I think we might return to Shopify and celebrate it often.
[01:20:05.120 --> 01:20:15.820]   Just a sort of personal note, this particular podcast has way more sponsors and sponsors that want to be sponsors than I could possibly ever have.
[01:20:16.160 --> 01:20:23.640]   And it's really, really important for me to not give a shit and to be able to celebrate people.
[01:20:23.640 --> 01:20:25.160]   Like, I celebrate people.
[01:20:25.160 --> 01:20:26.240]   I celebrate companies.
[01:20:26.240 --> 01:20:29.660]   And I don't care that they're sponsoring.
[01:20:29.660 --> 01:20:31.160]   I really don't care.
[01:20:31.160 --> 01:20:36.660]   I just want to make that very explicit because we're going to continue saying positive things about Shopify.
[01:20:36.660 --> 01:20:37.460]   I don't care.
[01:20:37.460 --> 01:20:38.680]   Stop sponsoring.
[01:20:39.000 --> 01:20:40.440]   It doesn't really matter to me.
[01:20:40.440 --> 01:20:42.640]   But, yeah, I just want to make that explicit.
[01:20:42.640 --> 01:20:52.140]   But to linger on the scaling thing with the Twitter and the Shopify, can you just explain to me what Shopify is doing with the JIT?
[01:20:52.140 --> 01:20:56.720]   What did they have to try to do to scale this thing?
[01:20:56.720 --> 01:20:58.780]   Because that's kind of an incredible story, right?
[01:20:58.780 --> 01:20:59.780]   Yeah.
[01:20:59.780 --> 01:21:07.500]   So one of the great contributions that Shopify has made to the entire Ruby ecosystem, not just Rails, but in particular Rails, is YJIT.
[01:21:07.820 --> 01:21:13.080]   So YJIT is their compiler for Ruby that just makes everything a lot more efficient.
[01:21:13.080 --> 01:21:23.120]   And at Shopify scale, eking out even a 5%, 10% improvement in Ruby's overhead and execution time is a huge deal.
[01:21:23.120 --> 01:21:26.400]   Now, Shopify didn't need YJIT.
[01:21:26.400 --> 01:21:34.680]   Shopify was already running on the initial version of Ruby that was, I think, 10 times slower than what we have today.
[01:21:34.680 --> 01:21:41.340]   If you look back upon the Ruby 1.8.6 that Topi probably started on, just as I started on.
[01:21:41.340 --> 01:21:45.260]   And that was enough to propel Shopify to the scale that it has today.
[01:21:45.260 --> 01:21:52.600]   A lot of the scaling conversation is lost in a failure to distinguish two things.
[01:21:52.600 --> 01:21:59.520]   Scale is kind of one package we talk about when there are really multiple packages inside of it.
[01:21:59.600 --> 01:22:02.720]   One is runtime performance, latency.
[01:22:02.720 --> 01:22:05.420]   How fast can you execute a single request?
[01:22:05.420 --> 01:22:08.740]   Can it happen fast enough that the user will not notice?
[01:22:08.740 --> 01:22:13.600]   If your Rails request takes a second and a half to execute, the user's going to notice.
[01:22:13.600 --> 01:22:16.140]   Your app is going to feel slow and sluggish.
[01:22:16.140 --> 01:22:21.600]   You have to get that response time down below, let's say, at least 300 milliseconds.
[01:22:22.040 --> 01:22:25.020]   I like to target 100 milliseconds as my latency.
[01:22:25.020 --> 01:22:26.580]   That's kind of performance.
[01:22:26.580 --> 01:22:32.280]   How much performance of that kind of latency can you squeeze out of a single CPU core?
[01:22:32.280 --> 01:22:36.160]   That tells you something about what the price of a single request will be.
[01:22:36.160 --> 01:22:42.820]   But then whether you can deal with 1 million requests a second, like Shopify is doing right now.
[01:22:43.140 --> 01:22:50.000]   If you have one box that can do 1,000 requests a second, you just need X boxes to get up to a million.
[01:22:50.000 --> 01:22:55.620]   And what you'll actually find is that when it comes to programming languages, they're all the same in this way.
[01:22:55.620 --> 01:22:59.360]   They all scale largely, beautifully horizontally.
[01:22:59.360 --> 01:23:01.120]   You just add more boxes.
[01:23:01.820 --> 01:23:06.820]   The hard parts of scaling a Shopify is typically not the program language.
[01:23:06.820 --> 01:23:07.940]   It's the database.
[01:23:07.940 --> 01:23:18.240]   And that's actually one of the challenges that Shopify has now is how do you deal with MySQL at the scale that they're operating at?
[01:23:18.240 --> 01:23:23.660]   When do you need to move to other databases to get worldwide performance?
[01:23:23.660 --> 01:23:24.560]   All of these things.
[01:23:24.560 --> 01:23:28.160]   The questions about scaling rupee are economic questions.
[01:23:28.380 --> 01:23:38.720]   If we're spending so and so much on application servers, if we can get just 5% more performance out of Ruby, well, we could save 5% of those servers and that could filter down into the budget.
[01:23:38.720 --> 01:23:43.000]   Now, that analysis concludes into basically one thing.
[01:23:43.000 --> 01:23:46.560]   Ruby is a luxury language.
[01:23:46.560 --> 01:23:51.540]   It's a luxury, the highest luxury, in my opinion.
[01:23:51.540 --> 01:23:58.780]   It is the Kogo Chanel of programming languages, something that not everyone can afford, and I mean this in the best possible way.
[01:23:58.780 --> 01:24:09.400]   There are some applications on the internet where each request has so little value, you can't afford to use a luxurious language like Ruby to program it.
[01:24:09.400 --> 01:24:15.700]   You simply have to slum it with a C or a Go or some other low-level language or a Rust.
[01:24:15.700 --> 01:24:17.660]   Talk about line noise there for a hot second.
[01:24:17.660 --> 01:24:19.340]   The thrift store of languages.
[01:24:19.340 --> 01:24:20.040]   Exactly.
[01:24:20.040 --> 01:24:24.240]   Where you need kind of just, you need a very low level to do it.
[01:24:24.240 --> 01:24:28.240]   You can't afford to use a luxury language to build it with.
[01:24:28.240 --> 01:24:30.160]   That's not true of Shopify.
[01:24:30.160 --> 01:24:31.900]   It wasn't true of Basecamp.
[01:24:31.900 --> 01:24:38.120]   Even back in 2004, it's not been true of 99% of all web applications ever created.
[01:24:38.120 --> 01:24:44.020]   Because the main cost component of 99% of web applications is not CPU cores.
[01:24:44.020 --> 01:24:45.980]   It's wet cores.
[01:24:45.980 --> 01:24:47.500]   It's human cores.
[01:24:47.500 --> 01:24:51.660]   It's human capacity to understand and involve systems.
[01:24:51.660 --> 01:24:53.560]   It's their personal productivity.
[01:24:53.560 --> 01:25:03.140]   I did a calculation once when someone had for the 400th time said that, oh, if you switch from Ruby to some faster language, you could save a bunch of money.
[01:25:03.140 --> 01:25:14.900]   And I calculated it out that at the time, and I think the last time I did this calculation was almost a decade ago, we were spending about 15% of our operating budget on Ruby application servers.
[01:25:16.040 --> 01:25:26.460]   So for me to improve my cost profile of the business by seven percentage points, I'd have to pick something twice as fast.
[01:25:26.460 --> 01:25:27.460]   That's quite hard.
[01:25:27.460 --> 01:25:34.720]   Versus if Ruby and Ruby on Rails was even 10% more productive than something else, I would move the needle far more.
[01:25:34.720 --> 01:25:38.740]   Because making individual programmers more productive actually matters a lot more.
[01:25:38.740 --> 01:25:40.680]   This is why people are so excited about AI.
[01:25:40.880 --> 01:25:52.080]   This is why they're freaking out over the fact that a single programmer in Silicon Valley who makes $300,000 a year can now do the work of three or five, at least in theory.
[01:25:52.080 --> 01:25:55.280]   I haven't actually seen that fully in practice, but let's just assume the theory is correct.
[01:25:55.280 --> 01:25:57.980]   If not now, then in six months.
[01:25:57.980 --> 01:26:00.200]   That's a huge deal.
[01:26:00.200 --> 01:26:05.660]   That matters so much more than whether you can squeeze a few more cycles out of the CPU.
[01:26:05.980 --> 01:26:16.540]   When it comes to these kinds of business applications, if you're making Unreal Engine rendering stuff like Tim Sweeney you had on, yeah, he needs to really sweat all those details.
[01:26:16.540 --> 01:26:18.860]   The Nanite engine can't run on Ruby.
[01:26:18.860 --> 01:26:20.320]   It's never going to.
[01:26:20.320 --> 01:26:21.360]   It was not meant for that.
[01:26:21.360 --> 01:26:22.000]   Fine.
[01:26:22.000 --> 01:26:25.120]   These kinds of business applications absolutely can.
[01:26:25.120 --> 01:26:36.620]   And everything that people are excited about AI for right now, that extra capacity to just do more, that was why we were excited about Ruby back in the early 2000s.
[01:26:36.620 --> 01:26:47.360]   That was because I saw that if we could even squeeze out a 10% improvement of the human programmer, we'd be able to do so much more for so much less.
[01:26:47.360 --> 01:26:55.080]   Probably argue about this, but I really like working together with AI, collaborating with AI.
[01:26:55.080 --> 01:27:00.180]   And I would argue that the kind of code you want AI to generate is human readable, human interpretable.
[01:27:00.180 --> 01:27:00.860]   Yes.
[01:27:00.860 --> 01:27:06.500]   If it's generating Pearl golf code, it's just, it's not a collaboration.
[01:27:06.500 --> 01:27:08.880]   So it has to be speaking the human.
[01:27:08.880 --> 01:27:11.280]   It's not just you're writing the prompts in English.
[01:27:11.400 --> 01:27:17.280]   You also want to read the responses in the human interpretable language like Ruby, right?
[01:27:17.280 --> 01:27:32.220]   So it's, that's actually is beneficial for AI too, because you kind of said that for you, the sculptor, the sort of the elitist Coco Chanel sculptor, you want to, on your fancy keyboard to type every single letter yourself or your own fingers.
[01:27:32.340 --> 01:27:42.600]   But it's also, uh, that, uh, the benefit of Ruby also applies in once that is written by AI and you're actually doing with your own fingers, the editing.
[01:27:42.600 --> 01:27:43.640]   Yes.
[01:27:43.640 --> 01:27:46.640]   Because you can interact with it because it's human interpretable.
[01:27:46.640 --> 01:27:55.780]   The paradigm I really love with this was something Elon actually said on one of your shows when you guys were talking about neural link, that neural link allows the bandwidth.
[01:27:56.280 --> 01:28:03.140]   between you and the machine to increase that language, either spoken or written is very low bandwidth.
[01:28:03.140 --> 01:28:09.660]   If you are to calculate just how many bits we can exchange as we're sitting here, it's very slow.
[01:28:09.660 --> 01:28:11.420]   Ruby.
[01:28:11.420 --> 01:28:24.020]   Has a much higher bandwidth of communication revealed conveys so much more concept per character than most other programming languages do.
[01:28:24.400 --> 01:28:28.900]   So when you are collaborating with AI, you want really high bandwidth.
[01:28:28.900 --> 01:28:39.760]   You want it to be able to produce programs with you, whether you're letting it write the code or not, that both of you can actually understand really quickly.
[01:28:39.760 --> 01:28:49.400]   And that you can compress a grand comp or a grand concept, a grand system into far fewer parts that both of you can understand.
[01:28:49.400 --> 01:28:51.940]   Now, I actually love collaborating with AI too.
[01:28:52.220 --> 01:28:57.100]   I love chiseling my code and the way I use AI is in a separate window.
[01:28:57.100 --> 01:28:58.720]   I don't let it drive my code.
[01:28:58.720 --> 01:28:59.420]   I've tried that.
[01:28:59.420 --> 01:29:03.560]   I've tried the cursors and the wind serves and I don't enjoy that way of writing.
[01:29:03.560 --> 01:29:11.580]   And one of the reasons I don't enjoy that way of writing is I can literally feel competence draining out of my fingers.
[01:29:12.060 --> 01:29:17.160]   And that level of immediacy with the material disappears.
[01:29:17.160 --> 01:29:25.100]   And where I felt this the most was I did this remix of Ubuntu called Omocube when I switched to Linux.
[01:29:25.100 --> 01:29:26.900]   And it's all written in Bash.
[01:29:26.900 --> 01:29:30.840]   I'd never written any serious amount of code in Bash before.
[01:29:30.840 --> 01:29:35.720]   So I was using AI to collaborate to write a bunch of Bash with me because I needed all this.
[01:29:35.880 --> 01:29:36.820]   I knew what I wanted.
[01:29:36.820 --> 01:29:38.420]   I could express it in Ruby.
[01:29:38.420 --> 01:29:45.360]   But I thought it was an interesting challenge to filter through Bash because what I was doing was setting up a Linux machine.
[01:29:45.360 --> 01:29:47.560]   That's basically what Bash was designed for.
[01:29:47.560 --> 01:29:48.640]   It's a great constraint.
[01:29:49.080 --> 01:29:57.380]   But what I found myself doing was asking AI for the same way of expressing a conditional, for example, in Bash over and over again.
[01:29:57.380 --> 01:30:01.080]   That by not typing it, I wasn't learning it.
[01:30:01.080 --> 01:30:02.520]   I was using it.
[01:30:02.520 --> 01:30:06.540]   I was getting the expression I wanted, but I wasn't learning it.
[01:30:06.540 --> 01:30:07.860]   And I got a little scared.
[01:30:07.860 --> 01:30:09.160]   I got a little scared.
[01:30:09.160 --> 01:30:10.740]   Is this the end of learning?
[01:30:10.740 --> 01:30:13.280]   Am I no longer learning if I'm not typing?
[01:30:13.280 --> 01:30:18.380]   And the way I, for me, recast that was I don't want to give up on the AI.
[01:30:18.380 --> 01:30:27.960]   It is such a better experience as a programmer to look up APIs, to get a second opinion on something, to do a draft.
[01:30:27.960 --> 01:30:31.840]   But I have to do the typing myself because you learn with your fingers.
[01:30:31.840 --> 01:30:36.300]   If you're learning how to play the guitar, you can watch as many YouTube videos as you want.
[01:30:36.300 --> 01:30:37.860]   You're not going to learn the guitar.
[01:30:37.860 --> 01:30:43.680]   You have to put your fingers on the strings to actually learn the motions.
[01:30:43.800 --> 01:30:50.180]   And I think there is a parallel here to programming, where programming has to be learned in part by the actual typing.
[01:30:50.180 --> 01:30:52.780]   I'm just really, this is fascinating.
[01:30:52.780 --> 01:30:56.740]   Listen, part of my brain agrees with you 100%, part doesn't.
[01:30:59.020 --> 01:31:01.720]   I think AI should be in the loop of learning.
[01:31:01.720 --> 01:31:05.120]   Now, current systems don't do that.
[01:31:05.120 --> 01:31:11.800]   But I think it's very possible for Cursor to say, to basically force you to type certain things.
[01:31:12.460 --> 01:31:19.920]   So, like, if you set the mode of learning, I just, I don't want to be this sort of give up on AI.
[01:31:19.920 --> 01:31:24.200]   I really, I think, I think vibe coding is a skill.
[01:31:24.660 --> 01:31:30.580]   So, for an experienced programmer, it's too easy to dismiss vibe coding as a thing.
[01:31:30.580 --> 01:31:31.280]   I agree.
[01:31:31.280 --> 01:31:32.120]   I wouldn't dismiss it.
[01:31:32.120 --> 01:31:42.500]   But I think you need to start building that skill and start to figure out how do you prevent the competency from slipping away from your fingers and brain.
[01:31:42.500 --> 01:31:47.060]   Like, how do you develop that skill in parallel to the other skill?
[01:31:47.060 --> 01:31:48.020]   I don't know.
[01:31:48.240 --> 01:31:50.680]   I just, I think it's a fascinating puzzle, though.
[01:31:50.680 --> 01:31:56.740]   I know too many really strong programmers that just kind of avoid AI because it's currently a little too dumb.
[01:31:56.740 --> 01:31:57.580]   Yes.
[01:31:57.580 --> 01:31:59.740]   It's a little too slow is actually my main problem.
[01:31:59.740 --> 01:32:02.840]   It's a little too dumb in some ways, but it's a little too slow in other ways.
[01:32:02.840 --> 01:32:13.500]   When I use Claude's code, the terminal version of Claude, which is actually my preferred way of using it, I just, I get too impatient.
[01:32:13.980 --> 01:32:19.240]   It feels like I'm going back to a time where code had to compile and I had to go do something else.
[01:32:19.240 --> 01:32:21.600]   A boil some tea while the code is compiling.
[01:32:21.600 --> 01:32:23.860]   Well, I've been working in Ruby for 20 years.
[01:32:23.860 --> 01:32:27.580]   I don't have compile weight in me anymore.
[01:32:27.580 --> 01:32:29.740]   So, there's that aspect of it.
[01:32:29.740 --> 01:32:33.740]   But I think the more crucial aspect for me is I really care about the competence.
[01:32:33.740 --> 01:32:39.500]   And I've seen what happens to even great programmers the moment they put away the keyboard.
[01:32:39.760 --> 01:32:43.760]   Because even before AI, this would happen as soon as people would get promoted.
[01:32:43.760 --> 01:32:51.960]   Most great programmers who work in large businesses stop writing code on a daily basis because they simply have too many meetings to attend to.
[01:32:51.960 --> 01:32:53.240]   They have too many other things to do.
[01:32:53.240 --> 01:32:57.520]   And invariably, they lose touch with programming.
[01:32:57.520 --> 01:33:00.220]   That doesn't mean they forget everything.
[01:33:00.760 --> 01:33:08.180]   But if you don't have your fingers in the sauce, the source, you are going to lose touch with it.
[01:33:08.180 --> 01:33:09.220]   There's just no other way.
[01:33:09.220 --> 01:33:11.840]   I don't want that because I enjoy it too much.
[01:33:11.840 --> 01:33:14.120]   This is not just about outcomes.
[01:33:14.120 --> 01:33:16.440]   This is what's crucial to understand.
[01:33:16.440 --> 01:33:22.980]   Programming for programmers who like to code is not just about the programs they get out of it.
[01:33:22.980 --> 01:33:24.760]   That may be the economic value.
[01:33:24.760 --> 01:33:26.560]   It's not the only human value.
[01:33:26.560 --> 01:33:29.620]   The human value is just as much in the expression.
[01:33:29.620 --> 01:33:39.740]   When someone who sits down on a guitar and plays Stairways to Heaven, there's a perfect recording of that that will last in eternity.
[01:33:39.740 --> 01:33:41.420]   You can just put it on Spotify.
[01:33:41.420 --> 01:33:42.540]   You don't actually need to do it.
[01:33:42.540 --> 01:33:45.880]   The joy is to command the guitar yourself.
[01:33:46.520 --> 01:33:51.020]   The joy of the programmer, of me as a programmer, is to type the code myself.
[01:33:51.020 --> 01:33:57.080]   If I elevate myself, if I promote myself out of programming, I turn myself into a project manager.
[01:33:57.080 --> 01:34:01.680]   A project manager of a murder of AI crows, as I wrote the other day.
[01:34:01.680 --> 01:34:05.300]   I could have become a project manager my whole career.
[01:34:05.300 --> 01:34:10.680]   I could have become a project manager 20 years ago if I didn't care to write code myself and I just wanted outcomes.
[01:34:10.680 --> 01:34:12.360]   That's how I got started in programming.
[01:34:12.580 --> 01:34:19.060]   I just wanted outcomes, then I fell in love with programming, and now I'd rather retire than giving up.
[01:34:19.060 --> 01:34:22.300]   Now, that doesn't mean you can't have your cake and eat it too.
[01:34:22.300 --> 01:34:28.640]   I've done some vibe coding where I didn't care that I wasn't playing myself.
[01:34:28.640 --> 01:34:29.920]   I just wanted to see something.
[01:34:29.920 --> 01:34:31.420]   There was an idea in my head.
[01:34:31.420 --> 01:34:33.160]   I wanted to see something.
[01:34:33.160 --> 01:34:34.040]   That's fine.
[01:34:34.320 --> 01:34:36.580]   I also use AI all day long.
[01:34:36.580 --> 01:34:43.300]   In fact, I'm already at the point where if you took it away from me, I'd be like, oh my God, how do we even look things up on the internet anymore?
[01:34:43.300 --> 01:34:45.480]   Is Stack Overflow still around?
[01:34:45.480 --> 01:34:47.340]   A forum still a thing?
[01:34:47.340 --> 01:34:51.280]   How do I even find answers to some of these questions I have all day long?
[01:34:51.280 --> 01:34:52.300]   I don't want to give up AI.
[01:34:52.300 --> 01:34:57.960]   In fact, I'd say the way I like to use AI, I'm getting smarter every day because of AI.
[01:34:57.960 --> 01:35:03.620]   Because I'm using AI to have it explain things to me, even stupid questions.
[01:35:03.620 --> 01:35:06.440]   I would be a little embarrassed to even enter into Google.
[01:35:06.440 --> 01:35:16.100]   AI is perfectly willing to give me the ELI 5 explanation of some Unix command I should have known already, but I don't.
[01:35:16.100 --> 01:35:16.640]   I'm sorry.
[01:35:16.640 --> 01:35:18.140]   Can you just explain it to me?
[01:35:18.180 --> 01:35:19.160]   And now I know the thing.
[01:35:19.160 --> 01:35:24.520]   So at the end of the day of me working with AI all day long, I'm a little bit smarter.
[01:35:24.520 --> 01:35:26.080]   Like 5%.
[01:35:26.080 --> 01:35:27.660]   Sorry, not 5%.
[01:35:27.660 --> 01:35:28.920]   Half a percent, maybe.
[01:35:28.920 --> 01:35:30.820]   That compounds over time.
[01:35:30.820 --> 01:35:40.480]   But what I've also seen when I worked on the Omaku project and I tried to let AI drive for me, I felt I was maybe half a percent dumber at the end of the day.
[01:35:40.480 --> 01:35:42.540]   Okay, you said a lot of interesting things.
[01:35:42.540 --> 01:35:46.440]   First of all, let's just start with the very fact that asking dumb questions.
[01:35:46.720 --> 01:35:53.680]   If you go to Stack Overflow and ask a dumb question or read somebody else's dumb question and the answer to it, there's a lot of judgment there.
[01:35:53.680 --> 01:35:57.720]   AI, sometimes to an excessive degree, has no judgment.
[01:35:57.720 --> 01:36:00.480]   It usually says, oh, that's a great question.
[01:36:00.480 --> 01:36:01.820]   To a fault.
[01:36:01.820 --> 01:36:02.360]   Yeah.
[01:36:02.360 --> 01:36:03.720]   Oh, that's wonderful.
[01:36:05.000 --> 01:36:10.120]   Yeah, I mean, it's so conducive to learning.
[01:36:10.120 --> 01:36:13.500]   It's such a wonderful tool for learning and I too would miss it.
[01:36:13.500 --> 01:36:21.580]   And it's a great, basically, search engine into all kinds of nuances of a particular programming language, especially if you don't know it that well.
[01:36:21.580 --> 01:36:24.180]   Or like APIs, you can load in documentation.
[01:36:24.180 --> 01:36:25.800]   It's just so great for learning.
[01:36:26.320 --> 01:36:34.320]   For me personally, it, I mean, on the happiness scale, it makes me more excited to program.
[01:36:34.320 --> 01:36:37.380]   I don't know what that is exactly.
[01:36:37.380 --> 01:36:42.320]   Part of that is the, I'm really sorry, Stack Overflow is an incredible website.
[01:36:42.320 --> 01:36:44.220]   But there is a negativity there.
[01:36:44.220 --> 01:36:44.500]   Yes.
[01:36:44.500 --> 01:36:45.700]   There's a judgment there.
[01:36:46.220 --> 01:36:53.580]   There's, it's just exciting to be a, like a, with a hype man next to me, just like saying, yeah, that's a great idea.
[01:36:53.580 --> 01:36:55.340]   And I'll say, no, that's wrong.
[01:36:55.340 --> 01:36:56.880]   I'll, I'll correct the AI.
[01:36:56.880 --> 01:37:00.260]   And, and the AI will say, you're absolutely right.
[01:37:00.260 --> 01:37:02.020]   How did I not think about that?
[01:37:02.020 --> 01:37:03.200]   Rewrite the code.
[01:37:03.200 --> 01:37:04.440]   I'm like, holy shit.
[01:37:04.440 --> 01:37:11.980]   I'm having, it's like a buddy that's like really being positive and is very smart and is challenging me to think.
[01:37:11.980 --> 01:37:16.220]   And even if I never use the code, it generates, I'm already a better programmer.
[01:37:16.220 --> 01:37:21.200]   But actually the deeper thing is for some reason, I'm having more fun.
[01:37:21.200 --> 01:37:23.000]   That's a really, really important thing.
[01:37:23.000 --> 01:37:26.040]   I like to think of it as a pair programmer for exactly that reason.
[01:37:26.040 --> 01:37:35.460]   Pair programming came of vogue in like the 2000s where you'd have two programmers in front of one machine and you'd push the keyboard between you.
[01:37:35.460 --> 01:37:37.240]   One program would be driving.
[01:37:37.240 --> 01:37:38.540]   They'd be typing in.
[01:37:38.540 --> 01:37:43.660]   The other programmer would essentially sit and watch the code, suggest improvements, look something up.
[01:37:43.660 --> 01:37:46.360]   That was a really interesting dynamic.
[01:37:46.360 --> 01:37:51.540]   Now, unfortunately, I'm an introvert, so I can do that for about five minutes before I want to jump off a bridge.
[01:37:51.540 --> 01:37:59.200]   So it doesn't work for me as a full-time occupation, but AI allows me to have all the best of that experience all the time.
[01:37:59.200 --> 01:38:02.480]   Now, I think what's really interesting when you said about it makes it more fun.
[01:38:02.480 --> 01:38:08.620]   I hadn't actually thought about that, but what it's made more fun to me is to be a beginner again.
[01:38:08.620 --> 01:38:14.180]   It's made it more fun to learn Bash successfully for the first time.
[01:38:14.180 --> 01:38:24.100]   Now, I had to do the detour where I let it write all the code for me and I realized I wasn't learning nearly as much as I hoped I would and that I started doing once I typed it out myself.
[01:38:24.540 --> 01:38:33.660]   But it gave me the confidence that, you know what, if I need to do some iOS programming myself, I haven't done that in probably six years was the last time I dabbled in it.
[01:38:33.660 --> 01:38:35.200]   I never really built anything for real.
[01:38:35.200 --> 01:38:41.100]   I feel highly confident now that I could sit down with AI and I could have something in the App Store by the end of the week.
[01:38:41.520 --> 01:38:46.000]   I would not have that confidence unless I had a pair programming body like AI.
[01:38:46.000 --> 01:38:48.460]   I don't actually use it very much for Ruby code.
[01:38:48.460 --> 01:38:51.640]   I'm occasionally impressed whenever I try it.
[01:38:51.640 --> 01:38:53.080]   They're like, oh, it got this one thing right.
[01:38:53.080 --> 01:38:54.680]   That is truly remarkable.
[01:38:54.680 --> 01:38:55.820]   And it's actually pretty good.
[01:38:55.820 --> 01:38:58.780]   And then I'll ask it two more questions and I go like, oh, yeah, okay.
[01:38:58.780 --> 01:39:04.740]   If you were my junior programmer, I'd start tapping my fingers and going like, you got to shape up.
[01:39:04.740 --> 01:39:07.460]   Now, the great thing, of course, is we can just wait five minutes.
[01:39:08.560 --> 01:39:14.040]   The entropic CEO seems to think that 90% of all code by the end of the year is going to be written by AI.
[01:39:14.040 --> 01:39:16.480]   I'm more than a little bit skeptical about that.
[01:39:16.480 --> 01:39:25.420]   But I'm open-minded about the prospect that programming potentially will turn into a horse when done manually.
[01:39:25.420 --> 01:39:27.300]   Something we do recreationally.
[01:39:27.300 --> 01:39:30.320]   It's no longer a mode of transportation to get around LA.
[01:39:30.320 --> 01:39:36.100]   You're not going to saddle up and go to the grocery store and pick up stuff from Whole Foods in your saddlebags.
[01:39:36.100 --> 01:39:37.460]   That's just not a thing anymore.
[01:39:37.700 --> 01:39:41.620]   That could be the future for programming, for manual programming.
[01:39:41.620 --> 01:39:43.000]   Entirely possible.
[01:39:43.000 --> 01:39:44.760]   I also don't care.
[01:39:44.760 --> 01:39:52.300]   Even though we have great renditions of all the best songs, as I said, there are millions of people who love to play the guitar.
[01:39:52.300 --> 01:39:55.380]   It may no longer have as much economic value as it once did.
[01:39:55.380 --> 01:40:00.860]   I think that I'm quite convinced is true, that we perhaps have seen the peak.
[01:40:00.860 --> 01:40:08.800]   Now, I understand the paradox when the price of something goes down, actually the overall usage goes up and total spend on that activity goes up.
[01:40:08.800 --> 01:40:10.320]   That could also happen, maybe.
[01:40:10.320 --> 01:40:19.260]   But what we're seeing right now is that a lot of the big shops, a lot of the big companies are not hiring like they were five years ago.
[01:40:19.360 --> 01:40:22.600]   They're not anticipating they're going to need tons more programmers.
[01:40:22.600 --> 01:40:32.420]   Controversially, Toby actually put out a memo inside of Shopify asking everyone who's considering hiring someone to ask the question, could this be done by AI?
[01:40:32.900 --> 01:40:35.520]   Now, he's further ahead on this question than I am.
[01:40:35.520 --> 01:40:39.620]   I look at some of the coding trenches and I go like, I'd love to use AI more.
[01:40:39.620 --> 01:40:41.140]   And I see how it's making us more productive.
[01:40:41.140 --> 01:40:44.560]   But it's not yet at the level where I just go like, oh, we have this project.
[01:40:44.560 --> 01:40:46.260]   Let me just give it to the AI agent.
[01:40:46.260 --> 01:40:47.540]   And it's going to go off and do it.
[01:40:47.540 --> 01:40:48.920]   But let's just be honest.
[01:40:48.920 --> 01:40:54.920]   You're like a Clint Eastwood type character, cowboy on a horse, seeing cars going around.
[01:40:54.920 --> 01:40:55.800]   You're like, well.
[01:40:55.800 --> 01:40:56.660]   That's part of it.
[01:40:56.660 --> 01:41:04.540]   And I think that it is important to have that humility, that what you are good at may no longer be what society values.
[01:41:04.540 --> 01:41:10.240]   This has happened a million times in history that you could have been exceptionally good at saddle making, for example.
[01:41:10.240 --> 01:41:14.000]   That's something that a lot of people used to care about because everyone rode a horse.
[01:41:14.000 --> 01:41:21.660]   And then suddenly riding a horse became this niche hobby that there's some people care about it, but not nearly as many.
[01:41:21.660 --> 01:41:22.540]   That's OK.
[01:41:22.540 --> 01:41:28.880]   Now, the other thing of this is I've had the good fortune to have been a programmer for nearly 30 years.
[01:41:28.880 --> 01:41:30.080]   That's a great run.
[01:41:30.080 --> 01:41:46.920]   I try to look at life in this way that I've already been blessed with decades of economically viable, highly valuable ways of translating what I like best in the working world to write Ruby code.
[01:41:46.920 --> 01:41:51.220]   That that was so valuable that I could make millions and millions of dollars doing it.
[01:41:51.480 --> 01:41:54.860]   And if that's over tomorrow, I shouldn't look at that with regret.
[01:41:54.860 --> 01:41:56.180]   I should look at it with gratitude.
[01:41:56.180 --> 01:42:04.260]   But you're also a highly experienced, brilliant and opinionated human being.
[01:42:04.260 --> 01:42:17.100]   So it's really interesting to get your opinion on the future of the horse because, you know, there's a lot of young people listening to this who love programming or who are excited by the possibility of building stuff with software.
[01:42:17.760 --> 01:42:22.020]   With a Ruby, with Ruby, with Ruby on Rails, that kind of language.
[01:42:22.020 --> 01:42:24.000]   And now the possibility.
[01:42:24.000 --> 01:42:24.740]   But is it a career?
[01:42:24.740 --> 01:42:25.860]   Is it a career?
[01:42:25.860 --> 01:42:36.660]   And how, if indeed a single person can build more and more and more with the help of AI, like how do they learn that skill?
[01:42:36.780 --> 01:42:38.080]   Is this a good skill to learn?
[01:42:38.080 --> 01:42:41.300]   I mean, that to me is the real mystery here.
[01:42:41.300 --> 01:42:47.520]   Because I think it's still absolutely true that you have to learn how to program from scratch currently.
[01:42:47.520 --> 01:42:48.100]   Yes.
[01:42:48.100 --> 01:42:50.500]   But how do you balance those two skills?
[01:42:50.500 --> 01:42:57.080]   Because I too, as I'm thinking now, there is a scary slipping away of skill that happens.
[01:42:57.080 --> 01:43:04.440]   In a matter of like really minutes on a particular piece of code, it's just, it's scary.
[01:43:04.440 --> 01:43:13.760]   Not the way driving, you know, when you have a car drive for you, it doesn't quite slip away that fast.
[01:43:14.540 --> 01:43:16.220]   So that really scares me.
[01:43:16.220 --> 01:43:19.720]   So when somebody comes up to me and asks me, like, how do I learn to program?
[01:43:19.720 --> 01:43:28.200]   I don't know what the advice is because I think it's not enough to just use cursor or Copa to generate code.
[01:43:28.200 --> 01:43:29.780]   It's absolutely not enough.
[01:43:29.780 --> 01:43:30.840]   Not if you want to learn.
[01:43:30.840 --> 01:43:32.820]   Not if you want to become better at it.
[01:43:32.820 --> 01:43:37.140]   If you just become a tap monkey, maybe you're productive in a second.
[01:43:37.140 --> 01:43:42.780]   But then you have to realize, well, can anyone just tap if that's all we're doing is just sitting around all day long tapping?
[01:43:42.780 --> 01:43:44.360]   Yes, yes, yes, yes, yes.
[01:43:44.360 --> 01:43:46.060]   That's not a marketable skill.
[01:43:46.060 --> 01:43:52.980]   Now, I always preface this both to myself and when I speak to others about it is rule number one.
[01:43:52.980 --> 01:43:54.780]   Nobody fucking knows anything.
[01:43:54.780 --> 01:43:57.540]   No one can predict even six months ahead.
[01:43:57.540 --> 01:44:04.780]   Right now, we're probably at peak AI future hype because we see all the promise because so much of it is real.
[01:44:04.780 --> 01:44:17.740]   And so many people have experienced it themselves, this mind-boggling thing that the silicon is thinking in some way that feels eerily reminiscent of humans.
[01:44:17.740 --> 01:44:21.120]   I'd actually say the big thing for me wasn't even ChatGPT.
[01:44:21.120 --> 01:44:21.980]   It wasn't even Claude.
[01:44:21.980 --> 01:44:22.860]   It was DeepSeek.
[01:44:22.860 --> 01:44:32.300]   Running DeepSeek locally and seeing the think box where it converses with itself about how to formulate the response.
[01:44:33.000 --> 01:44:35.280]   I almost wanted to think, is this a gimmick?
[01:44:35.280 --> 01:44:40.260]   Is it doing this as a performance for my benefit, but that's not actually how it thinks?
[01:44:40.260 --> 01:44:42.920]   If this is how it actually thinks, okay, I'm a little scared.
[01:44:42.920 --> 01:44:47.520]   This is incredibly human, how it thinks in this way.
[01:44:47.520 --> 01:44:49.300]   But where does that go?
[01:44:49.300 --> 01:44:56.620]   So in 95, one of my favorite movies, one of my favorite B movies came out, The Lawnmower Man.
[01:44:56.620 --> 01:44:57.200]   Great movie.
[01:44:57.440 --> 01:44:59.800]   Incredible movie about virtual reality.
[01:44:59.800 --> 01:45:06.080]   Being an avatar and living in VR, like the story was a mess, but the aesthetics, the world that built up was incredible.
[01:45:06.080 --> 01:45:09.020]   And I thought, we're five years away.
[01:45:09.020 --> 01:45:11.280]   I'm going to be living in VR now.
[01:45:11.280 --> 01:45:13.200]   I'm just going to be floating around.
[01:45:13.200 --> 01:45:14.120]   I'm going to be an avatar.
[01:45:14.120 --> 01:45:16.560]   This is where most humans can spend most of the day.
[01:45:16.560 --> 01:45:19.060]   That didn't happen.
[01:45:19.060 --> 01:45:20.420]   We're 30 years later.
[01:45:21.180 --> 01:45:24.620]   VR is still not here.
[01:45:24.620 --> 01:45:25.760]   It's here for gaming.
[01:45:25.760 --> 01:45:28.480]   It's here for some specialized applications.
[01:45:28.480 --> 01:45:31.680]   My oldest loves playing Gorilla Tag.
[01:45:31.680 --> 01:45:32.900]   I don't know if you've tried that.
[01:45:32.900 --> 01:45:34.700]   That's basically the hottest VR game.
[01:45:34.700 --> 01:45:35.740]   Wonderful.
[01:45:35.740 --> 01:45:36.500]   It's great.
[01:45:36.500 --> 01:45:40.460]   It's really hard to predict the future because we just don't know.
[01:45:40.460 --> 01:45:49.080]   And then when you factor in AI and you have even the smartest people go like, I don't think we fully understand how this works.
[01:45:49.080 --> 01:45:58.560]   But then on the flip side, you have Moore's Law that seems to have worked for many, many, many years in decreasing the size of the transistor, for example.
[01:45:59.100 --> 01:46:05.220]   It's like, you know, Flash didn't take over the internet, but Moore's Law worked.
[01:46:05.220 --> 01:46:07.540]   So we don't know which one AI is.
[01:46:07.540 --> 01:46:08.040]   It is.
[01:46:08.040 --> 01:46:10.260]   And this is what I find so fascinating, too.
[01:46:10.260 --> 01:46:17.260]   I forget who did this presentation, but someone in the web community did this great presentation on the history of the airplane.
[01:46:17.260 --> 01:46:26.420]   So you go from the Wright brothers flying in, what, 1903 or something like that, and 40 years later, you have a jet flight.
[01:46:27.060 --> 01:46:31.140]   Just an unbelievable amount of progress in four decades.
[01:46:31.140 --> 01:46:41.040]   Then in 56, I think it was, the hull design for the Boeing 747, essentially, precursor was designed.
[01:46:41.040 --> 01:46:42.700]   And basically nothing has happened since.
[01:46:42.700 --> 01:46:48.440]   Just minor tweaks and improvements on the flying experience since the 50s.
[01:46:48.440 --> 01:46:55.260]   Somehow, if you were to predict where flying was going to go and you were sitting in 42 and you'd seen,
[01:46:55.600 --> 01:47:00.980]   you'd remember the Wright brothers flying in 03 and you were seeing that jet engines coming.
[01:47:00.980 --> 01:47:04.520]   You're like, we're going to fly to the stars in another two decades.
[01:47:04.520 --> 01:47:11.200]   We're going to invent super mega hypersonic flights that's going to traverse the Earth in two hours.
[01:47:11.200 --> 01:47:12.460]   And then that didn't happen.
[01:47:12.460 --> 01:47:13.200]   It tapped out.
[01:47:13.820 --> 01:47:16.240]   This is what's so hard about predicting the future.
[01:47:16.240 --> 01:47:22.200]   We can be so excited in the moment because we're drawing a line through early dots on a chart.
[01:47:22.200 --> 01:47:24.700]   And it looks like those early dots are just going up and to the right.
[01:47:24.700 --> 01:47:26.120]   And sometimes they just flatten out.
[01:47:26.700 --> 01:47:31.880]   This is also one of those things where we have so much critical infrastructure, for example, that still runs on COBOL,
[01:47:31.880 --> 01:47:35.700]   that about five humans around the world really understand truly, deeply,
[01:47:35.700 --> 01:47:44.040]   that it's possible for society to lose a competence it still needs because it's chasing the future.
[01:47:44.040 --> 01:47:45.660]   COBOL is still with us.
[01:47:46.180 --> 01:47:48.620]   This is one of the things I think about with programming.
[01:47:48.620 --> 01:47:52.860]   Ruby on Rails is at such a level now that in 50 years from now,
[01:47:52.860 --> 01:47:57.120]   it's exceedingly likely that there's still a ton of Ruby on Rails systems running around.
[01:47:57.120 --> 01:48:00.220]   Now, very hard to predict what that exact world is going to be like.
[01:48:00.460 --> 01:48:07.060]   But yesterday's weather tells us that if there's still COBOL code from the 70s operating Social Security today,
[01:48:07.060 --> 01:48:11.620]   and we haven't figured out a clean way to convert that, let alone understand it,
[01:48:11.620 --> 01:48:16.280]   we should certainly be humble about predicting the future.
[01:48:16.280 --> 01:48:20.200]   I don't think any of the programmers who wrote that COBOL code back in the 70s
[01:48:20.200 --> 01:48:26.840]   had any damn idea that in 2025, checks were still being cut off the business logic that they had encoded back then.
[01:48:27.180 --> 01:48:31.780]   But that just brings me to the conclusion on the question for what should a young programmer do?
[01:48:31.780 --> 01:48:33.700]   You're not going to be able to predict the future.
[01:48:33.700 --> 01:48:35.840]   No one's going to be able to predict the future.
[01:48:35.840 --> 01:48:38.180]   If you like programming, you should learn programming.
[01:48:38.180 --> 01:48:40.260]   Now, is that going to be a career forever?
[01:48:40.260 --> 01:48:40.860]   I don't know.
[01:48:40.860 --> 01:48:42.360]   But what's going to be a career forever?
[01:48:42.360 --> 01:48:43.560]   Who knows?
[01:48:43.560 --> 01:48:49.880]   Like a second ago, we thought that it was the blue-collar labor that was going to be abstracted first.
[01:48:49.880 --> 01:48:51.520]   It was the robots that were going to take over.
[01:48:51.520 --> 01:48:55.460]   Then Gen AI comes out, and then all the artists suddenly look like,
[01:48:55.460 --> 01:48:57.940]   holy shit, is this going to do all animation now?
[01:48:57.940 --> 01:48:59.220]   It's going to do all music now.
[01:48:59.220 --> 01:49:00.460]   They get real scared.
[01:49:00.460 --> 01:49:03.620]   And now I see the latest Tesla robot going like,
[01:49:03.620 --> 01:49:06.160]   oh, maybe we're back now to blue-collar being in trouble,
[01:49:06.160 --> 01:49:10.180]   because if it can dance like that, it can probably fix a toilet.
[01:49:10.180 --> 01:49:13.300]   So no one knows anything.
[01:49:13.300 --> 01:49:18.100]   And you have to then position yourself for the future in such a way that
[01:49:18.100 --> 01:49:20.500]   it doesn't matter.
[01:49:20.500 --> 01:49:27.680]   That you pick a profession or path where if it turns out that you have to retool and reskill,
[01:49:27.680 --> 01:49:30.060]   you're not going to regret the path you took.
[01:49:30.060 --> 01:49:32.720]   That's a general life principle for me.
[01:49:32.720 --> 01:49:39.240]   How I look at all endeavors I involve myself in is I want to be content with all outcomes.
[01:49:39.240 --> 01:49:42.260]   When we start working on a new product at 37 Signals,
[01:49:42.260 --> 01:49:45.160]   I set up my mental model for its success.
[01:49:45.160 --> 01:49:46.900]   And I go, do you know what?
[01:49:46.900 --> 01:49:52.960]   If no one wants this, I will have had another opportunity to write beautiful Ruby code,
[01:49:52.960 --> 01:49:56.240]   to explore Greenfield domain, to learn something new,
[01:49:56.240 --> 01:49:59.440]   to build a system I want, even if no one else wants it.
[01:49:59.440 --> 01:50:00.860]   What a blessing.
[01:50:00.860 --> 01:50:02.620]   What a privilege.
[01:50:03.080 --> 01:50:05.760]   If a bunch of people want it, that's great.
[01:50:05.760 --> 01:50:07.660]   We can pay some salaries.
[01:50:07.660 --> 01:50:09.160]   We can keep the business running.
[01:50:09.160 --> 01:50:11.680]   And if it's a blow away success, wonderful.
[01:50:11.680 --> 01:50:13.160]   I get to impact a bunch of people.
[01:50:13.160 --> 01:50:19.360]   I think one of the big open questions to me is how far you can get with vibe coding.
[01:50:19.360 --> 01:50:24.760]   Whether an approach for a young developer to invest most of their time into vibe coding
[01:50:24.760 --> 01:50:27.080]   or into writing code from scratch.
[01:50:27.080 --> 01:50:32.600]   So vibe coding meaning, I'm leaning into the meme a little bit,
[01:50:32.600 --> 01:50:35.380]   but vibe coding meaning you generate code.
[01:50:35.380 --> 01:50:38.240]   You have this idea of a thing you want to create.
[01:50:38.240 --> 01:50:43.900]   You generate the code and then you fix it with both natural language to the prompts and manually.
[01:50:43.900 --> 01:50:46.580]   You learn enough to manually fix it.
[01:50:46.580 --> 01:50:50.000]   So that's the learning process, how you fix code that's generated.
[01:50:50.000 --> 01:51:00.200]   Or you write code from scratch and have the LLMs kind of tab, tab, tab, tab, add extra code.
[01:51:01.120 --> 01:51:03.180]   Which part do you lean on?
[01:51:03.180 --> 01:51:11.520]   I think to be safe, you should find the beauty and the artistry and the skill in both.
[01:51:11.520 --> 01:51:12.420]   Write from scratch.
[01:51:12.420 --> 01:51:16.280]   There should be some percent of your time just writing from scratch and some percent vibe coding.
[01:51:16.400 --> 01:51:19.400]   There should be more of the time writing from scratch.
[01:51:19.400 --> 01:51:25.320]   If you are interested in learning how to program, unfortunately, you're not going to get fit by watching fitness videos.
[01:51:25.320 --> 01:51:29.340]   You're not going to learn how to play the guitar by watching YouTube guitar videos.
[01:51:29.460 --> 01:51:31.340]   You have to actually play yourself.
[01:51:31.340 --> 01:51:32.620]   You have to do the sit-ups.
[01:51:32.620 --> 01:51:37.780]   Programming, understanding, learning almost anything requires you to do.
[01:51:37.780 --> 01:51:45.420]   Humans are not built to absorb information in a way that transforms into skills by just watching others from afar.
[01:51:45.800 --> 01:51:48.380]   Now, ironically, it seems AI is actually quite good at that.
[01:51:48.380 --> 01:51:49.600]   But humans are not.
[01:51:49.600 --> 01:51:54.560]   If you want to learn how to become a competent programmer, you have to program.
[01:51:54.560 --> 01:51:58.440]   It's really not that difficult to understand.
[01:51:58.440 --> 01:51:59.940]   Now, understand the temptation.
[01:52:00.340 --> 01:52:10.640]   And the temptation is there because vibe coding can produce things, perhaps in this moment, especially in a new domain you're not familiar with, with tools you don't know perfectly well, that's better than what you could do.
[01:52:10.640 --> 01:52:13.660]   Or that you would take much longer to get at.
[01:52:13.660 --> 01:52:15.060]   But you're not going to learn anything.
[01:52:15.060 --> 01:52:21.620]   You're going to learn in this superficial way that feels like learning, but is completely empty calories.
[01:52:21.620 --> 01:52:26.320]   And secondly, if you can just vibe code it, you're not a programmer.
[01:52:26.320 --> 01:52:28.560]   Then anyone could do it, which may be wonderful.
[01:52:28.960 --> 01:52:31.460]   That's essentially what happened with the Access database.
[01:52:31.460 --> 01:52:32.920]   That's what happened with Excel.
[01:52:32.920 --> 01:52:44.820]   It took the capacity of accountants to become software developers because the tools became so accessible to them that they could build a model for how the business was going to do next week.
[01:52:44.820 --> 01:52:47.300]   That required a programmer prior to Excel.
[01:52:47.300 --> 01:52:49.980]   Now it didn't because they could do it themselves.
[01:52:49.980 --> 01:52:58.560]   Vibe coding enables non-programmers to explore their ideas in a way that I find absolutely wonderful.
[01:52:59.340 --> 01:53:00.880]   But it doesn't make you a programmer.
[01:53:00.880 --> 01:53:05.780]   I agree with you, but I want to allow for room for both of us to be wrong.
[01:53:05.780 --> 01:53:17.580]   For example, there could be vibe coding could actually be a skill that if you train it and by vibe coding, let's include the step of correction, the iterative correction.
[01:53:18.120 --> 01:53:30.120]   It's possible if you get really good at that, that you're outperforming the people that ride from scratch, that you can come up with truly innovative things, especially at this moment in history.
[01:53:30.120 --> 01:53:38.300]   While the LLMs are a little bit too dumb to create super novel things and a complete product, but they're starting to creep close to that.
[01:53:38.640 --> 01:53:48.440]   So if you're investing time now into becoming a really good vibe coder, maybe this is the right thing to do if it's indeed a skill.
[01:53:48.440 --> 01:53:52.980]   We kind of meme about vibe coding just like sitting back and it's in the name.
[01:53:52.980 --> 01:54:11.960]   But if you treat it seriously, a competitive vibe coder and get good at riding the wave of AI and get good at the skill of editing code versus writing code from scratch, it's possible that you can actually get farther in the long term.
[01:54:12.080 --> 01:54:18.800]   Maybe editing is a fundamentally different task than writing from scratch, if you take that seriously as a skill that you develop.
[01:54:18.800 --> 01:54:21.200]   To me, that's an open question.
[01:54:21.200 --> 01:54:34.720]   I just think I personally, and now you're on another level, but just me, just personally, I'm not as good at editing the code that I didn't write.
[01:54:34.720 --> 01:54:36.060]   No one is.
[01:54:36.560 --> 01:54:42.100]   No one is of this generation, but maybe that's a skill.
[01:54:42.100 --> 01:54:47.120]   Maybe if you get on the same page as the AI, because there's a consistency to the AI.
[01:54:47.120 --> 01:54:53.060]   It's like, it really is a pair programmer with a consistent style and structure and so on.
[01:54:53.060 --> 01:54:57.080]   Plus, with your own prompting, you can control the kind of code you write.
[01:54:57.080 --> 01:54:58.700]   I mean, it could legitimately be a skill.
[01:54:58.700 --> 01:55:00.740]   That's the dream of the prompt engineer.
[01:55:00.740 --> 01:55:02.860]   I think it's a complete pipe dream.
[01:55:02.860 --> 01:55:08.500]   I don't think editors exist that aren't good at writing.
[01:55:08.500 --> 01:55:09.780]   I've written a number of books.
[01:55:09.780 --> 01:55:11.920]   I've had a number of professional editors.
[01:55:11.920 --> 01:55:17.440]   Not all of them wrote their own great books, but all of them were great writers in some regard.
[01:55:17.440 --> 01:55:21.100]   You cannot give someone pointers if you don't know how to do it.
[01:55:21.360 --> 01:55:30.400]   It's very difficult for an editor to be able to spot what's wrong with a problem if they couldn't make the solution themselves.
[01:55:30.400 --> 01:55:33.860]   Editing, in my opinion, is the reward.
[01:55:33.860 --> 01:55:38.660]   The capacity to be a good editor is the reward you get from being a good doer.
[01:55:38.660 --> 01:55:40.420]   You have to be a doer first.
[01:55:40.420 --> 01:55:51.680]   Now, that's not the same as saying that vibe coding, prompt engineering, won't be able to produce fully formed, amazing systems even shortly.
[01:55:51.680 --> 01:55:53.040]   I think that's entirely possible.
[01:55:53.040 --> 01:55:57.400]   But then there's no skill left, which maybe is the greatest payoff at all.
[01:55:57.400 --> 01:55:59.340]   Wasn't that the whole promise of AI anyway?
[01:55:59.340 --> 01:56:01.420]   That it was just all natural language?
[01:56:01.420 --> 01:56:07.500]   That even my clumsy way of formulating a question could result in a beautiful, succinct answer?
[01:56:07.500 --> 01:56:12.780]   That actually, to me, is a much more appealing vision that there's going to be these special prompt engineering wizards
[01:56:12.780 --> 01:56:16.980]   who know how to tickle the AI just right to produce what they want.
[01:56:16.980 --> 01:56:23.480]   The beauty of AI is to think that someone who doesn't know the first thing about how AI actually works
[01:56:23.480 --> 01:56:28.280]   is able to formulate their idea and their aspirations for what they want,
[01:56:28.280 --> 01:56:34.640]   and the AI could somehow take that messy clump of ideas and produce something that someone wants.
[01:56:34.640 --> 01:56:37.320]   That's actually what programming has always been.
[01:56:37.320 --> 01:56:42.120]   There's very often been people who didn't know how to program, who wanted programs,
[01:56:42.120 --> 01:56:46.140]   who then hired programmers, who gave them messy descriptions of what they wanted,
[01:56:46.140 --> 01:56:49.120]   and then when the programmers delivered that back, said,
[01:56:49.120 --> 01:56:50.440]   oh, no, actually, that's not what I meant.
[01:56:50.440 --> 01:56:51.460]   I want something else.
[01:56:51.460 --> 01:56:55.920]   AI may be able to provide that cycle.
[01:56:55.920 --> 01:57:00.760]   If that happens to the fullest extent of it, yeah, there's not going to be as many programmers around, right?
[01:57:00.760 --> 01:57:06.300]   But hopefully, presumably, someone still, at least for the foreseeable future,
[01:57:06.300 --> 01:57:10.880]   have to understand whether what the AI is producing actually works or not.
[01:57:10.880 --> 01:57:13.740]   As an interesting case study, maybe a thought experiment,
[01:57:14.260 --> 01:57:23.120]   if I wanted to vibe code Basecamp or Hay and some of the products you've built,
[01:57:23.120 --> 01:57:26.320]   like what would be the bottlenecks?
[01:57:26.320 --> 01:57:28.880]   Where would I fail along the way?
[01:57:28.880 --> 01:57:33.840]   What I've seen when I've been trying to do this, trying to use vibe coding to build something real,
[01:57:33.840 --> 01:57:35.420]   is you actually fail really early.
[01:57:36.600 --> 01:57:43.260]   The vibe coding is able to build a veneer at the current present moment of something that looks like it works,
[01:57:43.260 --> 01:57:45.040]   but it's flawed in all sorts of ways.
[01:57:45.040 --> 01:57:49.100]   There are the obvious ways, the meme ways, that it's leaking all your API keys.
[01:57:49.100 --> 01:57:52.120]   It's storing your password in plain text.
[01:57:52.120 --> 01:57:54.560]   I think that's ultimately solvable.
[01:57:54.560 --> 01:57:57.580]   It's going to figure that out, or at least it's going to get better at that.
[01:57:58.000 --> 01:58:02.540]   But its capacity to get lost in its own labyrinth is very great right now.
[01:58:02.540 --> 01:58:06.820]   You let it code something, and then you want to change something,
[01:58:06.820 --> 01:58:08.920]   and it becomes a game of whack-a-mole real quick.
[01:58:08.920 --> 01:58:12.660]   Peter Levels, who've been doing this wonderful flight simulator, was talking to that,
[01:58:12.660 --> 01:58:16.340]   where at a certain scale, the thing just keeps biting its own tail.
[01:58:16.340 --> 01:58:18.720]   You want to fix something, and it breaks five other things,
[01:58:18.720 --> 01:58:22.860]   which I think is actually uniquely human, because that's how most bad programmers are.
[01:58:22.860 --> 01:58:29.960]   At the certain level of complexity with the domain, they can't fix one thing without breaking three other things.
[01:58:29.960 --> 01:58:36.080]   So in that way, I'm actually, in some way, it's almost a positive signal for that the AI is going to figure this out,
[01:58:36.080 --> 01:58:39.220]   because it's on an extremely human trajectory right now.
[01:58:39.220 --> 01:58:43.460]   The kind of mistakes it's making are the kind of mistakes that junior programmers make all the time.
[01:58:43.460 --> 01:58:43.800]   Yeah.
[01:58:43.800 --> 01:58:51.160]   Can we zoom out and look at the vision, the manifesto, the doctrine of Rails?
[01:58:51.160 --> 01:58:58.340]   What are some of the things that make a programming language, a framework, great, especially for web development?
[01:58:58.340 --> 01:58:59.660]   So we talked about happiness.
[01:58:59.660 --> 01:59:00.360]   Yes.
[01:59:00.360 --> 01:59:02.660]   The underlying objective of Ruby.
[01:59:02.660 --> 01:59:04.280]   What else?
[01:59:04.280 --> 01:59:08.140]   So you're looking at the nine points I wrote out in, I think, 2012.
[01:59:08.140 --> 01:59:13.280]   And first, before we dive into them, I want to say the reason I wrote it down is that
[01:59:13.280 --> 01:59:20.820]   if you want a community to endure, you have to record its values and you have to record its practices.
[01:59:20.820 --> 01:59:27.500]   If you don't, eventually you're going to get enough new people come in who have their own ideas of where this thing should go.
[01:59:27.500 --> 01:59:34.400]   And if we don't have a guiding light helping us to make decisions, we're going to start flailing.
[01:59:34.400 --> 01:59:35.960]   We're going to start actually falling apart.
[01:59:35.960 --> 01:59:40.180]   I think this is one of the key reasons that institutions of all kinds start falling apart.
[01:59:40.180 --> 01:59:43.560]   We forget why Chesterton's fence is there.
[01:59:43.560 --> 01:59:45.240]   We just go like, why is that fence there?
[01:59:45.240 --> 01:59:46.280]   Let's yank it out.
[01:59:46.480 --> 01:59:48.140]   Oh, it was to keep the wolves out.
[01:59:48.140 --> 01:59:49.080]   Now we're all dead.
[01:59:49.080 --> 01:59:49.680]   Oops.
[01:59:49.680 --> 01:59:52.420]   So I wanted to write these things down.
[01:59:52.420 --> 01:59:56.820]   And if we just take them quick one by one, you talked about optimizing for programmer happiness.
[01:59:56.820 --> 01:59:59.680]   I put that at number one in homage of Matt's.
[02:00:00.240 --> 02:00:07.120]   And that's a lot about accepting that there is occasionally a trade-off between writing beautiful code and other things we want out of systems.
[02:00:07.120 --> 02:00:08.640]   There could be a runtime trade-off.
[02:00:08.640 --> 02:00:10.300]   There can be a performance trade-off.
[02:00:10.300 --> 02:00:12.180]   But we're going to do it nonetheless.
[02:00:12.920 --> 02:00:20.360]   We're also going to allow ambiguity in a way that many programmers by default are uncomfortable with.
[02:00:20.360 --> 02:00:28.860]   I give the example actually here of in the interactive Ruby shell, where you can play with the language or even interact with your domain model.
[02:00:28.860 --> 02:00:32.660]   You can quit it in two ways, at least, that I found.
[02:00:32.660 --> 02:00:33.740]   You can write exit.
[02:00:33.740 --> 02:00:35.440]   Boom, you're out of the program.
[02:00:35.440 --> 02:00:36.740]   You can write quit.
[02:00:36.740 --> 02:00:37.920]   Boom, you're out of the program.
[02:00:37.920 --> 02:00:39.100]   They do the same thing.
[02:00:39.100 --> 02:00:45.180]   We just wrote both exit, or the people who built that, wrote both exit and quit because they knew humans were likely to pick one or the other.
[02:00:45.180 --> 02:00:49.040]   Python is the perfect contrast to this.
[02:00:49.040 --> 02:00:53.660]   In the Python interactive protocol, if you write exit, it won't exit.
[02:00:53.660 --> 02:00:54.860]   It'll give you a fucking lesson.
[02:00:54.860 --> 02:00:57.820]   It'll basically tell you to read the fucking manual.
[02:00:57.820 --> 02:01:05.560]   It says, use exit parentheses or control D, i.e. end of file, to exit.
[02:01:06.060 --> 02:01:10.940]   I'm like, one is very human, and another is very engineer.
[02:01:10.940 --> 02:01:14.220]   And I mean that, both of them, in the best possible way.
[02:01:14.220 --> 02:01:16.320]   Python is pedantic.
[02:01:16.320 --> 02:01:25.960]   Python's value, from the start stated, is that there should be preferably one and only one way to do a certain thing.
[02:01:25.960 --> 02:01:27.620]   Ruby goes the complete opposite.
[02:01:27.620 --> 02:01:36.900]   No, we want the full expression that fits different human brains, such that it seems like the language is guessing just what they want.
[02:01:36.900 --> 02:01:46.700]   And part of that is also you described the principle of least surprise, which is a difficult thing to engineer into a language, because you have to kind of, it's a subjective thing.
[02:01:46.940 --> 02:01:50.560]   Which is why you can't do it in one way, which is why I use the example of both exit and quit.
[02:01:50.560 --> 02:01:56.580]   The principle of least surprise for some people would be like, oh, exit, that's how I get out of the prompt.
[02:01:56.580 --> 02:01:58.000]   For other people, it'd be quit.
[02:01:58.000 --> 02:02:00.000]   Why don't we just do both?
[02:02:00.000 --> 02:02:03.500]   Okay, so what's the convention over configuration?
[02:02:03.500 --> 02:02:04.940]   That's a big one.
[02:02:04.940 --> 02:02:05.840]   That's a big one.
[02:02:05.880 --> 02:02:06.600]   That's a huge one.
[02:02:06.600 --> 02:02:22.640]   And it was born out of a frustration I had in the early days with especially Java frameworks, where when you were setting up a web application framework for Java back in the day, it was not uncommon to literally write hundreds, if not thousands of lines of XML configuration files.
[02:02:22.640 --> 02:02:23.800]   Oh, I need this.
[02:02:23.800 --> 02:02:29.560]   I want the database to use the foreign keys as post underscore ID.
[02:02:29.800 --> 02:02:30.120]   No, no, no.
[02:02:30.120 --> 02:02:33.380]   I want it as post capital I-D.
[02:02:33.380 --> 02:02:34.340]   Oh, no, no, no.
[02:02:34.340 --> 02:02:36.720]   You have to do a capital P-I-D.
[02:02:36.720 --> 02:02:43.300]   There are all these ways where you can configure how foreign relation keys should work in a database, and none of them matter.
[02:02:43.300 --> 02:02:46.380]   We just need to pick one, and then that's fine.
[02:02:46.380 --> 02:02:50.240]   And if we pick one and we can depend on it, it becomes a convention.
[02:02:50.240 --> 02:02:52.820]   And if it's a convention, we don't have to configure it.
[02:02:52.820 --> 02:02:56.680]   And if we don't have to configure it, you can get started with what you actually care about much quicker.
[02:02:57.660 --> 02:03:03.740]   So convention over configuration is essentially to take that idea that the system should come pre-assembled.
[02:03:03.740 --> 02:03:08.360]   I'm not just handing you a box of fucking Legos and asking you to build the Millennium Falcon.
[02:03:08.360 --> 02:03:10.180]   I'm giving you a finished toy.
[02:03:10.180 --> 02:03:10.880]   You can edit.
[02:03:10.880 --> 02:03:11.600]   You can change it.
[02:03:11.600 --> 02:03:12.700]   It's still built out of Legos.
[02:03:12.700 --> 02:03:15.140]   You can still take some pieces off and put in some other pieces.
[02:03:15.140 --> 02:03:16.780]   But I'm giving you the final product.
[02:03:16.780 --> 02:03:20.680]   And this cuts against the grain of what most programmers love.
[02:03:20.680 --> 02:03:22.100]   They love a box of Legos.
[02:03:22.100 --> 02:03:24.500]   They love to put everything together from scratch.
[02:03:24.600 --> 02:03:28.220]   They love to make all these detailed little decisions that just don't matter at all.
[02:03:28.220 --> 02:03:32.460]   And I want to elevate that up such that, hey, I'm not trying to take the decisions away from you.
[02:03:32.460 --> 02:03:37.080]   I just want you to focus on decisions that actually matter, that you truly care about.
[02:03:37.080 --> 02:03:41.240]   No one cares about whether it's post underscore ID or post ID or PIT.
[02:03:41.240 --> 02:03:43.240]   Yeah, great defaults.
[02:03:43.240 --> 02:03:43.980]   Yes.
[02:03:43.980 --> 02:03:45.140]   It's just a wonderful thing.
[02:03:45.140 --> 02:03:46.600]   You have all these aspirations.
[02:03:46.600 --> 02:03:52.500]   They're going to do some kind of custom, most beautiful Legos castle that nobody's ever built from these pieces.
[02:03:52.500 --> 02:03:59.100]   But in reality, to be productive in most situations, you just need to build the basic thing.
[02:03:59.100 --> 02:04:02.600]   And then on top of that is where your creativity comes.
[02:04:03.240 --> 02:04:03.560]   Absolutely.
[02:04:03.560 --> 02:04:16.160]   And I think this is one of those part of the doctrine that a lot of programmers who get to use Ruby on Rails begrudgingly will acknowledge it's a nice thing, even if they don't really like it.
[02:04:16.160 --> 02:04:23.360]   Like, it's hard to beat the sort of attraction to building with Legos from scratch out of programmers.
[02:04:23.360 --> 02:04:24.420]   That's just what we like.
[02:04:24.420 --> 02:04:27.720]   Like, this is why we're programmers in the first place, because we'd like to put these little pieces together.
[02:04:27.720 --> 02:04:32.920]   But we can direct that instinct towards a more productive end of the stack.
[02:04:32.920 --> 02:04:33.740]   Okay.
[02:04:33.740 --> 02:04:34.880]   What are some of the other ones?
[02:04:34.880 --> 02:04:37.300]   The menu is omakasa.
[02:04:37.300 --> 02:04:41.640]   It actually comes out of the same principle, that great defaults really matter.
[02:04:41.640 --> 02:04:48.860]   If you look at everything that's wrong with the JavaScript ecosystem right now, for example, it is that no one is in charge of the menu.
[02:04:49.160 --> 02:04:55.900]   There are a billion different dishes, and you can configure just your tailored, specific configuration of it.
[02:04:55.900 --> 02:04:58.780]   But no one done the work to make sure it all fits together.
[02:04:58.780 --> 02:05:02.460]   So you have all these unique problems in the JavaScript ecosystem, for example.
[02:05:02.460 --> 02:05:07.280]   There's probably 25 major ways of just doing the controller layer.
[02:05:07.280 --> 02:05:10.560]   And then as many of how to talk to the database.
[02:05:10.560 --> 02:05:16.580]   So you get this permutation of N times N times N of no one is using the same thing.
[02:05:16.880 --> 02:05:19.960]   And if they are using the same thing, they're only using the same thing for about five minutes.
[02:05:19.960 --> 02:05:22.640]   So we have no retained wisdom.
[02:05:22.640 --> 02:05:25.160]   We build up no durable skills.
[02:05:25.160 --> 02:05:28.740]   Rails goes the complete opposite way of saying, do you know what?
[02:05:28.740 --> 02:05:31.360]   Rails is not just a web framework.
[02:05:31.360 --> 02:05:35.500]   It is a complete attempt at solving the web problem.
[02:05:35.500 --> 02:05:40.400]   It's a complete attempt at solving everything you need to build a great web application.
[02:05:40.400 --> 02:05:47.920]   And every piece of that puzzle should ideally be in the box, pre-configured, pre-assembled.
[02:05:47.920 --> 02:05:50.520]   If you want to change some of those pieces later, that's wonderful.
[02:05:50.520 --> 02:05:58.380]   But on day one, you'll get a full menu designed by a chef who really cared about every piece of the ingredient.
[02:05:58.380 --> 02:06:00.140]   And you're going to enjoy it.
[02:06:02.040 --> 02:06:06.880]   And that's, again, one of those things where many programmers think, like, I know better.
[02:06:06.880 --> 02:06:10.820]   And they do in some hyper-local sense of it.
[02:06:10.820 --> 02:06:12.020]   Every programmer knows better.
[02:06:12.020 --> 02:06:13.420]   This is what Ruby is built on.
[02:06:13.420 --> 02:06:16.760]   That every programmer knows better in their specific situation.
[02:06:16.760 --> 02:06:18.620]   Maybe they can do something dangerous.
[02:06:18.620 --> 02:06:20.820]   Maybe they think they know better.
[02:06:20.820 --> 02:06:22.220]   And then they blow their foot off.
[02:06:22.220 --> 02:06:25.640]   And then they truly will know better because they've blown their foot off once and won't do it again.
[02:06:26.640 --> 02:06:32.640]   So you, in general, see the value in the monolith.
[02:06:32.640 --> 02:06:33.100]   Yes.
[02:06:33.100 --> 02:06:34.700]   The integrated system.
[02:06:34.700 --> 02:06:35.420]   Integrated system.
[02:06:35.420 --> 02:06:37.260]   Someone thought of the whole problem.
[02:06:37.260 --> 02:06:43.200]   This is one of the reasons why I've been on a crusade against microservices since the term was coined.
[02:06:43.200 --> 02:06:47.160]   Microservices was born out of essentially a good idea.
[02:06:47.160 --> 02:06:53.080]   What do you do at Netflix scale when you have thousands of engineers working on millions of lines of code?
[02:06:53.080 --> 02:06:55.820]   No one can keep that entire system in their head at one time.
[02:06:55.820 --> 02:06:56.860]   You have to break it down.
[02:06:56.860 --> 02:07:00.860]   Microservices can be a reasonable way to do that when you're at Netflix scale.
[02:07:00.860 --> 02:07:07.880]   When you apply that pattern to a team of 20 programmers working on a code base of half a million lines of code, you're an idiot.
[02:07:07.880 --> 02:07:14.220]   You just don't need to turn method invocations into network calls.
[02:07:14.220 --> 02:07:16.940]   It is the first rule of distributed programming.
[02:07:16.940 --> 02:07:19.580]   Do not distribute your programming.
[02:07:19.580 --> 02:07:21.800]   It makes everything harder.
[02:07:21.960 --> 02:07:27.980]   All the failure conditions you have to consider as a programmer just becomes infinitely harder when there's a network cable involved.
[02:07:27.980 --> 02:07:32.640]   So I hate the idea of premature decomposition.
[02:07:32.640 --> 02:07:35.040]   And microservices is exactly that.
[02:07:35.040 --> 02:07:49.520]   The monolith says, let's try to focus on building a whole system that a single human can actually understand and push that paradigm as far as possible by compressing all the concepts such that more of it will fit into memory of a single operating human.
[02:07:49.960 --> 02:07:53.460]   And then we can have a system where I can actually understand all of Basecamp.
[02:07:53.460 --> 02:07:55.300]   I can actually understand all of Hay.
[02:07:55.300 --> 02:07:58.620]   Both of those systems are just over 100,000 lines of code.
[02:07:58.620 --> 02:08:02.720]   I've seen people do this at maybe twice, maybe three times that scale, and then it starts breaking down.
[02:08:02.720 --> 02:08:07.740]   Once you get north of certainly half a million lines of code, no individual human can do it.
[02:08:07.840 --> 02:08:11.380]   And that's when you get into maybe some degree of microservices can make sense.
[02:08:11.380 --> 02:08:13.820]   Basecamp and Hay are both 100,000?
[02:08:13.820 --> 02:08:15.000]   100,000 lines of code.
[02:08:15.000 --> 02:08:16.140]   Wow, that's small.
[02:08:16.140 --> 02:08:16.900]   It is.
[02:08:16.900 --> 02:08:23.180]   Considering the fact that Basecamp, I think, has something like 420 screens, different ways and configurations.
[02:08:23.180 --> 02:08:25.020]   Do you include the front end in that?
[02:08:25.020 --> 02:08:26.680]   No, that's the Ruby code.
[02:08:26.680 --> 02:08:30.640]   Well, it's front end in the sense that some of that Ruby code is beneficial to the front end.
[02:08:30.640 --> 02:08:32.220]   But it's not JavaScript, for example.
[02:08:32.360 --> 02:08:37.540]   Now, the other thing we might talk about later is we write very little JavaScript, actually, for all of our applications.
[02:08:37.540 --> 02:08:44.340]   Hay, which is a Gmail competitor, Gmail ships, I think, 28 megabytes of uncompressed JavaScript.
[02:08:44.340 --> 02:08:46.960]   If you compress it, I think it's about 6 megabytes, 28 megabytes.
[02:08:46.960 --> 02:08:48.480]   Think about how many lines of code that is.
[02:08:48.480 --> 02:08:51.920]   When Hay launched, we shipped 40 kilobytes.
[02:08:51.920 --> 02:08:54.700]   It's trying to solve the same problem.
[02:08:54.700 --> 02:09:02.060]   You can solve the email client problem with either 28 megabytes of uncompressed JavaScript or with 40 kilobytes.
[02:09:02.180 --> 02:09:03.600]   If you do things differently.
[02:09:03.600 --> 02:09:06.480]   But that comes to the same problem, essentially.
[02:09:06.480 --> 02:09:12.060]   This is why I have fiercely fought splitting front end and back end apart.
[02:09:12.060 --> 02:09:16.540]   That, in my opinion, this was one of the great crimes against web development.
[02:09:16.540 --> 02:09:19.940]   That we are still atoning for.
[02:09:19.940 --> 02:09:27.440]   That we separated and divided what was and should be a unified problem-solving mechanism.
[02:09:27.440 --> 02:09:31.020]   When you are working both on front end and back end, you understand the whole system.
[02:09:31.520 --> 02:09:36.640]   And you're not going to get into these camps that decompose and eventually you end up with shit like GraphQL.
[02:09:36.640 --> 02:09:38.920]   Okay.
[02:09:38.920 --> 02:09:42.720]   Let's fly through the rest of the doctrine.
[02:09:42.720 --> 02:09:43.840]   No one paradigm.
[02:09:43.840 --> 02:09:49.380]   No one paradigm goes to the fact that Ruby is a fiercely object-oriented programming language at its core.
[02:09:49.380 --> 02:09:52.040]   But it's also a functional programming language.
[02:09:52.040 --> 02:09:58.760]   This five times I told you about, you can essentially do these anonymous function calls.
[02:09:58.760 --> 02:10:04.100]   And you can chain them together very much in the spirit of how true functional programming languages work.
[02:10:04.100 --> 02:10:09.900]   Ruby has even moved closer towards the functional programming end of the scale by making strings immutable.
[02:10:11.340 --> 02:10:17.920]   There are ideas from all different disciplines of, and all different paradigms of software development that can fit together.
[02:10:17.920 --> 02:10:21.680]   Smalltalk, for example, was only object-oriented.
[02:10:21.680 --> 02:10:22.660]   And that was just it.
[02:10:22.660 --> 02:10:28.660]   Ruby tries to be mainly object-oriented, but borrow a little bit of functional programming, a little bit of imperative programming.
[02:10:28.660 --> 02:10:29.900]   Be able to do all of that.
[02:10:29.900 --> 02:10:31.940]   Rails tries to do the same thing.
[02:10:32.040 --> 02:10:35.180]   We're not just going to pick one paradigm and run it through everything.
[02:10:35.180 --> 02:10:40.700]   Object-orientation is at the center of it, but it's okay to invite all these other disciplines in.
[02:10:40.700 --> 02:10:41.860]   It's okay to be inspired.
[02:10:41.860 --> 02:10:43.080]   It's okay to remix it.
[02:10:43.080 --> 02:10:48.420]   I actually think one of the main benefits of Rails is that it's a remix.
[02:10:48.420 --> 02:10:50.300]   I didn't invent all these ideas.
[02:10:50.300 --> 02:10:52.220]   I didn't come up with active record.
[02:10:52.220 --> 02:10:55.580]   I didn't come up with the MVC way of dividing an application.
[02:10:56.020 --> 02:11:02.020]   I took all the great ideas that I had learned and picked up from every different camp, and I put it together.
[02:11:02.020 --> 02:11:09.860]   Not because there was going to be just one single overarching theory of everything, but I was going to have a cohesive unit that incorporated the best from everywhere.
[02:11:09.860 --> 02:11:14.400]   Is that idea a bit at tension with the beauty of the monolith system?
[02:11:14.860 --> 02:11:32.460]   I think the monolith can be thought of as quite roomy, quite as a big tent, that the monolith needs, actually, to borrow a little bit of functional programming for the kinds of problems that that excels, that discipline excels at solving, and that paradigm excels at solving.
[02:11:32.460 --> 02:11:39.980]   If you also want object-orientation at its core, I actually think when I've looked at functional programming languages, there's a lot to love.
[02:11:39.980 --> 02:11:49.160]   And then I see some of the crazy contortions they have to go through when part of the problem they're solving calls for mutating something.
[02:11:49.160 --> 02:11:55.680]   And you go like, holy shit, this is a great paradigm for 90% of the problem.
[02:11:55.680 --> 02:11:59.700]   And then you're twisting yourself completely out of shape when you try to solve the last 10.
[02:11:59.700 --> 02:12:02.460]   Ooh, exalt beautiful code is the next one.
[02:12:02.680 --> 02:12:20.920]   We've talked about that at length, and here's a great example that really summarizes the domain-specific language quality of Ruby on Rails, that you can make code actually pleasant to write and read, which is really funny to me because, as we talked about, when I started learning programming, it wasn't even a consideration.
[02:12:20.920 --> 02:12:30.720]   I didn't even know that that could be part of the premise, that that could be part of the solution, that writing code could feel as good as writing a poem.
[02:12:30.720 --> 02:12:40.440]   Class project, application record belongs to account, has many participants, class name person, validates presence of name.
[02:12:40.440 --> 02:12:42.380]   See, you could read it out.
[02:12:42.380 --> 02:12:44.080]   You didn't even change anything.
[02:12:44.080 --> 02:12:45.100]   It's like a haiku or something.
[02:12:45.440 --> 02:12:45.740]   Right.
[02:12:45.740 --> 02:12:47.060]   Isn't that beautiful?
[02:12:47.060 --> 02:12:47.620]   Yeah, it's nice.
[02:12:47.620 --> 02:12:49.780]   It's really nice.
[02:12:49.780 --> 02:12:51.560]   There's an intuitive nature to it.
[02:12:51.560 --> 02:12:54.380]   Okay, so I have specific questions there.
[02:12:54.380 --> 02:12:59.720]   I mean, active record, just to take that tangent, that has to be your favorite feature.
[02:12:59.720 --> 02:13:02.540]   It's the crown jewel of Rails.
[02:13:02.540 --> 02:13:03.420]   It really is.
[02:13:03.420 --> 02:13:07.320]   It is the defining characteristic of how to work with Ruby on Rails.
[02:13:07.660 --> 02:13:23.420]   And it's born in an interesting level of controversy because it actually uses a pattern that had been described by Martin Fowler in the Patterns of Enterprise Application Architecture, one of the greatest books for anyone working on business systems.
[02:13:23.420 --> 02:13:25.760]   And if you had not read it, you must pick it up immediately.
[02:13:25.760 --> 02:13:28.440]   Patterns of Enterprise Application Architecture.
[02:13:28.440 --> 02:13:30.120]   I think it was published in 2001.
[02:13:30.120 --> 02:13:35.020]   It is one of the very few programming books that I have read many times over.
[02:13:35.020 --> 02:13:35.860]   It's incredible.
[02:13:36.180 --> 02:13:42.640]   In it, Martin describes a bunch of different patterns of how to build business systems, essentially.
[02:13:42.640 --> 02:13:45.500]   And active record is a little bit of a footnote in there.
[02:13:45.500 --> 02:13:47.140]   The pattern is literally called active record.
[02:13:47.140 --> 02:13:47.680]   You can look it up.
[02:13:47.680 --> 02:13:48.020]   Nice.
[02:13:48.020 --> 02:13:48.840]   It's called active record.
[02:13:48.840 --> 02:13:52.160]   I wasn't even creative enough to come up with a name of my own.
[02:13:52.420 --> 02:14:03.320]   But it allows the creation, the marriage of database and object orientation in a way that a lot of programmers find a little off-putting.
[02:14:03.480 --> 02:14:11.620]   They don't actually want to pollute the beautiful object-oriented nature of that kind of programming with SQL.
[02:14:11.620 --> 02:14:16.220]   There was a rant by Uncle Bob the other day about how SQL is the worst thing ever.
[02:14:16.220 --> 02:14:17.100]   Blah, blah.
[02:14:17.100 --> 02:14:18.920]   Okay, fine.
[02:14:18.920 --> 02:14:19.360]   Whatever.
[02:14:19.360 --> 02:14:20.120]   I don't care.
[02:14:20.120 --> 02:14:21.620]   This is practical.
[02:14:22.160 --> 02:14:24.360]   We are making crud applications.
[02:14:24.360 --> 02:14:28.440]   You're taking things out of an HTML form and you're sticking them into a damn database.
[02:14:28.440 --> 02:14:29.940]   It's not more complicated than that.
[02:14:29.940 --> 02:14:35.980]   The more abstractions you put in between those two ends of the spectrum, the more you're just fooling yourself.
[02:14:35.980 --> 02:14:36.980]   This is what we're doing.
[02:14:36.980 --> 02:14:38.680]   We're talking to SQL databases.
[02:14:39.140 --> 02:14:50.240]   By the way, quick aside, SQL was one of those things that have endured the onslaught of no SQL databases, structured list data for a better part of a decade and still reign supreme.
[02:14:50.240 --> 02:14:52.960]   SQL was a good thing to invest your time in learning.
[02:14:52.960 --> 02:15:02.300]   Every program I'm working with the web should know SQL to a fair degree, even if they're working with an ORM, an object relational mapper, as active record.
[02:15:02.300 --> 02:15:03.880]   You still need to understand SQL.
[02:15:04.260 --> 02:15:10.320]   What active record does is not so much try to abstract the SQL away behind a different kind of paradigm.
[02:15:10.320 --> 02:15:23.100]   It's just making it less cumbersome to write, making it more amenable to build domain models on top of other domain models in a way since you don't have to write every damn SQL statement by hand.
[02:15:23.100 --> 02:15:33.000]   Let's just say that active record is an ORM, which is a layer that makes it intuitive and human interpretable to communicate with a database.
[02:15:33.220 --> 02:15:39.160]   Even simpler than that, it turns tables into classes and rows into objects.
[02:15:39.160 --> 02:15:41.940]   I actually think SQL is very easy to understand.
[02:15:41.940 --> 02:15:44.100]   Most of it, you can write some SQL golf too.
[02:15:44.100 --> 02:15:45.340]   That's very hard to understand.
[02:15:45.340 --> 02:15:50.580]   But SQL at its base and much of the criticism against SQL was it was written for human consumption.
[02:15:50.580 --> 02:15:55.360]   It's actually quite verbose, especially if you're doing things like inserts over and over again.
[02:15:55.360 --> 02:16:05.420]   It's quite verbose, insert into table, parentheses, enumerate every column you want to insert, values, parentheses, every value that fits with that column.
[02:16:05.420 --> 02:16:10.420]   It gets tedious to write SQL by hand, but it's actually very humanly readable.
[02:16:12.000 --> 02:16:15.180]   Active record just takes that tediousness away.
[02:16:15.180 --> 02:16:20.940]   It makes it possible to combine things in a way that a humanly describable language just doesn't.
[02:16:20.940 --> 02:16:25.360]   It composes things into methods and you can combine these methods and you can build structures around them.
[02:16:25.360 --> 02:16:27.480]   So I don't dislike SQL.
[02:16:27.480 --> 02:16:29.080]   I dislike a lot of things in programming.
[02:16:29.080 --> 02:16:30.380]   I try to get rid of them.
[02:16:30.380 --> 02:16:31.720]   SQL wasn't really one of them.
[02:16:31.720 --> 02:16:35.520]   It was just a sense of I don't want to write the same thing over and over again.
[02:16:35.520 --> 02:16:37.880]   It was a can we be a little more succinct?
[02:16:37.880 --> 02:16:47.120]   Can we match it just slightly better to the object orientation without trying to hide away the fact that we're persisting these objects into a database?
[02:16:47.120 --> 02:16:50.120]   That's where I think a lot of ORMs went wrong.
[02:16:50.120 --> 02:16:57.800]   They tried to live in the pure world of objects, never to consider that those objects had to be consistent into a SQL database.
[02:16:58.200 --> 02:17:01.900]   And then they came up with convoluted way of translating back and forth.
[02:17:01.900 --> 02:17:04.140]   Active record says, do you know what?
[02:17:04.140 --> 02:17:04.840]   Just accept it.
[02:17:04.840 --> 02:17:09.700]   This record, this object, is not going to get saved into some NoSQL database.
[02:17:09.700 --> 02:17:10.480]   It's not going to be saved.
[02:17:10.480 --> 02:17:11.920]   It's going to be saved into a SQL database.
[02:17:11.920 --> 02:17:14.420]   So it's just structured the whole thing around that.
[02:17:14.420 --> 02:17:15.820]   It's going to have attributes.
[02:17:15.820 --> 02:17:19.000]   Those attributes are going to respond to columns in the database.
[02:17:19.000 --> 02:17:20.500]   It's not more complicated than that.
[02:17:20.500 --> 02:17:21.420]   Stop making it so.
[02:17:21.420 --> 02:17:26.660]   Yeah, but I should say, so I personally love SQL because I'm an algorithms person.
[02:17:27.180 --> 02:17:28.360]   And so I love optimization.
[02:17:28.360 --> 02:17:42.140]   I love to know how the databases actually work so I can match the SQL queries and the design of the tables such that there is, you know, optimal, squeeze the optimal performance out of the table.
[02:17:42.140 --> 02:17:42.780]   Okay.
[02:17:42.780 --> 02:17:45.880]   Based on the actual way that that table is used.
[02:17:46.140 --> 02:17:52.100]   So, I mean, I think that pushes to the point that, like, there is value in learning and understanding SQL.
[02:17:52.100 --> 02:17:58.340]   I wonder, because I started looking at Active Record and it looks really awesome.
[02:17:58.340 --> 02:18:00.020]   Does that make you lazy?
[02:18:00.020 --> 02:18:05.040]   Not you, but a person that rolls in and starts using Rails.
[02:18:06.140 --> 02:18:09.720]   You can probably get away with never really learning SQL, right?
[02:18:09.720 --> 02:18:12.740]   As long as you want to stay at the entry level of competence.
[02:18:12.740 --> 02:18:26.020]   And this is actually my overarching mission with Rails, is to lower the barrier of entry so far down that someone can start seeing stuff on the browser without basically understanding anything.
[02:18:26.260 --> 02:18:31.260]   They can run Rails' new blog, run a couple of generators.
[02:18:31.260 --> 02:18:32.400]   They have a whole system.
[02:18:32.400 --> 02:18:33.720]   They don't understand anything.
[02:18:33.720 --> 02:18:36.460]   But it's an invitation to learn more.
[02:18:36.460 --> 02:18:44.520]   Where I get fired up, and this ties back to the AI discussion, is when that's turned into this meme that programmers no longer have to be competent.
[02:18:44.520 --> 02:18:47.340]   They can just, I mean, the AI is going to figure it out.
[02:18:47.420 --> 02:18:48.860]   The generators is going to figure it out.
[02:18:48.860 --> 02:18:50.200]   I don't need to know SQL.
[02:18:50.200 --> 02:18:52.240]   Active Record is going to abstract it away from me.
[02:18:52.240 --> 02:18:52.680]   No, no, no.
[02:18:52.680 --> 02:18:54.540]   Dude, hold up.
[02:18:54.540 --> 02:18:56.600]   The path here is competence.
[02:18:56.600 --> 02:18:58.340]   I'm trying to teach you things.
[02:18:58.340 --> 02:19:00.880]   I understand I can't teach you everything in five minutes.
[02:19:00.880 --> 02:19:06.100]   No one who's ever become good at anything worthwhile could be taught everything in five minutes.
[02:19:06.100 --> 02:19:11.600]   If you want to be a fully well-rounded web application developer, that takes years.
[02:19:11.600 --> 02:19:16.560]   But you can actually become somewhat productive in a few days.
[02:19:16.680 --> 02:19:18.100]   You can have fun in a few days for sure.
[02:19:18.100 --> 02:19:20.440]   You can have fun in a few minutes and a few hours.
[02:19:20.440 --> 02:19:22.880]   And over time, I can teach you a little more.
[02:19:22.880 --> 02:19:25.180]   Active Record says, like, yeah, yeah, all right.
[02:19:25.180 --> 02:19:26.160]   Start to here.
[02:19:26.160 --> 02:19:29.580]   And then, like, next week, we'll do a class on SQL.
[02:19:29.580 --> 02:19:38.640]   And actually, you have this beautiful expression that I love, that a great programming language like Ruby has a soft RAM, but the RAM goes to infinity.
[02:19:38.640 --> 02:19:39.720]   That's exactly right.
[02:19:39.720 --> 02:19:43.080]   So, yeah, it's super accessible, super easy to get started.
[02:19:43.080 --> 02:19:44.100]   And it never stops.
[02:19:44.100 --> 02:19:44.360]   Yeah.
[02:19:44.360 --> 02:19:45.960]   There's always more to learn.
[02:19:45.960 --> 02:19:50.240]   This is one of the reasons I'm still having fun programming, that I'm still learning new things.
[02:19:50.240 --> 02:19:51.420]   I can still incorporate new things.
[02:19:51.420 --> 02:19:53.180]   The web is deep enough as a domain.
[02:19:53.180 --> 02:19:55.660]   You're never going to learn all of it.
[02:19:55.660 --> 02:19:57.380]   Provide sharp knives.
[02:19:57.380 --> 02:19:58.500]   This is a good one.
[02:19:58.500 --> 02:20:05.200]   Because another way of saying this, the opposite way of saying this, the Java way of saying this, do not provide foot guns.
[02:20:05.200 --> 02:20:05.860]   Right?
[02:20:05.860 --> 02:20:08.000]   I don't want to give you sharp knives.
[02:20:08.000 --> 02:20:09.100]   You're a child.
[02:20:09.100 --> 02:20:10.400]   You can't handle a sharp knife.
[02:20:10.400 --> 02:20:11.960]   Here's a dull butter knife.
[02:20:11.960 --> 02:20:13.080]   Cut your damn steak.
[02:20:13.080 --> 02:20:13.640]   Right?
[02:20:13.760 --> 02:20:15.240]   That's a very frustrating experience.
[02:20:15.240 --> 02:20:18.280]   You want a sharp knife, even though you might be able to cut yourself.
[02:20:18.280 --> 02:20:22.620]   I trust humans in the same way that mats trust humans.
[02:20:22.620 --> 02:20:24.780]   Maybe you cut off a finger.
[02:20:24.780 --> 02:20:25.440]   All right.
[02:20:25.440 --> 02:20:26.360]   You're not going to do that again.
[02:20:26.360 --> 02:20:28.320]   Thankfully, it was a virtual finger.
[02:20:28.320 --> 02:20:29.680]   It's going to grow back out.
[02:20:29.680 --> 02:20:31.140]   Your competence is going to grow.
[02:20:31.720 --> 02:20:34.660]   It's more fun to work with sharp tools.
[02:20:34.660 --> 02:20:38.040]   And that actually contributes to the ramp that goes to infinity.
[02:20:38.040 --> 02:20:39.140]   To the learning.
[02:20:39.140 --> 02:20:41.260]   Value integrated systems.
[02:20:41.260 --> 02:20:42.720]   We kind of hit on that one.
[02:20:42.720 --> 02:20:45.260]   This is, Rails is trying to solve the whole problem of the web.
[02:20:45.260 --> 02:20:46.960]   Not just one little component.
[02:20:46.960 --> 02:20:50.360]   It's not leaving you a bunch of pieces you have to put together yourself.
[02:20:50.360 --> 02:20:51.960]   Progress over stability.
[02:20:51.960 --> 02:20:52.740]   You know what?
[02:20:52.820 --> 02:20:55.020]   If there's one that's dated, it's probably that one.
[02:20:55.020 --> 02:21:01.260]   At this stage, Rails has been incredibly stable over many, many generations.
[02:21:01.260 --> 02:21:08.120]   The last major release, Rails 8, was basically a no-op upgrade for anyone running Rails 7.
[02:21:08.120 --> 02:21:11.700]   Rails 7 was almost a no-op upgrade for anyone running Rails 6.
[02:21:12.260 --> 02:21:20.500]   I used to think it required more churn to get progress, to stay on the leading edge of new stuff.
[02:21:20.500 --> 02:21:27.920]   And I wrote this before I experienced the indignity of the 2010s in the JavaScript community.
[02:21:27.920 --> 02:21:34.340]   Where it seemed like stability was not just unvalued, it was actually despised.
[02:21:34.340 --> 02:21:38.100]   That churn in and of itself was a value we should be pursuing.
[02:21:38.340 --> 02:21:42.660]   That if you were still working with the same framework three months later, you were an idiot.
[02:21:42.660 --> 02:21:44.940]   And I saw that, and I actually recoiled.
[02:21:44.940 --> 02:21:48.140]   And if I was going to write the doctrine today, I'd write that differently.
[02:21:48.140 --> 02:21:49.700]   I wouldn't say progress over stability.
[02:21:49.700 --> 02:21:54.800]   Well, maybe it'd be a function of the age of the programming language also.
[02:21:54.800 --> 02:21:58.960]   Maybe, or a deeper understanding of the problem.
[02:21:58.960 --> 02:22:02.900]   I think part of what's so fascinating about technology is that we have this perception
[02:22:02.900 --> 02:22:05.920]   that everything constantly moves so fast.
[02:22:05.920 --> 02:22:06.980]   No, it doesn't.
[02:22:07.420 --> 02:22:09.640]   Everything moves at a glacial pace.
[02:22:09.640 --> 02:22:16.400]   There is occasionally a paradigm shift, like what's happening with AI right now, like what
[02:22:16.400 --> 02:22:21.240]   happened with the introduction of the iPhone in 2007, like what happened with the internet
[02:22:21.240 --> 02:22:21.800]   in 95.
[02:22:21.800 --> 02:22:24.200]   That's basically the total sum of my career.
[02:22:24.200 --> 02:22:25.940]   Three things changed.
[02:22:25.940 --> 02:22:31.060]   Everything else in between was incremental, small improvements.
[02:22:31.060 --> 02:22:35.020]   You can recognize a Rails application written in 2003.
[02:22:35.020 --> 02:22:40.040]   I know, because the base camp I wrote back then is still operating, making millions of
[02:22:40.040 --> 02:22:44.320]   dollars in ARR, servings and customers on the initial version that was launched back then.
[02:22:44.320 --> 02:22:48.000]   And it looks like the Rails code, if I squint a little, that I would write today.
[02:22:48.000 --> 02:22:51.460]   So most things don't change, even in computing.
[02:22:51.460 --> 02:22:52.360]   And that's actually a good thing.
[02:22:52.480 --> 02:22:57.920]   We saw with the JavaScript ecosystem what happens when everyone gets just mad about constant
[02:22:57.920 --> 02:22:58.360]   churn.
[02:22:58.360 --> 02:23:00.000]   Things don't change that often.
[02:23:00.000 --> 02:23:06.920]   By the way, on that small tangent, you just sort of visibly verbally changed your mind with
[02:23:06.920 --> 02:23:09.560]   the you of 15 years ago.
[02:23:09.780 --> 02:23:11.420]   That's interesting.
[02:23:11.420 --> 02:23:16.340]   Have you noticed yourself changing your mind quite a bit over the years?
[02:23:16.340 --> 02:23:19.400]   I would say, oh, yes.
[02:23:19.400 --> 02:23:24.360]   And then also, oh, no, in the sense that there are absolutely fundamental things, both about
[02:23:24.360 --> 02:23:29.860]   human nature, about institutions, about programming, about business that I've changed my mind on.
[02:23:29.860 --> 02:23:34.500]   And then I've also had experiences that are almost even more interesting, where I thought
[02:23:34.500 --> 02:23:35.780]   I had changed my mind.
[02:23:35.980 --> 02:23:40.660]   And I tried it a new way, realized why I had the original opinion in the first place,
[02:23:40.660 --> 02:23:42.020]   and then gone back to it.
[02:23:42.020 --> 02:23:43.940]   So it happens both ways.
[02:23:43.940 --> 02:23:49.120]   An example of the later part, for example, was managers at 37 Signals.
[02:23:49.120 --> 02:23:57.100]   For the longest time, I would rail against engineering managers as an unnecessary burden on a small
[02:23:57.100 --> 02:23:58.300]   or even medium-sized company.
[02:23:58.300 --> 02:24:01.300]   And at one point, I actually started doubting myself a little bit.
[02:24:01.300 --> 02:24:03.060]   I started thinking, like, you know what?
[02:24:03.500 --> 02:24:08.480]   Maybe all programmers do need a one-on-one therapy session every week with their engineering
[02:24:08.480 --> 02:24:10.820]   manager to be a whole individual.
[02:24:10.820 --> 02:24:15.200]   So we tried that for a couple of years, where we hired some very good engineering managers
[02:24:15.200 --> 02:24:19.460]   who did engineering management the way you're supposed to do it, the way it's done all over
[02:24:19.460 --> 02:24:19.840]   the place.
[02:24:19.840 --> 02:24:22.780]   And after that, I thought, like, no.
[02:24:22.780 --> 02:24:24.340]   No, I was right.
[02:24:24.340 --> 02:24:25.380]   This was correct.
[02:24:25.380 --> 02:24:26.480]   We should not have had managers.
[02:24:27.240 --> 02:24:31.680]   Not every programmer needs a therapy session with an engineering manager every week.
[02:24:31.680 --> 02:24:34.880]   We don't need these endlessly scheduled huddles.
[02:24:34.880 --> 02:24:36.340]   We don't need all these meetings.
[02:24:36.340 --> 02:24:41.640]   We just need to leave people the hell alone to work on problems that they enjoy for long
[02:24:41.640 --> 02:24:43.280]   stretches of uninterrupted time.
[02:24:43.280 --> 02:24:45.700]   That is where happiness is found.
[02:24:45.700 --> 02:24:47.180]   That's where productivity is found.
[02:24:47.180 --> 02:24:50.240]   And if you can get away with it, you absolutely should.
[02:24:50.240 --> 02:24:54.460]   Engineering management is a necessary evil when that breaks down.
[02:24:54.960 --> 02:24:56.760]   What's the case for managers then?
[02:24:56.760 --> 02:25:01.460]   The case for managers is that if you do have a lot of people, there's a bunch of work that
[02:25:01.460 --> 02:25:02.660]   kind of just crops up.
[02:25:02.660 --> 02:25:06.260]   The one-on-one is one example that programmers need someone to check in with.
[02:25:06.260 --> 02:25:11.640]   There's another idealized version that someone needs to guide the career of juniors, for example,
[02:25:11.640 --> 02:25:14.760]   to give them redirecting feedback and all this other stuff.
[02:25:14.760 --> 02:25:19.960]   And it's not that in the abstract, I don't agree with some of those things.
[02:25:19.960 --> 02:25:24.840]   But in practice, I've found that they often create more problems that they solve.
[02:25:25.660 --> 02:25:32.460]   And a good example here is, can you get feedback from someone who's not better at your job than
[02:25:32.460 --> 02:25:32.800]   you are?
[02:25:32.800 --> 02:25:34.300]   You can get some feedback.
[02:25:34.300 --> 02:25:36.440]   You can get feedback on how you show up at work.
[02:25:36.440 --> 02:25:38.920]   Are you being courteous to others?
[02:25:38.920 --> 02:25:40.380]   Are you being a good communicator?
[02:25:40.380 --> 02:25:41.500]   Okay, yes.
[02:25:41.500 --> 02:25:43.020]   But you can't get feedback on your work.
[02:25:43.020 --> 02:25:43.760]   And that's more important.
[02:25:43.760 --> 02:25:49.020]   It's more important that you work under and with someone who's better at your job than you
[02:25:49.020 --> 02:25:51.160]   are if you wish to progress in your career.
[02:25:51.160 --> 02:25:55.440]   And every single programmer I've ever worked with was far more interested in progressing in
[02:25:55.440 --> 02:26:01.000]   their career on that metric, getting better at their craft, than they were in picking up
[02:26:01.000 --> 02:26:04.200]   pointers that a middle manager could teach them.
[02:26:04.200 --> 02:26:06.300]   That's not saying that there isn't value in it.
[02:26:06.300 --> 02:26:09.480]   It's not saying there isn't value in being a better person or a better communicator.
[02:26:09.480 --> 02:26:10.480]   Of course, there is all those things.
[02:26:10.480 --> 02:26:15.120]   But if I have to choose one or the other, I value competence higher.
[02:26:15.120 --> 02:26:20.900]   Like that's, again, I caveat this a million times because I know what people sometimes hear.
[02:26:20.900 --> 02:26:27.120]   They hear the genius asshole is just fine and that's great and you should excuse all sorts of
[02:26:27.120 --> 02:26:29.980]   malicious behavior if someone's just really good at what they do.
[02:26:29.980 --> 02:26:31.120]   I'm not saying that at all.
[02:26:31.120 --> 02:26:36.580]   What I am saying is that the history of competence is a history of learning from people who are better
[02:26:36.580 --> 02:26:36.960]   than you.
[02:26:37.380 --> 02:26:41.360]   And that relationship should take precedence over all else.
[02:26:41.360 --> 02:26:46.560]   And that relationship gets put aside a bit when engineering managers are introduced.
[02:26:46.560 --> 02:26:51.260]   Now, the funny thing is, this conversation ties back to the earlier things we were talking about.
[02:26:51.260 --> 02:26:53.900]   Most engineering managers are actually former programmers.
[02:26:53.900 --> 02:26:55.940]   They at least know programming to some extent.
[02:26:55.940 --> 02:27:02.420]   But what I've seen time and again is that they lose their touch, their feel with it very, very quickly
[02:27:02.420 --> 02:27:06.960]   and turn into pointy haired bosses very, very quickly.
[02:27:06.960 --> 02:27:12.800]   Who are really good at checking for updates, just seeing where we are on Project A here.
[02:27:12.800 --> 02:27:15.120]   If you need anything or are we ready to deliver to it?
[02:27:15.120 --> 02:27:15.540]   Okay.
[02:27:15.540 --> 02:27:16.900]   Yes.
[02:27:16.900 --> 02:27:17.980]   And also, no.
[02:27:17.980 --> 02:27:19.120]   Just shut up.
[02:27:19.120 --> 02:27:20.280]   Leave me the hell alone.
[02:27:20.280 --> 02:27:21.280]   Let me program.
[02:27:21.280 --> 02:27:22.640]   And then I'll come up for air.
[02:27:22.640 --> 02:27:26.140]   I'll talk with other programmers who I can spar with.
[02:27:26.140 --> 02:27:27.140]   And we can learn something with.
[02:27:27.140 --> 02:27:28.440]   I can turn the problems over with.
[02:27:28.440 --> 02:27:29.600]   And we can move forward.
[02:27:29.740 --> 02:27:35.380]   If you look back on the history of computer industry, all the great innovation that's happened,
[02:27:35.380 --> 02:27:43.400]   it's all been done by tiny teams with no engineering managers, just full of highly skilled individuals.
[02:27:43.400 --> 02:27:45.300]   You've had John Carmich on here.
[02:27:46.580 --> 02:27:52.120]   I used to look up to id Software so much, not just because I love Quake, not just because I loved what they were doing,
[02:27:52.120 --> 02:27:55.060]   but because he shared a bit about how the company worked.
[02:27:55.060 --> 02:27:56.280]   There were no managers.
[02:27:56.280 --> 02:28:00.100]   Or maybe they had one business guy doing some business stuff, but that was just to get paid.
[02:28:00.100 --> 02:28:03.000]   Everything else was basically just designers and programmers.
[02:28:03.000 --> 02:28:04.260]   And there were about eight of them.
[02:28:04.420 --> 02:28:06.020]   And they created a goddamn Quake 2.
[02:28:06.020 --> 02:28:08.740]   So why do you need all these people again?
[02:28:08.740 --> 02:28:10.700]   Why do you need all these managers again?
[02:28:10.700 --> 02:28:15.340]   I think, again, at a certain scale, it does break down.
[02:28:15.340 --> 02:28:22.860]   It's hard to just have 100,000 programmers running around wild without any product mommies or daddies telling them what to do.
[02:28:22.860 --> 02:28:23.740]   I understand that.
[02:28:23.740 --> 02:28:26.440]   And then even as I say that, I also don't understand it.
[02:28:26.440 --> 02:28:33.380]   Because if you look at something like Gmail, for example, there was like a side project done by Boucher at Google at the time.
[02:28:33.380 --> 02:28:40.720]   So much of the enduring long-term value of even all these huge companies were created by people who didn't have a goddamn manager.
[02:28:40.720 --> 02:28:42.280]   And that's not an accident.
[02:28:42.280 --> 02:28:44.820]   That's a direct cause and effect.
[02:28:44.820 --> 02:28:52.860]   So I've turned in some way even more militant over the years against this notion of management, at least for myself and knowing who I am and how I want to work.
[02:28:52.860 --> 02:28:55.780]   Because the other part of this is I don't want to be a manager.
[02:28:55.780 --> 02:29:01.820]   And maybe this is just me projecting the fact that I'm an introvert who don't like to talk to people in one-on-one calls every week.
[02:29:02.340 --> 02:29:06.420]   But it also encapsulates how I was able to progress my career.
[02:29:06.420 --> 02:29:14.000]   I did not really go to the next level with Ruby or otherwise until I had a door I could close and no one could bother me for six hours straight.
[02:29:14.500 --> 02:29:20.400]   So in companies, probably one of the reasons is it's very easy to hire managers.
[02:29:20.400 --> 02:29:26.260]   And managers also delegate responsibility from you.
[02:29:27.460 --> 02:29:33.100]   So if you just have a bunch of programmers running around, it's work.
[02:29:33.100 --> 02:29:38.840]   It's intellectual work to have to deal with the first principles of every problem that's going on.
[02:29:38.840 --> 02:29:41.640]   So managers, you can relax.
[02:29:41.640 --> 02:29:43.040]   Oh, it'll be taken care of.
[02:29:43.960 --> 02:29:48.900]   But they then hire their own managers and it just multiplies and multiplies and multiplies.
[02:29:48.900 --> 02:29:57.740]   I would love it if some of the great companies we have in the United States, if there was like an extra side branch that we could always run.
[02:29:58.920 --> 02:30:04.220]   Maybe physicists can come up how to split the simulation to where just all the managers are removed.
[02:30:04.940 --> 02:30:12.900]   Also, just with it, just in that branch, just the PR and the comms people also, and even the lawyers, just the engineers.
[02:30:12.900 --> 02:30:14.360]   And let's just see.
[02:30:14.360 --> 02:30:15.900]   And then we merge it back.
[02:30:16.440 --> 02:30:19.160]   I've essentially run that branch at 37 Singles for 20 years.
[02:30:19.160 --> 02:30:22.720]   And I've experimented with forking back on the other side.
[02:30:22.720 --> 02:30:25.180]   I've experimented with having a full-time lawyer on staff.
[02:30:25.180 --> 02:30:27.180]   I've experimented with having engineering managers.
[02:30:27.180 --> 02:30:34.720]   And I can tell you, life is much better at 50, 60 people when none of those individuals or none of those roles.
[02:30:34.720 --> 02:30:35.800]   It's never about the individuals.
[02:30:35.800 --> 02:30:37.000]   It's about the roles.
[02:30:37.000 --> 02:30:39.920]   None of those roles are in your organization full-time.
[02:30:39.920 --> 02:30:41.980]   Occasionally, you need a manager.
[02:30:41.980 --> 02:30:44.220]   Occasionally, you need a lawyer.
[02:30:44.700 --> 02:30:47.580]   I can play the role of manager occasionally.
[02:30:47.580 --> 02:30:48.880]   Fine.
[02:30:48.880 --> 02:30:51.080]   And then I can set it back down to zero.
[02:30:51.080 --> 02:30:53.480]   It's almost like a cloud service.
[02:30:53.480 --> 02:30:58.060]   I want a manager service I can call on for seven hours this week.
[02:30:58.060 --> 02:31:00.960]   And then I want to take it down to zero for the next three months.
[02:31:00.960 --> 02:31:01.500]   Yeah, I read.
[02:31:01.500 --> 02:31:05.360]   I don't know if this is still the case that Basecamp is an LLC and doesn't have a CFO.
[02:31:05.360 --> 02:31:07.260]   Like a full-time accountant.
[02:31:07.260 --> 02:31:11.660]   What's actually funny is, these days, we do have a head of finance.
[02:31:11.820 --> 02:31:16.260]   We did not for the first 19 years of life, I think.
[02:31:16.260 --> 02:31:23.320]   We got away with basically just having an accountant do our books in the same way you would do a small ice cream shop.
[02:31:23.320 --> 02:31:26.680]   Except we would, over time, have done hundreds of millions of dollars in revenue.
[02:31:26.680 --> 02:31:28.940]   The scale seemed quirky.
[02:31:29.440 --> 02:31:34.440]   And at some point, you can also fall in love with your own quirkiness to a degree that isn't actually healthy.
[02:31:34.440 --> 02:31:36.360]   And I've certainly done that over time.
[02:31:36.360 --> 02:31:41.560]   And we should have had someone count the beans a little more diligently, a little earlier.
[02:31:41.560 --> 02:31:48.820]   This was part of a blessing of just being wildly profitable and selling software that can have infinite margins, basically.
[02:31:48.820 --> 02:31:51.760]   That you kind of can get away with a bunch of stuff that you perhaps shouldn't.
[02:31:52.160 --> 02:32:01.320]   What partially taught me this lesson was when we realized we had not been collecting sales tax in different U.S. states where we had nexus.
[02:32:01.320 --> 02:32:07.380]   And it took us about two years and $5 million in settlements and cleanups to get out of that mess.
[02:32:07.560 --> 02:32:09.240]   And after that, I went like, okay, fine.
[02:32:09.240 --> 02:32:10.240]   We can hire a finance person.
[02:32:10.240 --> 02:32:11.100]   Okay.
[02:32:11.100 --> 02:32:16.560]   And we now have a wonderful finance person, Ron, who actually ended up replacing something else we used to have.
[02:32:16.560 --> 02:32:23.960]   We used to have a full-time data analytics person who would do all sorts of insight mining for why are people signing up for this thing?
[02:32:23.960 --> 02:32:26.560]   And we ran that for 10 years and realized, you know what?
[02:32:26.560 --> 02:32:29.920]   If I can have either a data analytics person or an accountant, I'm picking the accountant.
[02:32:29.920 --> 02:32:32.300]   I love this so much on so many levels.
[02:32:33.020 --> 02:32:37.120]   Can we just link on that advice that you've given that small teams are better?
[02:32:37.120 --> 02:32:42.900]   I think that's really less is more.
[02:32:42.900 --> 02:32:44.700]   What did you say before worse is better?
[02:32:44.700 --> 02:32:47.120]   Okay, I'm sorry.
[02:32:47.120 --> 02:32:50.320]   Worse is better on adoption with technology a lot of times.
[02:32:50.320 --> 02:32:50.560]   Yeah.
[02:32:50.560 --> 02:32:52.360]   And I think it actually comes out of the same thing.
[02:32:52.360 --> 02:32:59.860]   It comes out of the fact that many of the great breakthroughs are created by not even just tiny teams, but individuals.
[02:32:59.860 --> 02:33:01.800]   Individuals writing something.
[02:33:02.260 --> 02:33:06.920]   And an individual writing something on some parameter, what they do is worse.
[02:33:06.920 --> 02:33:15.820]   Of course, it's worse when one person has to make something that a huge company have hundreds, if not thousands of developers that they can have work on that problem.
[02:33:15.820 --> 02:33:20.260]   But in so many other parameters, that worseness is the value.
[02:33:20.260 --> 02:33:22.500]   That less is the value.
[02:33:22.500 --> 02:33:27.780]   In Getting Real, which we wrote back in 2006, we talk about this notion of less software.
[02:33:28.440 --> 02:33:34.820]   When we first got started with Basecamp back in 2004, people would ask us all the time, aren't you petrified of Microsoft?
[02:33:34.820 --> 02:33:37.120]   They have so many more resources.
[02:33:37.120 --> 02:33:38.540]   They have so many more programmers.
[02:33:39.100 --> 02:33:45.980]   What if they take a liking to your little niche here and they show up and they just throw a thousand programmers at the problem?
[02:33:45.980 --> 02:33:54.080]   And my answer, perhaps partly because I was like 24, was first of all, no, no care in the world.
[02:33:54.080 --> 02:33:57.060]   But the real answer was they're not going to produce the same thing.
[02:33:57.060 --> 02:34:01.800]   You cannot produce the kind of software that Basecamp is with a team of a thousand people.
[02:34:01.980 --> 02:34:05.680]   You will build the kind of software that a thousand people builds.
[02:34:05.680 --> 02:34:08.400]   And that's not the same thing at all.
[02:34:08.400 --> 02:34:19.000]   So, so much of the main breakthrough in both end-user systems, but also in open source systems, in fundamental systems, they're done by individuals or very small teams.
[02:34:19.000 --> 02:34:27.660]   Even all these classical histories of Apple has always been like, well, there's a big organization, but then you had the team that was actually working on the breakthrough.
[02:34:27.880 --> 02:34:28.740]   It was four people.
[02:34:28.740 --> 02:34:29.780]   It was eight people.
[02:34:29.780 --> 02:34:31.160]   It was never 200.
[02:34:31.160 --> 02:34:35.820]   And the large team seems to slow things down.
[02:34:35.820 --> 02:34:36.260]   Yes.
[02:34:36.260 --> 02:34:38.160]   It's so fascinating.
[02:34:38.160 --> 02:34:39.800]   Part of it is the manager thing.
[02:34:39.800 --> 02:34:41.960]   Because humans don't scale.
[02:34:41.960 --> 02:34:45.340]   Communication between humans certainly don't scale.
[02:34:45.340 --> 02:34:48.440]   You basically get the network cost effect.
[02:34:48.440 --> 02:34:51.500]   Every time you add a new node, it goes up exponentially.
[02:34:52.560 --> 02:35:01.900]   This is perhaps the key thing of why I get to be so fond of having no managers at Basecamp, because our default team size is two.
[02:35:01.900 --> 02:35:06.160]   One programmer, one designer, one feature.
[02:35:06.160 --> 02:35:10.740]   When you're operating at that level of scale, you don't need sophistication.
[02:35:10.740 --> 02:35:14.240]   You don't need advanced methodologies.
[02:35:14.240 --> 02:35:17.840]   You don't need multiple layers of management, because you can just do.
[02:35:18.260 --> 02:35:20.800]   The magic of small teams is that they just do.
[02:35:20.800 --> 02:35:24.060]   They don't have to argue, because we don't have to set direction.
[02:35:24.060 --> 02:35:25.920]   We don't have to worry about the roadmap.
[02:35:25.920 --> 02:35:29.640]   We can just sit down and make something, and then see if it's good.
[02:35:29.640 --> 02:35:32.480]   When you can get away with just making things, you don't have to plan.
[02:35:32.480 --> 02:35:43.000]   And if you can get out of planning, you can follow the truth that emerges from the code, from the product, from the thing you're working on in the moment.
[02:35:43.000 --> 02:35:52.960]   You know far more about what the great next step is when you're one step behind, rather than if you try 18 months in advance to map out all the steps.
[02:35:52.960 --> 02:35:55.240]   How do we get from here to very far away?
[02:35:55.240 --> 02:35:56.620]   You know what?
[02:35:56.620 --> 02:36:01.520]   That's difficult to imagine in advance, because humans are very poor at that.
[02:36:01.520 --> 02:36:03.980]   Maybe AI one day will be much better than us.
[02:36:04.360 --> 02:36:08.560]   But humans can take one foot or put one foot in front of each other.
[02:36:08.560 --> 02:36:09.240]   That's not that hard.
[02:36:09.240 --> 02:36:13.780]   And that allows you to get away with all that sophistication.
[02:36:13.780 --> 02:36:15.740]   So the process has become much simpler.
[02:36:15.740 --> 02:36:17.120]   You need far fewer people.
[02:36:17.120 --> 02:36:17.880]   It compounds.
[02:36:17.880 --> 02:36:19.680]   You need much less process.
[02:36:19.680 --> 02:36:21.740]   You need to waste less time in meetings.
[02:36:21.740 --> 02:36:29.900]   You can just spend these long, glorious days and weeks of uninterrupted time solving real problems you care about and that are valuable.
[02:36:30.500 --> 02:36:33.520]   And you're going to find that that's what the market actually wants.
[02:36:33.520 --> 02:36:38.200]   No one is buying something because there's a huge company behind it most of the time.
[02:36:38.200 --> 02:36:39.900]   They're buying something because it's good.
[02:36:39.900 --> 02:36:46.580]   And the way you get something good is you don't sit around and have a meal about it.
[02:36:46.580 --> 02:36:47.320]   You try stuff.
[02:36:47.320 --> 02:36:48.200]   You build stuff.
[02:36:48.200 --> 02:36:57.880]   It really is kind of incredible what one person, honestly, one person can do in 100 hours of deep work, of focused work, even less.
[02:36:58.420 --> 02:37:03.240]   So I'll tell you this, I tracked exactly the number of hours I spend on the first version of Basecamp.
[02:37:03.240 --> 02:37:08.660]   And I was doing this because at the time I was working on a contract basis for Jason.
[02:37:08.660 --> 02:37:12.180]   He was paying me, I was going to say $15 an hour.
[02:37:12.180 --> 02:37:13.720]   That's what I got paid when we first got started.
[02:37:13.720 --> 02:37:15.820]   I think he had bumped my pay to a glorious 25.
[02:37:15.820 --> 02:37:22.280]   But I was billing him and I know that the invoice for the first version of Basecamp was 400 hours.
[02:37:22.280 --> 02:37:35.380]   That's what it took for one sole individual in 2004 to create an entire system that has then gone on to gross hundreds of millions of dollars and continues to do extremely well.
[02:37:35.560 --> 02:37:38.260]   One person, just me, setting up everything.
[02:37:38.260 --> 02:37:39.980]   Part of that story is Ruby.
[02:37:39.980 --> 02:37:41.160]   Part of that story is Rails.
[02:37:41.160 --> 02:37:46.240]   But a lot of it is also just me plus Jason plus Ryan plus Matt.
[02:37:46.240 --> 02:37:48.500]   That was the entire company at the time.
[02:37:48.500 --> 02:37:54.400]   And we could create something of sheer sustaining value with such a tiny team.
[02:37:54.460 --> 02:37:58.700]   Because we were a tiny team, not despite of, small is not a stepping stone.
[02:37:58.700 --> 02:38:01.340]   This is the other thing that people get into their head.
[02:38:01.340 --> 02:38:04.000]   This is one of the big topics of Rework.
[02:38:04.000 --> 02:38:10.400]   That it gave entrepreneurs the permission to embrace being a small team, not as a waypoint.
[02:38:10.400 --> 02:38:13.920]   Not as like, I'm trying to become a thousand people.
[02:38:13.920 --> 02:38:15.720]   No, I actually like being a small team.
[02:38:15.720 --> 02:38:17.280]   Small teams are more fun.
[02:38:17.280 --> 02:38:21.200]   If you ask almost anyone, I'm sure Toby would say this too.
[02:38:21.540 --> 02:38:28.040]   Even at his scale, the sheer enjoyment of building something is in the enjoyment of building it with a tiny team.
[02:38:28.040 --> 02:38:32.400]   Now, you can have impact at a different scale when you have a huge company.
[02:38:32.400 --> 02:38:35.160]   I fully recognize that and I see the appeal of it.
[02:38:35.160 --> 02:38:38.440]   But in the actual building of things, it's always small teams.
[02:38:38.440 --> 02:38:39.040]   Always.
[02:38:39.040 --> 02:38:41.120]   How do you protect the small team?
[02:38:41.120 --> 02:38:44.060]   Basecamp has successfully stayed small.
[02:38:44.060 --> 02:38:46.860]   There's been the dragons you had to fight off.
[02:38:46.860 --> 02:38:49.320]   That like, basically, you make a lot of money.
[02:38:50.560 --> 02:38:52.320]   There's a temptation to grow.
[02:38:52.320 --> 02:38:54.360]   So, how do you not grow?
[02:38:54.360 --> 02:38:56.300]   Don't take venture capital.
[02:38:56.300 --> 02:38:57.460]   Okay.
[02:38:57.460 --> 02:38:58.560]   That's step one.
[02:38:58.560 --> 02:38:59.540]   Point number one.
[02:38:59.540 --> 02:39:02.380]   First of all, everybody takes venture capital.
[02:39:02.380 --> 02:39:04.260]   So, you already went.
[02:39:04.260 --> 02:39:06.960]   I mean, that's been the answer for the longest time.
[02:39:06.960 --> 02:39:08.480]   Because the problem isn't just venture capital.
[02:39:08.480 --> 02:39:09.760]   It's other people's money.
[02:39:09.760 --> 02:39:14.400]   Once you take other people's money, completely understandably, they want a return.
[02:39:14.400 --> 02:39:17.100]   And they would prefer to have the largest return possible.
[02:39:17.100 --> 02:39:19.260]   Because it's not them sitting in the code.
[02:39:19.260 --> 02:39:23.660]   It's not them getting the daily satisfaction out of building something, chiseling, beautiful
[02:39:23.660 --> 02:39:25.620]   code poems out of the editor.
[02:39:25.620 --> 02:39:26.140]   Right?
[02:39:26.140 --> 02:39:27.460]   They don't get that satisfaction.
[02:39:27.460 --> 02:39:30.620]   They get the satisfaction maybe of seeing something nice put into the world.
[02:39:30.620 --> 02:39:31.220]   That's fair.
[02:39:31.420 --> 02:39:33.900]   But they certainly also get a satisfaction of a higher return.
[02:39:33.900 --> 02:39:39.660]   And there is this sense, certainly in venture capital, stated in venture capital, that the
[02:39:39.660 --> 02:39:43.520]   whole point of you taking the money is to get to a billion dollars or more.
[02:39:43.920 --> 02:39:48.920]   Now, the path to that usually does go through running established playbooks.
[02:39:48.920 --> 02:39:54.260]   And then when it comes to software, the enterprise sales playbook is that playbook.
[02:39:54.260 --> 02:39:59.560]   If you're doing B2B software, SaaS, you will try to find product market fit.
[02:39:59.560 --> 02:40:03.780]   And the second you have it, you will abandon your small and medium-sized accounts to chase
[02:40:03.780 --> 02:40:06.240]   the big whales with a huge sales force.
[02:40:06.240 --> 02:40:08.540]   And by then, you're 1,000 people and life sucks.
[02:40:09.760 --> 02:40:13.420]   That said, you, I mean, people are just curious about this.
[02:40:13.420 --> 02:40:16.880]   I've gotten a chance to get to know Jeff Bezos.
[02:40:16.880 --> 02:40:22.000]   He invested in Basecamp, non-controlling.
[02:40:22.000 --> 02:40:23.880]   He bought secondaries.
[02:40:23.880 --> 02:40:30.120]   So this was the funny thing is that when investing have these two dual meanings, normally when people
[02:40:30.120 --> 02:40:35.680]   think about investing, they think you're putting in growth capital because you want the business
[02:40:35.680 --> 02:40:38.740]   to hire more people, to do more R&Ds, so they can grow bigger.
[02:40:39.580 --> 02:40:40.740]   Bezos didn't do that, actually.
[02:40:40.740 --> 02:40:47.560]   He bought an ownership stake directly from Jason and I, and 100% of the proceeds of that
[02:40:47.560 --> 02:40:51.860]   purchase went into my and Jason's bank account, personal bank account.
[02:40:51.860 --> 02:40:56.840]   Not a single cent went into the account of the company because we didn't need the money to grow.
[02:40:56.840 --> 02:41:04.600]   What we needed, or what we certainly enjoyed, was to some extent maybe the vote of confidence,
[02:41:04.600 --> 02:41:13.280]   the security of taking a little bit off the table is that we dared turn down the big bucks
[02:41:13.280 --> 02:41:14.140]   from venture capitals.
[02:41:14.140 --> 02:41:20.060]   It was essentially a vaccine against wanting to take a larger check from people who then
[02:41:20.060 --> 02:41:23.880]   wanted to take the company to something enormous that we didn't want to go with it.
[02:41:23.880 --> 02:41:30.840]   So Jeff gave Jason and I just enough money that we were comfortable turning all those people down
[02:41:30.840 --> 02:41:36.220]   in a way where if it had turned belly up like six months later, we wouldn't have been kicking
[02:41:36.220 --> 02:41:36.880]   ourselves and gone.
[02:41:36.880 --> 02:41:42.220]   We had something here that was worth millions, and now we have nothing, and I have to worry
[02:41:42.220 --> 02:41:43.840]   about rent and groceries again.
[02:41:44.400 --> 02:41:45.480]   It is a vote of confidence.
[02:41:45.480 --> 02:41:53.020]   I wonder from, I'd love to hear Jeff's side of the story of like why, because he doesn't
[02:41:53.020 --> 02:41:53.980]   need like the money.
[02:41:53.980 --> 02:42:00.680]   So it's really, I think it probably is just believing in people and wanting to have cool
[02:42:00.680 --> 02:42:04.620]   stuff, be great in the world and make money off of it, but not like.
[02:42:04.620 --> 02:42:10.640]   100% the motivation for Jeff wasn't a return because he actually has a team.
[02:42:11.280 --> 02:42:17.380]   His private office that runs these investments, who did the calculus on the investment pitch
[02:42:17.380 --> 02:42:22.500]   we gave him, which was so ridiculous that Jason and I were laughing our asses off when
[02:42:22.500 --> 02:42:24.480]   we were writing down our metrics.
[02:42:24.480 --> 02:42:26.080]   I was like, no one's going to pay this.
[02:42:26.080 --> 02:42:30.780]   No one is going to give us this multiple of this amount of revenue, and that's fine.
[02:42:30.780 --> 02:42:37.220]   I mean, we took the call essentially out of kind of an awe that Jeff Bezos even wanted
[02:42:37.220 --> 02:42:38.680]   to look at us and like, do you know what?
[02:42:38.680 --> 02:42:39.520]   We don't want venture capital.
[02:42:39.520 --> 02:42:42.800]   We don't need other people's money, but like, let's just give him a bullshit number
[02:42:42.800 --> 02:42:45.320]   that no sane person would actually say yes to.
[02:42:45.320 --> 02:42:47.800]   And then, I mean, we can each go our own way.
[02:42:47.800 --> 02:42:50.060]   And his investment team said like, Jeff, no way.
[02:42:50.060 --> 02:42:52.220]   This makes no economic sense at all.
[02:42:52.220 --> 02:42:55.100]   They're asking for way too much money with way too little revenue.
[02:42:55.100 --> 02:42:56.760]   And Jeff just went like, I don't care.
[02:42:56.760 --> 02:42:57.820]   I want to invest in this guy.
[02:42:57.820 --> 02:43:00.580]   Because to him at the time, it was chump change, right?
[02:43:00.580 --> 02:43:03.160]   Like Jason and I each got a few million dollars.
[02:43:03.380 --> 02:43:08.960]   I mean, whatever, the currency swing between the yen and the dollar that day probably moved
[02:43:08.960 --> 02:43:11.960]   10x that for his network than our investment did.
[02:43:11.960 --> 02:43:18.040]   Jeff seemed genuinely interested in being around interesting people, interesting companies,
[02:43:18.040 --> 02:43:20.420]   helping someone go to distance.
[02:43:20.620 --> 02:43:27.440]   And I actually look back on that relationship with some degree of regret because I took that
[02:43:27.440 --> 02:43:32.400]   vote of confidence for granted in ways that I'm a little bit ashamed of over the years.
[02:43:32.400 --> 02:43:40.140]   I've been more critical about some of the things that Amazon had done that I feel now is sort of justified.
[02:43:40.140 --> 02:43:44.260]   So that's just sort of part of that processing of it.
[02:43:44.260 --> 02:43:48.520]   But on the economic sense, he gave us that confidence.
[02:43:48.520 --> 02:43:49.680]   He gave us the economic confidence.
[02:43:49.680 --> 02:43:54.340]   But then he also gave us the confidence of a CEO running, perhaps at the time,
[02:43:54.340 --> 02:43:59.480]   the most important internet business in the US, showing up to our calls,
[02:43:59.480 --> 02:44:03.480]   which we would have with him like once a year and basically just going like,
[02:44:03.480 --> 02:44:05.060]   yeah, you guys are doing awesome stuff.
[02:44:05.060 --> 02:44:06.500]   You should just keep doing awesome stuff.
[02:44:06.500 --> 02:44:07.500]   I read your book.
[02:44:07.500 --> 02:44:08.040]   It's awesome.
[02:44:08.040 --> 02:44:09.120]   You launched this thing.
[02:44:09.120 --> 02:44:09.540]   It's awesome.
[02:44:09.540 --> 02:44:10.560]   You should just do more of that.
[02:44:10.560 --> 02:44:12.040]   I don't actually know how to run your business.
[02:44:12.040 --> 02:44:12.640]   You guys know.
[02:44:12.640 --> 02:44:16.540]   So the book was out because I'm just from a fan perspective.
[02:44:16.540 --> 02:44:22.940]   I'm curious about how Jeff Bezos is able to see, because to me, you and Jason are like
[02:44:22.940 --> 02:44:24.900]   special humans in the space of tech.
[02:44:24.900 --> 02:44:27.580]   And the fact that Jeff was able to see that, right?
[02:44:27.580 --> 02:44:28.900]   How hard is it to see that?
[02:44:29.300 --> 02:44:30.520]   You certainly saw it very early.
[02:44:30.520 --> 02:44:33.860]   And I think this is something that Jeff does better than almost anyone else.
[02:44:33.860 --> 02:44:39.700]   He spots that opportunity so far in advance of anyone else even open their eyes to it,
[02:44:39.700 --> 02:44:44.960]   or certainly is willing to bet on it far early and far harder than anyone else is.
[02:44:44.960 --> 02:44:46.720]   And he's just right time and again.
[02:44:46.720 --> 02:44:49.420]   I mean, we were not the only investment that he made.
[02:44:49.840 --> 02:44:54.880]   And certainly, Amazon had an extremely long-term vision.
[02:44:54.880 --> 02:44:59.800]   So far longer than I have ever had the gumption to keep.
[02:44:59.800 --> 02:45:02.020]   Like, I think of myself as a long-term thinker.
[02:45:02.560 --> 02:45:05.940]   I'm playing a child's game compared to the game that Jeff is playing.
[02:45:05.940 --> 02:45:11.860]   Like, when I looked at Amazon's economics around the dot-com boom and bust, they looked ridiculous.
[02:45:11.860 --> 02:45:13.780]   Like, they were losing so much money.
[02:45:13.780 --> 02:45:15.560]   They were so hated by the market.
[02:45:15.560 --> 02:45:16.540]   They were...
[02:45:16.540 --> 02:45:18.760]   No one believed that it was going to turn into what it is.
[02:45:18.760 --> 02:45:23.080]   But Jeff did in a way that that level of conviction, I really aspire to.
[02:45:23.080 --> 02:45:26.920]   And I think that's one of the main things I've taken away from that relationship,
[02:45:26.920 --> 02:45:33.480]   is that you can just believe in yourself to that degree against those odds.
[02:45:33.700 --> 02:45:34.720]   That's ridiculous.
[02:45:34.720 --> 02:45:40.660]   He did that at so many times at our level that it's pathetic if I'm doubting myself.
[02:45:40.660 --> 02:45:42.280]   Yeah.
[02:45:42.280 --> 02:45:45.200]   I think Amazon is one of those companies.
[02:45:45.200 --> 02:45:49.500]   I mean, it's come under a bunch of criticism over the years.
[02:45:49.500 --> 02:45:54.140]   This is something about humans that I don't appreciate so much.
[02:45:54.140 --> 02:45:58.420]   That we take for granted the positive that a thing brings real quick.
[02:45:58.420 --> 02:46:00.480]   And then we just start criticizing the thing.
[02:46:00.480 --> 02:46:02.160]   It's the Wi-Fi and the airplanes.
[02:46:02.160 --> 02:46:03.340]   That's exactly it.
[02:46:03.340 --> 02:46:13.520]   But I think Amazon, there could be a case made that Amazon is one of the greatest companies
[02:46:13.520 --> 02:46:14.840]   in the last hundred years.
[02:46:14.840 --> 02:46:15.940]   Sure.
[02:46:15.940 --> 02:46:17.260]   I think it's an easy case to make.
[02:46:17.260 --> 02:46:23.180]   What I also think is that the price you pay to be one of the greatest companies in the last
[02:46:23.180 --> 02:46:29.140]   hundred years is a lot of detractors, a lot of pushback, a lot of criticism, that this
[02:46:29.140 --> 02:46:31.480]   is actually order restored in the universe.
[02:46:31.860 --> 02:46:36.660]   One of my favorite teachers in all the time I've been on the internet is Kathy Sierra.
[02:46:36.660 --> 02:46:41.540]   I don't know if you know her work, but she was actually for only a few short years before
[02:46:41.540 --> 02:46:43.320]   the cruel internet ran her off.
[02:46:43.420 --> 02:46:51.660]   She wrote a blog called Creating Passionate Users, and she carved into my brain this notion of balance in the universe.
[02:46:51.660 --> 02:47:00.640]   If you're creating something of value that a lot of people love, you must create an equal and opposite force of haters.
[02:47:00.980 --> 02:47:05.300]   You cannot have people who love what you do without also having people who hate what you do.
[02:47:05.300 --> 02:47:08.300]   The only escape from that is mediocrity.
[02:47:08.300 --> 02:47:13.160]   If you are so boring and so uninteresting that no one gives a damn whether you exist or not,
[02:47:13.160 --> 02:47:18.020]   yeah, you don't get the haters, but you also don't get the impact of people who really enjoy your work.
[02:47:18.020 --> 02:47:21.400]   And I think Amazon is that just at the massive scale, right?
[02:47:21.400 --> 02:47:30.620]   They've brought so much value and change to technology, to commerce, that they must simply have a black hole size of haters.
[02:47:31.160 --> 02:47:33.280]   Otherwise, the universe is simply going to tip over.
[02:47:33.280 --> 02:47:36.220]   Let me ask you about small teams.
[02:47:36.220 --> 02:47:38.160]   So you mentioned Jason a bunch of times.
[02:47:38.160 --> 02:47:41.680]   Jason Fried, you have been partners for a long, long time.
[02:47:41.680 --> 02:47:48.900]   Perhaps it's fair to say he's more on the design business side, and you're like the tech, the engineering wizard.
[02:47:48.900 --> 02:47:54.760]   How have you guys over all these years creating so many amazing products not murder each other?
[02:47:54.760 --> 02:47:57.540]   It's a great story of partnership.
[02:47:57.540 --> 02:48:00.460]   What can you say about collaboration?
[02:48:00.460 --> 02:48:04.920]   What can you say about Jason that you love, that you've learned from?
[02:48:04.920 --> 02:48:06.900]   Why does this work?
[02:48:06.900 --> 02:48:14.500]   So first, I'll say we have tried to murder each other several times over the years, but far less, I think, in the last decade.
[02:48:14.500 --> 02:48:25.860]   In the early days, our product discussions were so fierce that when we were having them in the office and there were other employees around,
[02:48:25.860 --> 02:48:29.860]   some of them were legitimately worried that the company was about to fall apart.
[02:48:30.260 --> 02:48:41.880]   Because the volume coming out of the room would be so high and sound so acrimonious that they were legitimately worried the whole thing was going to fall apart.
[02:48:42.100 --> 02:49:04.340]   And that we were able to stomach that level of adversity on the merits of an idea because it was about the idea.
[02:49:04.340 --> 02:49:05.040]   It wasn't about the person.
[02:49:05.040 --> 02:49:06.740]   It wasn't about the person.
[02:49:06.740 --> 02:49:09.040]   And it never really got personal.
[02:49:09.040 --> 02:49:10.780]   Not even never really.
[02:49:10.780 --> 02:49:11.760]   It didn't get personal.
[02:49:11.760 --> 02:49:13.920]   It wasn't like, Jason, you're an asshole.
[02:49:13.920 --> 02:49:16.220]   It was like, Jason, you're an idiot.
[02:49:16.220 --> 02:49:19.660]   And you're an idiot because you're looking at this problem the wrong way.
[02:49:19.660 --> 02:49:21.180]   And let me tell you the right way to do it.
[02:49:21.180 --> 02:49:34.320]   As a small tangent, let me say that some people have said, and we'll probably return to this, that you're sometimes can have flights of temper on the internet and so on.
[02:49:34.600 --> 02:49:38.160]   I never take it that way because it is the same kind of ilk.
[02:49:38.160 --> 02:49:43.660]   Maybe I haven't seen the right kind of traces of temper, but usually it's about the idea.
[02:49:43.660 --> 02:49:45.460]   And it's just excited, passionate human.
[02:49:46.220 --> 02:49:48.520]   That's exactly what I like to think of it as.
[02:49:48.520 --> 02:49:50.360]   It doesn't always come across as that.
[02:49:50.360 --> 02:49:58.900]   And I can see why spectators in particular sometimes would see something that looks like I'm going after the man rather than the ball.
[02:49:58.900 --> 02:50:02.180]   And I do think I've tried to get better at that.
[02:50:02.180 --> 02:50:11.620]   But in my relationship with Jason, I think it's worked so well because we have our own distinct areas of competence where we fully trust each other.
[02:50:11.620 --> 02:50:15.200]   Jason trusts me to make the correct technical decisions.
[02:50:15.240 --> 02:50:19.500]   I trust him to make the correct design and product direction decisions.
[02:50:19.500 --> 02:50:25.820]   And then we can overlap and share on the business, on marketing, on writing, on other aspects of it.
[02:50:25.820 --> 02:50:39.920]   So that's one thing is that if you're starting a business with someone where you do exactly the same as they do, and you're constantly contesting who's the more competent person, I think that's far more difficult and far more volatile.
[02:50:39.920 --> 02:50:43.960]   So if you're starting a business and you're both programmers and you both work on the same kind of programming,
[02:50:44.260 --> 02:50:47.680]   Ah, good luck.
[02:50:47.680 --> 02:50:48.900]   I think that's hard.
[02:50:48.900 --> 02:50:59.320]   I tried to pick an easier path working with a designer where I knew that at least half of the time I could just delegate to his experience and competence and say, like, you know what?
[02:50:59.320 --> 02:51:00.380]   I may have an opinion.
[02:51:00.380 --> 02:51:01.960]   I have an opinion all the time on design.
[02:51:02.620 --> 02:51:05.860]   But I don't have to win the argument because I trust you.
[02:51:06.560 --> 02:51:13.840]   Now, occasionally, we would have overlaps on business or direction where we'd both feel like we had a strong stake in the game.
[02:51:14.340 --> 02:51:17.100]   And we both had a claim to competence in that area.
[02:51:17.400 --> 02:51:23.900]   But then, for whatever reason, we also both had a long-term vision where I would go, do you know what?
[02:51:23.900 --> 02:51:24.920]   I think we're wrong here.
[02:51:24.920 --> 02:51:28.960]   But as I learned from Jeff Bezos, by the way, I'm going to disagree and commit.
[02:51:28.960 --> 02:51:38.300]   That was one of those early lessons he gave us that was absolutely crucial and perhaps even instrumental in ensuring that Jason and I have been working together for a quarter of a century.
[02:51:39.260 --> 02:51:42.160]   Disagree and commit is one of the all-time Jeff Bezos greats.
[02:51:42.160 --> 02:51:45.540]   I'm just surprised that Yoko Ono hasn't come along.
[02:51:45.540 --> 02:51:47.000]   You know what I mean?
[02:51:47.000 --> 02:51:51.000]   Like, there's so many Yoko's in this world.
[02:51:51.000 --> 02:51:57.040]   It might have happened, if not in part because we don't sit on each other's lap all the time.
[02:51:57.040 --> 02:52:00.820]   Most of our careers, we haven't even lived in the same city.
[02:52:00.820 --> 02:52:07.140]   Like, I lived in Chicago for a couple of years while we were getting going after I'd moved to the U.S. in 2005.
[02:52:07.560 --> 02:52:11.080]   But then I moved to Malibu, and then I lived in Spain, and then I lived in Copenhagen.
[02:52:11.080 --> 02:52:23.000]   And Jason and I, from the foundation of our relationship, learned how to work together in a remarkably efficient way where we didn't have to actually talk that much.
[02:52:23.000 --> 02:52:32.660]   On any given week, I'd be surprised if Jason and I spent more than two hours of direct exchange and communication.
[02:52:32.660 --> 02:52:35.660]   Yeah, sometimes it's the basic human frictions.
[02:52:36.000 --> 02:52:42.840]   Yes, I think if you rub up against another person, that person damn well better be your spouse if it's too much for too long.
[02:52:42.840 --> 02:52:43.720]   Yeah, but even there.
[02:52:43.720 --> 02:52:44.400]   Even there.
[02:52:44.400 --> 02:52:46.900]   COVID has really touched the relationship.
[02:52:46.900 --> 02:52:47.920]   It's fascinating to watch.
[02:52:47.920 --> 02:52:48.660]   It has.
[02:52:48.660 --> 02:52:56.400]   And I do think that having some separation, which is kind of counterintuitive, because I think a lot of people think the more collaboration you can have, the better.
[02:52:56.400 --> 02:52:59.020]   The more ideas that can bounce back and forth, the better.
[02:52:59.020 --> 02:53:04.180]   And both Jason and I, for whatever reason, came to the conclusion early on in careers, absolutely not.
[02:53:04.180 --> 02:53:05.520]   That's complete baloney.
[02:53:05.520 --> 02:53:08.760]   This is why we were huge proponents of remote work.
[02:53:09.100 --> 02:53:16.760]   This is why I enjoy working in my home office where I can close the door and not see another human for like six hours at the time.
[02:53:16.760 --> 02:53:19.180]   I don't want to bounce ideas off you all the time.
[02:53:19.180 --> 02:53:21.600]   I want to bounce ideas off you occasionally.
[02:53:21.600 --> 02:53:24.120]   And then I want to go off and implement those ideas.
[02:53:24.120 --> 02:53:28.660]   There's way too much bouncing going on and not enough scoring, not enough dunking.
[02:53:28.820 --> 02:53:34.540]   And I think this is one of the great traps of executive rule.
[02:53:34.540 --> 02:53:44.060]   Once a founder elevates themselves all the way up to an executive, where what they're doing is just telling other people what to do, that's the realm they live in 24-7.
[02:53:44.060 --> 02:53:45.560]   They just live in the idea realm.
[02:53:45.560 --> 02:53:48.820]   Oh, I can just tell more people more things what to do, and we can just see it happen.
[02:53:48.820 --> 02:53:52.020]   If you actually have to be part of implementing that, you slow your horse.
[02:53:52.020 --> 02:53:53.200]   You think like, you know what?
[02:53:53.200 --> 02:53:54.740]   I had a good idea last week.
[02:53:54.740 --> 02:53:57.760]   I'm going to save the rest of my good ideas until next month.
[02:53:58.620 --> 02:54:08.200]   And there is a temptation for the managers and for the people in the executive layer to do something, which that something usually means a meeting.
[02:54:08.200 --> 02:54:08.800]   Yes.
[02:54:08.800 --> 02:54:08.980]   Right?
[02:54:08.980 --> 02:54:09.640]   Yes.
[02:54:09.640 --> 02:54:11.020]   So that's why you say-
[02:54:11.020 --> 02:54:12.680]   Their job is telling other people what to do.
[02:54:12.680 --> 02:54:13.180]   Yeah.
[02:54:13.180 --> 02:54:16.380]   And the meeting, so this is one of the big things you're against.
[02:54:16.380 --> 02:54:18.100]   Meetings are toxic.
[02:54:18.100 --> 02:54:18.700]   Yeah.
[02:54:18.700 --> 02:54:22.480]   And this really, I think, ties into this with Jason Rye.
[02:54:22.480 --> 02:54:28.260]   If I had to count out the total number of meetings we've had in 24 years of collaborations,
[02:54:28.420 --> 02:54:35.760]   where we in person sat in front of each other and discussed a topic, I probably, it'd be less than whatever, three months at a fan company.
[02:54:35.760 --> 02:54:38.200]   We just haven't done that that much.
[02:54:38.200 --> 02:54:39.280]   We haven't worn it out.
[02:54:39.280 --> 02:54:48.580]   One of these funny metaphors that Trump came up with at one point was a human has like a limited number of steps in their life, right?
[02:54:48.580 --> 02:54:50.500]   Like that's the longevity argument here.
[02:54:50.500 --> 02:54:52.880]   You can do so much activity and then you run out.
[02:54:52.880 --> 02:54:56.460]   There's some kernel in that idea that can be applied to relationship.
[02:54:56.460 --> 02:54:59.220]   There's some amount of exchange we can have.
[02:54:59.220 --> 02:55:03.600]   There's some amount of time we can spend together where you can wear it out.
[02:55:03.600 --> 02:55:07.860]   Jason and I were diligent about not wearing each other out.
[02:55:07.860 --> 02:55:17.680]   And I think that is absolutely key to the longevity of the relationship combined with that level of trust and then just combining with the level that we really like the work itself.
[02:55:17.680 --> 02:55:22.660]   We don't just like the brainstorming, the says where we just come up with good ideas.
[02:55:22.660 --> 02:55:27.200]   No, we like to do the ideas and we like to be part of that process directly ourselves.
[02:55:27.200 --> 02:55:28.020]   I like to program.
[02:55:28.020 --> 02:55:29.040]   He likes to do design.
[02:55:29.040 --> 02:55:34.980]   We could go off and do our little things for long stretches of time in case you come together and go like, hey, let's launch a great product.
[02:55:34.980 --> 02:55:47.160]   This might sound like I'm asking you to do therapy, but I find myself to sometimes want or long for a meeting because I'm lonely.
[02:55:47.160 --> 02:55:51.800]   Like because remote work, just sitting by yourself.
[02:55:51.800 --> 02:55:53.400]   I don't know.
[02:55:53.400 --> 02:55:56.060]   It can get really lonely for long stretches of time.
[02:55:56.380 --> 02:55:57.420]   Let me give you a tip.
[02:55:57.420 --> 02:56:00.520]   Get a wife.
[02:56:00.520 --> 02:56:02.680]   God damn it.
[02:56:02.680 --> 02:56:04.080]   Get a couple of kids.
[02:56:04.080 --> 02:56:04.980]   All right.
[02:56:04.980 --> 02:56:07.920]   Family really is the great antidote to loneliness.
[02:56:07.920 --> 02:56:11.060]   And I mean that as sincerely as I can possibly say it.
[02:56:11.060 --> 02:56:20.600]   I certainly had exactly that feeling you described early in my career when I was working remotely and I was just like me living in an apartment.
[02:56:20.600 --> 02:56:26.360]   A total stereotype where for the longest time when I first moved to Chicago, all I had on the floor was a mess.
[02:56:26.360 --> 02:56:29.740]   And then I bought this big TV and I didn't even mound it.
[02:56:29.820 --> 02:56:37.480]   And then I had a stack of DVDs and I was basically I was working a lot of time and then I would just go home and I'd do that.
[02:56:37.480 --> 02:56:39.480]   And it wasn't great.
[02:56:39.480 --> 02:56:42.980]   It really wasn't like I do think that humans need humans.
[02:56:43.360 --> 02:56:47.500]   And if you can't get them at work, and I actually sort of kind of don't want them at work.
[02:56:47.500 --> 02:56:49.320]   At least I don't want them for 40 hours a week.
[02:56:49.320 --> 02:56:50.480]   That's not what I prefer.
[02:56:50.480 --> 02:56:51.820]   You need something else.
[02:56:51.820 --> 02:56:53.380]   You need other relationships in your life.
[02:56:53.380 --> 02:56:59.820]   And there is no greater depth of relationship if you can find someone that you actually just want to spend a lot of time with.
[02:57:00.140 --> 02:57:00.820]   That's key to it.
[02:57:00.820 --> 02:57:06.160]   And I think it's key for both Jason and I that we've had families for quite a long time.
[02:57:06.160 --> 02:57:16.860]   And it grounds you to in a way where the sprint of a startup can get traded in for the marathon of an enduring company.
[02:57:17.320 --> 02:57:19.260]   And you get settled in a way.
[02:57:19.260 --> 02:57:21.900]   We talked briefly about sometimes I get fired up.
[02:57:21.900 --> 02:57:25.320]   I mean, a lot of times, maybe even most of the times I get fired up about topics.
[02:57:25.320 --> 02:57:30.900]   But I don't get fired up in the same way now as I used to when I was 24.
[02:57:30.900 --> 02:57:35.120]   I'm still extremely passionate about ideas and trying to find the right things.
[02:57:35.120 --> 02:57:47.480]   But having a family, meeting my wife, building a life around that has just mellowed everything out in a completely cliche way.
[02:57:47.480 --> 02:57:50.900]   But I think it's actually key.
[02:57:50.900 --> 02:58:02.380]   I think if we could get more, even younger people, not to wait until they were in their goddamn 30s, early 40s to hitch up with someone, we'd be better off.
[02:58:02.380 --> 02:58:11.020]   And we'd have more stable business relationships as well because folks would get that nurturing human relation somewhere else.
[02:58:11.020 --> 02:58:23.680]   Now, when I say all of that, I also accept that there are plenty of great businesses that's been built over the years that have not been built remote, that have been built by a gang of hooligans sitting in an office for immense hours of time.
[02:58:23.680 --> 02:58:33.140]   I mean, both John Carmack and Tim Sweeney talked about that in the 90s with their careers, that that was just basically work, sleep, hang out with the guys at the office, right?
[02:58:33.140 --> 02:58:34.480]   Totally fair.
[02:58:34.480 --> 02:58:36.360]   That never appealed to me.
[02:58:36.760 --> 02:58:57.400]   Both Jason and I saw eye to eye on the idea that 40 hours a week dedicated to work was enough, that if we were going to go to distance for not just the five to seven years it takes to build a VC case up to an exit, but for potentially 10 years, 20 years or further, we needed to become whole humans.
[02:58:57.400 --> 02:59:12.040]   Because only that whole humanness was going to go to distance, which included building up friendships outside of work, having hobbies, finding a mate and having a family.
[02:59:13.040 --> 02:59:28.080]   And that entire existence, those legs of the stool, that work is not the only thing in life, is completely related to the fact that we've been around for 25 years.
[02:59:28.080 --> 02:59:33.500]   There's way too much, especially in America, of false trade-offs.
[02:59:33.500 --> 02:59:35.220]   Oh, you want to build a successful business?
[02:59:35.220 --> 02:59:40.120]   Well, you can either have money, enjoyment, family, or health, pick one.
[02:59:40.120 --> 02:59:41.020]   What?
[02:59:41.380 --> 02:59:43.480]   Why do we have to give up all of this?
[02:59:43.480 --> 02:59:53.720]   Now, again, I'm not saying there aren't moments in life where you can sprint, but I am saying if that sprint turns into a decade, you're going to pay for it.
[02:59:53.720 --> 03:00:00.020]   And you're going to pay for it in ways I've seen time and again seem like a very bad trade.
[03:00:00.020 --> 03:00:03.000]   That even if it works, and by the way, most of the time it does not.
[03:00:03.000 --> 03:00:04.820]   Most of the time startups go bust.
[03:00:04.820 --> 03:00:10.780]   Most of the time people spend five, seven years of something that does not pan out and they don't get the payout.
[03:00:11.160 --> 03:00:14.660]   And then they just sit with regret of like, what the fuck happened to my 20s?
[03:00:14.660 --> 03:00:22.160]   Early on, Jason and I basically made the pact that working together was not going to lead to that kind of regret.
[03:00:22.160 --> 03:00:28.340]   That we were going to allow ourselves and each other to build a whole life outside of work.
[03:00:31.080 --> 03:00:40.040]   The fact that that worked is something I feel is almost like forbidden knowledge, certainly in technology circles in the U.S.
[03:00:40.040 --> 03:00:43.680]   It's something that we've tried to champion for 20 years and we still get slacked for.
[03:00:43.780 --> 03:00:52.200]   Just two days ago, I had another Twitter beef with someone saying like, oh, well, okay, maybe it worked, but you didn't turn into Atlassian, so you're a failure.
[03:00:52.200 --> 03:00:55.640]   Basecamp isn't Jira, so why are you even bothering?
[03:00:56.420 --> 03:01:12.380]   And it's such a fascinating winner-takes-all mentality that unless you dominate everyone else in all the ways you've lost, when so much of life is far more open to multiple winners.
[03:01:12.920 --> 03:01:20.920]   Where we can end up with a business that have made hundreds of millions of dollars over the years and we've kept much of that to do whatever we want.
[03:01:20.920 --> 03:01:23.520]   And that that's enough.
[03:01:23.520 --> 03:01:24.800]   That's good.
[03:01:24.800 --> 03:01:25.400]   That's great.
[03:01:25.400 --> 03:01:29.400]   That's actually something worth aspiring to.
[03:01:30.240 --> 03:01:39.020]   Certainly, it should be a path for someone to consider choosing rather than the VC unicorn-a-bust mentality that dominates everything.
[03:01:39.020 --> 03:01:44.800]   I'd love to ask you about this exchange so you can explain to me the whole saga, but just to link on that a little bit,
[03:01:45.540 --> 03:02:01.700]   I think there's a notion that success for a tech founder is like work for a few years, all out, and then exit, sort of sell your company for, I don't know, hundreds of millions of dollars.
[03:02:01.700 --> 03:02:02.460]   That's success.
[03:02:03.240 --> 03:02:19.320]   When it seems in reality, when you look at who the people like you, like really smart, creative humans, who they actually are and what happiness entails, it actually entails working your whole life a little bit.
[03:02:19.320 --> 03:02:27.160]   Just like, because you actually love the programming, you love the building, you love the designer, and you don't want to exit.
[03:02:27.160 --> 03:02:31.280]   And that's something you've talked about really, really eloquently about.
[03:02:31.280 --> 03:02:39.520]   So, like, you actually want to create a life where you're always doing the building and doing it in a way that's not completely taking over your life.
[03:02:39.520 --> 03:02:41.400]   Mojito Island is a mirage.
[03:02:41.400 --> 03:02:42.580]   It always was.
[03:02:42.580 --> 03:02:44.980]   There is no retirement for ambitious people.
[03:02:44.980 --> 03:02:49.320]   There is no just sitting back on the beach and sipping a mojito for what?
[03:02:49.320 --> 03:02:54.180]   For two weeks before you go damn crazy and want to get back into the action?
[03:02:54.180 --> 03:02:59.680]   That's exactly what happens to most people who have the capacity to build those kinds of exits.
[03:02:59.680 --> 03:03:05.500]   I've never seen, I shouldn't say never, I've almost never seen anyone be able to pull that off.
[03:03:05.500 --> 03:03:08.740]   Yet, so many think that that's why they're doing it.
[03:03:08.740 --> 03:03:10.420]   That's why they're sacrificing everything.
[03:03:10.420 --> 03:03:13.620]   Because once I get to the finish line, I'm golden.
[03:03:13.620 --> 03:03:14.400]   I've won.
[03:03:14.400 --> 03:03:15.240]   I can retire.
[03:03:15.240 --> 03:03:16.060]   I can sit back.
[03:03:16.060 --> 03:03:17.020]   I can just relax.
[03:03:17.020 --> 03:03:22.000]   And you find out that that kind of relaxation is actually hell.
[03:03:22.320 --> 03:03:30.100]   It's hell for creative people to squander their God-given creative juices and capacities.
[03:03:31.100 --> 03:03:38.740]   And I was really lucky to read the book Flow by Mihaly Csikszentmihalyi early on.
[03:03:38.740 --> 03:03:39.220]   Nice.
[03:03:39.220 --> 03:03:40.600]   The pronunciations.
[03:03:40.600 --> 03:03:41.000]   Do you know what?
[03:03:41.000 --> 03:03:44.900]   I had to practice that with AI over the last few days because I knew I was going to cite him.
[03:03:44.900 --> 03:03:47.440]   And I butchered his name several times.
[03:03:47.440 --> 03:03:50.860]   So AI taught me how to pronounce that, at least somewhat correctly.
[03:03:50.920 --> 03:04:03.820]   But his main work over his career was essentially the concept of flow that came out of a search for understanding happiness.
[03:04:03.820 --> 03:04:05.520]   Why are some people happy?
[03:04:05.520 --> 03:04:06.460]   When are they happy?
[03:04:06.460 --> 03:04:09.040]   And what he learned was quite illuminating.
[03:04:09.040 --> 03:04:12.100]   He learned that people aren't happy when they sit on Mojito Island.
[03:04:12.100 --> 03:04:15.140]   They're not happy when they're free of all obligations and responsibilities.
[03:04:15.340 --> 03:04:24.580]   No, they're happy in these moments where they're reaching and stretching their capacities just beyond what they can currently do.
[03:04:24.580 --> 03:04:28.600]   In those moments of flow, they can forget time and space.
[03:04:28.600 --> 03:04:36.080]   They can sit in front of the keyboard, program a hard problem, think 20 minutes have passed, and suddenly it's been three hours.
[03:04:36.080 --> 03:04:42.060]   They look back upon those moments with the greatest amount of joy, and that is what peak happiness is.
[03:04:42.060 --> 03:04:51.420]   If you take away the pursuit of those kinds of problems, if you eliminate all the problems from your plate, you're going to get depressed.
[03:04:51.420 --> 03:04:53.640]   You are not going to have a good time.
[03:04:53.640 --> 03:04:57.340]   Now, there are people who can do that, but they're not the same kind of people who built these kinds of companies.
[03:04:57.340 --> 03:05:00.900]   So you have to accept the kind of individual you are.
[03:05:00.900 --> 03:05:04.380]   If you are on this path, don't bullshit yourself.
[03:05:04.800 --> 03:05:10.820]   Don't bullshit yourself into thinking, I'm just going to sacrifice everything, my health, my family, my hobbies, my friends.
[03:05:10.820 --> 03:05:14.880]   But in 10 years, I'm going to make it all up because in 10 years I can do it.
[03:05:14.880 --> 03:05:16.280]   It never works out like that.
[03:05:16.280 --> 03:05:18.560]   It doesn't work out on both ends of it.
[03:05:18.560 --> 03:05:24.100]   It does not work out if you're successful and you sell your company because you'll get bored out of your mind at two weeks on retirement.
[03:05:24.320 --> 03:05:30.020]   It doesn't work out if the company is a failure and you regret the last 10 years spent for nothing.
[03:05:30.020 --> 03:05:34.740]   It doesn't work out if it all works and you stay in the business because it never gets any easier.
[03:05:34.740 --> 03:05:40.380]   So you're going to fail on all metrics if you just go, there's only work and nothing else.
[03:05:40.380 --> 03:05:42.840]   And I didn't want that.
[03:05:43.000 --> 03:05:44.820]   I wanted the happiness of flow.
[03:05:44.820 --> 03:05:52.940]   I understood that insight was true, but I wanted to do it in a way where I could sustain the journey for 40 or 50 years.
[03:05:52.940 --> 03:06:05.880]   And there's another interesting caveat that I've heard you say is that if you do exit and you sell your company and you want to stay in, you want to do another company, that's going to usually not be as fulfilling.
[03:06:05.880 --> 03:06:06.400]   Yes.
[03:06:06.400 --> 03:06:08.580]   Because really your first baby, like.
[03:06:08.580 --> 03:06:12.760]   You can't do it again or most people can't do it again.
[03:06:12.760 --> 03:06:16.220]   A, because their second idea is not going to be as good as the first one.
[03:06:16.220 --> 03:06:20.780]   It is so rare to capture lightning in the bottle like we have, for example, with Basecamp.
[03:06:20.780 --> 03:06:24.300]   I know this from experience because I've been trying to build a lot of other businesses since.
[03:06:24.300 --> 03:06:26.740]   And some of them have been moderate successes, even good successes.
[03:06:26.740 --> 03:06:28.360]   None of them have been Basecamp.
[03:06:28.360 --> 03:06:31.240]   It's really difficult to do that twice.
[03:06:31.240 --> 03:06:34.800]   But founders are arrogant pricks, including myself.
[03:06:34.800 --> 03:06:39.120]   And we like to think that, you know what, we succeeded in large part because we're just awesome.
[03:06:39.120 --> 03:06:40.940]   We're just so much better than everyone else.
[03:06:41.500 --> 03:06:43.780]   And in some ways that's true some of the time.
[03:06:43.780 --> 03:06:49.820]   But you can also be really good at something that matters for a hot moment that that door is open.
[03:06:49.820 --> 03:06:50.780]   The door closes.
[03:06:50.780 --> 03:06:52.820]   Now, you're still good at the thing, but it doesn't matter.
[03:06:52.820 --> 03:06:53.520]   No one cares.
[03:06:53.520 --> 03:06:55.640]   There's that part of it.
[03:06:55.640 --> 03:07:02.880]   And then there's the part of it that going back to experience things for the first time only happens the first time.
[03:07:02.880 --> 03:07:03.920]   You can't do it again.
[03:07:03.920 --> 03:07:09.200]   I don't know if I have it in me to go through the bullshit of the early days again.
[03:07:09.200 --> 03:07:12.220]   And I say bullshit in the sense of the most endearing sense.
[03:07:12.220 --> 03:07:13.460]   It's all great to do it.
[03:07:13.460 --> 03:07:14.740]   I know too much.
[03:07:14.740 --> 03:07:23.180]   This is one of the reasons why whenever I'm asked the questions, if you could tell your younger self something that would really what would you say to your younger self?
[03:07:23.240 --> 03:07:24.480]   I would fucking not say a thing.
[03:07:24.480 --> 03:07:32.220]   I would not rob my younger self of all the life experiences that I've been blessed with due to the ignorance of how the world works.
[03:07:32.220 --> 03:07:37.740]   Building up the wisdom about how the world works is a joy.
[03:07:38.200 --> 03:07:39.820]   And you've got to build it one break at a time.
[03:07:39.820 --> 03:07:43.640]   If you just handed all the results, it's like, oh, should we watch a movie?
[03:07:43.640 --> 03:07:44.420]   Here's how it ends.
[03:07:44.420 --> 03:07:46.740]   I don't want to watch the movie now.
[03:07:46.740 --> 03:07:48.000]   You spoiled it.
[03:07:48.000 --> 03:07:51.200]   I don't want you to spoil my business experience.
[03:07:51.200 --> 03:07:53.260]   I don't want to spoil any of my ignorance.
[03:07:53.260 --> 03:07:58.460]   The greatest blessing half the time when you're starting something new is A, you don't know how hard it's going to be.
[03:07:58.460 --> 03:08:01.160]   B, you don't know what you don't know.
[03:08:01.160 --> 03:08:03.840]   Like the adventure is the payoff.
[03:08:03.840 --> 03:08:06.640]   The responsibility is the payoff.
[03:08:06.640 --> 03:08:13.440]   This is something Jordan Peterson has really taught me to articulate this notion that responsibility is actually key to meaning.
[03:08:13.440 --> 03:08:17.620]   Man's search for meaning.
[03:08:17.620 --> 03:08:23.860]   Victor Frankl talks about this as well, that we can endure any hardship if there is a reason why.
[03:08:23.860 --> 03:08:35.580]   Now, he talked about it in truly life altering concentration camp ways, but you can also apply at a smaller scale with less criticality of even just your daily life.
[03:08:35.580 --> 03:08:41.960]   That all that hardship in building the original business, that is responsibility you take upon yourself.
[03:08:41.960 --> 03:08:46.800]   The appeal, the reason you take that on you is in part because you don't know fully what it entails.
[03:08:46.800 --> 03:08:53.700]   If you had known up front, if I had known up front how hard it would be, how much frustration there'd be along the way.
[03:08:53.760 --> 03:08:59.560]   If you just told me that in a narrative before I got started, I would have been like, eh, maybe I should just go get a job.
[03:09:00.240 --> 03:09:03.200]   I mean, you said so many smart things there just to pick one.
[03:09:03.200 --> 03:09:13.060]   It's funny that sometimes the advice givers, the wisdom givers are, have gone through all the bullshit.
[03:09:13.940 --> 03:09:17.060]   And so there is a degree to which you want to make the mistake.
[03:09:17.060 --> 03:09:27.360]   So I think, I think I would still give the advice of you want to have a stretch of your life where you work too hard, including at a thing that fails.
[03:09:27.720 --> 03:09:33.640]   I don't think you can learn the lessons why that's a bad idea in any other way, except by doing it.
[03:09:33.640 --> 03:09:36.540]   There is a degree, but of course you don't.
[03:09:36.540 --> 03:09:37.980]   I think you should stretch.
[03:09:37.980 --> 03:09:39.900]   Should you have to stretch for a decade?
[03:09:39.900 --> 03:09:40.640]   I'm not so sure.
[03:09:40.640 --> 03:09:43.300]   Yeah, the decade thing is 20s is a special time.
[03:09:43.300 --> 03:09:44.740]   It's a lot to trade.
[03:09:44.740 --> 03:09:46.120]   You don't get your 20s back.
[03:09:46.120 --> 03:09:47.360]   You don't get your 30s back.
[03:09:47.360 --> 03:09:48.560]   You don't get your 40s back.
[03:09:48.560 --> 03:09:54.760]   You really, I would have regretted personally if I hadn't done the other things I did in my 20s.
[03:09:54.760 --> 03:09:59.680]   If I hadn't had the fun I had, if I hadn't had the friends I had, if I hadn't built up the hobbies that I did,
[03:09:59.680 --> 03:10:05.060]   if I hadn't started driving race cars at an early enough age to actually get really good at it,
[03:10:05.060 --> 03:10:10.060]   if I had just gone all in on business, because I would have got the same out in the end.
[03:10:10.260 --> 03:10:12.620]   This is something Derek Sivers really taught me.
[03:10:12.620 --> 03:10:20.220]   He has this great essay about how when he went for a bike ride, he could go really hard all out,
[03:10:20.220 --> 03:10:24.040]   and he could do the ride, I think, in whatever, 19 minutes.
[03:10:24.040 --> 03:10:32.040]   Or he could enjoy the ride, go 5% slower, do the ride in 21 minutes, and realize there's only two minutes apart.
[03:10:32.040 --> 03:10:37.420]   Either I go all in all the time, there's nothing else, I'm completely exhausted at the end,
[03:10:38.120 --> 03:10:46.320]   or I travel the same distance and I arrive maybe two minutes later, but I got to enjoy the scenery, listen to the birds, smell the flowers.
[03:10:46.320 --> 03:10:50.200]   That journey is also valuable.
[03:10:50.400 --> 03:10:59.860]   I say that while accepting and celebrating that if you want to be the best at one thing in the world, no, you have to sacrifice everything.
[03:10:59.860 --> 03:11:03.260]   You have to be obsessed with just that thing.
[03:11:03.260 --> 03:11:08.340]   There is no instant of someone who's the best in the world at something who's not completely obsessed.
[03:11:08.540 --> 03:11:10.240]   I didn't need to be the best at anything.
[03:11:10.240 --> 03:11:15.300]   This was a rare blessing of humility I had early on.
[03:11:15.300 --> 03:11:16.080]   It's like, you know what?
[03:11:16.080 --> 03:11:17.660]   I am not that smart.
[03:11:17.660 --> 03:11:18.600]   I'm not that good.
[03:11:18.600 --> 03:11:19.500]   I'm not that talented.
[03:11:19.500 --> 03:11:26.480]   I can do interesting things by combining different aspects and elements that I know, but I'm not going to be the best at anything.
[03:11:26.980 --> 03:11:33.700]   And that released me from this singular obsession with just going, I'm going to be the best programmer in the world.
[03:11:33.700 --> 03:11:34.960]   And I know I'm not.
[03:11:34.960 --> 03:11:39.180]   I fucking failed at it twice before I even got how conditionals work.
[03:11:39.600 --> 03:11:41.880]   I'm not smart enough to be the best at anything.
[03:11:41.880 --> 03:11:43.880]   I'm not dedicated enough to do that.
[03:11:43.880 --> 03:11:45.960]   That's a bit of a blessing.
[03:11:45.960 --> 03:11:58.240]   And I think as a society, we have to straddle both celebrating peak excellence, which we do all the time, and celebrating the peak intensity of mission it takes to become that.
[03:11:58.240 --> 03:12:00.120]   And then also going like, you know what?
[03:12:00.120 --> 03:12:03.060]   We don't all need to be Michael Jordan.
[03:12:03.060 --> 03:12:04.520]   There's only going to be one of those.
[03:12:04.520 --> 03:12:10.300]   Well, we should say that there's certain pursuits where a singular obsession is required.
[03:12:10.300 --> 03:12:12.220]   Basketball is one of them.
[03:12:12.220 --> 03:12:14.340]   By the way, probably racing.
[03:12:14.340 --> 03:12:16.860]   If you want to be the best at F1 in the world.
[03:12:16.860 --> 03:12:19.300]   If you want to be Senna, you got to be a maniac.
[03:12:19.300 --> 03:12:28.460]   But I would argue that there's most disciplines like programming allows, if you want to be, quote unquote, the best, whatever that means.
[03:12:28.460 --> 03:12:31.360]   I think that's judged at the end of your life.
[03:12:31.560 --> 03:12:35.200]   And usually, if you look at that path, it's going to be a non-linear one.
[03:12:35.200 --> 03:12:39.220]   You're not going to look like the life of an Olympic athlete who's singular focus.
[03:12:39.220 --> 03:12:50.340]   There's going to be some acid there in the 20s, or there's going to be several detours, which are the true greats.
[03:12:50.340 --> 03:12:51.760]   There's going to be detours.
[03:12:51.840 --> 03:12:55.280]   And sometimes, they're not going to be Steve Jobs' asset type of situation.
[03:12:55.280 --> 03:13:06.320]   They'll be just different companies you worked for, different careers, or different sort of efforts you allocated your life to.
[03:13:06.320 --> 03:13:07.640]   But it's going to be non-linear.
[03:13:07.640 --> 03:13:09.360]   It's not going to be a singular focus.
[03:13:09.360 --> 03:13:14.240]   The way I think about this sometimes is I want a good bargain on learning.
[03:13:14.240 --> 03:13:23.560]   I can become in the top 5% of whatever I defined as good at something much, much easier.
[03:13:23.560 --> 03:13:29.560]   Perhaps it's 20 times easier, 100 times easier to get into the top 5% than it is to get into the top 0.1%.
[03:13:29.560 --> 03:13:31.860]   That's almost impossibly hard to get into that.
[03:13:31.920 --> 03:13:38.180]   But if I'm content just being in the top 5%, I can be in the top 5% on like five things at once.
[03:13:38.180 --> 03:13:40.520]   I can get really good at writing.
[03:13:40.520 --> 03:13:43.260]   I can get decent at driving a race car.
[03:13:43.260 --> 03:13:45.760]   I can become pretty good at programming.
[03:13:45.760 --> 03:13:46.860]   I can run a company.
[03:13:46.860 --> 03:13:48.080]   I can have a family.
[03:13:48.080 --> 03:13:55.600]   I can do a lot of things at the same time that gives me sort of that variety that almost otherwise idealized.
[03:13:55.600 --> 03:14:01.660]   Karl Marx has this idea, I'm going to fish in the morning and hammer in the evening and paint.
[03:14:01.660 --> 03:14:02.920]   On the weekends, right?
[03:14:02.920 --> 03:14:07.840]   That there's a sense for me at least where his diagnosis of alienation was true.
[03:14:07.840 --> 03:14:14.420]   That just that tunnel vision, there's just this one thing, I'm just going to focus on that, gives me a sense of alienation I can't stomach.
[03:14:14.420 --> 03:14:24.720]   When I'm really deep on programming, and sometimes I go deep for weeks, maybe even in a few cases months, I have to come up for air and I have to go do something else.
[03:14:24.960 --> 03:14:27.520]   Like, all right, that was programming for this year.
[03:14:27.520 --> 03:14:28.680]   I've done my part.
[03:14:28.680 --> 03:14:33.300]   I'm going to go off writing or annoy people on the internet or drive some race cars or do something else.
[03:14:33.300 --> 03:14:37.900]   And then I can do the programming thing with full intensity again next year.
[03:14:37.900 --> 03:14:41.780]   Speaking of annoying people on the internet, you got to explain to me this drama.
[03:14:41.780 --> 03:14:42.180]   Okay.
[03:14:42.220 --> 03:14:49.020]   So what is this guy that said, imagine losing to Jira, but boasting that you have a couple million dollars per year.
[03:14:49.020 --> 03:14:55.000]   So this had to do with this almost now a meme decision to leave the cloud.
[03:14:55.000 --> 03:14:57.380]   GHH left the cloud.
[03:14:57.380 --> 03:15:03.280]   I think that's literally a meme, but it's also a fascinating decision.
[03:15:03.600 --> 03:15:07.460]   Can you talk to the full saga of GHA leaves the cloud?
[03:15:07.460 --> 03:15:08.100]   Yes.
[03:15:08.100 --> 03:15:11.500]   Leaving AWS, saving money.
[03:15:11.500 --> 03:15:14.040]   And I guess the case this person is making now.
[03:15:14.040 --> 03:15:19.640]   Is that we wasted our time optimizing a business that could have been a hundred times bigger if we'd just gone for the moon.
[03:15:19.640 --> 03:15:22.120]   And for the moon includes.
[03:15:22.120 --> 03:15:23.340]   Venture capital.
[03:15:23.340 --> 03:15:23.980]   But also.
[03:15:23.980 --> 03:15:26.440]   Some of the things includes not caring about cost.
[03:15:26.440 --> 03:15:31.620]   But also because AGIs are on the corner, you should have been investing into AI, right?
[03:15:31.800 --> 03:15:32.680]   Is this part of that?
[03:15:32.680 --> 03:15:32.960]   Sort of.
[03:15:32.960 --> 03:15:35.020]   I think it's a bit of a muddy argument.
[03:15:35.020 --> 03:15:49.640]   But if we just take it at its peak ideal, which I actually think is a reasonable point, is that you can get myopically focused on counting pennies when you should be focused on getting pounds, right?
[03:15:49.640 --> 03:15:56.340]   That I've optimized our spend on infrastructure by getting out of the cloud.
[03:15:56.340 --> 03:15:57.500]   And that took some time.
[03:15:57.500 --> 03:16:01.400]   And I could have taken that time and spend it on making more features.
[03:16:01.400 --> 03:16:06.060]   I would have attracted more customers or spend even more time with AI or done other things.
[03:16:06.060 --> 03:16:07.600]   Opportunity cost is real.
[03:16:07.600 --> 03:16:09.000]   I'm not denying that.
[03:16:09.000 --> 03:16:24.880]   I'm pushing back on the idea that for a company of our size, saving $2 million a year on our infrastructure bill, which is about somewhere between half to two thirds, goes directly to the bottom line.
[03:16:24.880 --> 03:16:32.840]   This idea that costs don't matter.
[03:16:32.840 --> 03:16:43.440]   This idea that costs don't matter is a very Silicon Valley way of thinking that I can understand at the scale of something maybe.
[03:16:43.440 --> 03:16:49.180]   But I also actually think it's aesthetically unpleasing.
[03:16:49.180 --> 03:16:58.900]   I find an inefficient business as I find an inefficient program full of line noise to just be a splinter in my brain.
[03:16:58.900 --> 03:17:04.280]   I hate looking at an expense report and just seeing disproportionate waste.
[03:17:04.880 --> 03:17:13.460]   And when I was looking at our spend at 37 Signals a while back, a few years back, I saw bills that did not pass my smell test.
[03:17:13.460 --> 03:17:21.900]   I remembered how much we used to spend on infrastructure before the cloud, and I saw numbers I could not recognize in proportion to what we needed.
[03:17:21.900 --> 03:17:26.300]   The fact that computers had gotten so much faster over time, shouldn't things be getting cheaper?
[03:17:26.300 --> 03:17:30.300]   Why are we spending more and more money servicing more customers?
[03:17:30.540 --> 03:17:36.260]   Yes, but with much faster computers, Moore's law should be lowering the cost.
[03:17:36.260 --> 03:17:37.980]   And the opposite is happening.
[03:17:37.980 --> 03:17:38.880]   Why is that happening?
[03:17:38.880 --> 03:17:48.380]   And that started a journey of unwinding why the cloud isn't as great as the deal as people like to think that.
[03:17:48.380 --> 03:17:48.700]   Yeah.
[03:17:48.700 --> 03:17:59.420]   Can we look at the specifics just for people who don't know the story and then generalize to what it means about the role of the cloud in the tech business?
[03:17:59.520 --> 03:18:03.100]   So the specifics is you were using AWS S3?
[03:18:03.100 --> 03:18:05.220]   We were using AWS for everything.
[03:18:05.220 --> 03:18:08.620]   Hey.com launched as an entirely cloud app.
[03:18:08.620 --> 03:18:13.120]   It was completely on AWS for compute, for databases, for all of it.
[03:18:13.120 --> 03:18:16.900]   And we were using all the systems as they are best prescribed that we should.
[03:18:16.900 --> 03:18:27.400]   Our total cloud bill for Basecamp, our total spend with AWS was, I think, $3.2 million or $3.4 million at its peak.
[03:18:27.400 --> 03:18:29.080]   That's kind of a lot of money.
[03:18:29.080 --> 03:18:30.820]   $3.4 million.
[03:18:30.820 --> 03:18:33.660]   I mean, we have a ton of users and customers.
[03:18:33.660 --> 03:18:36.760]   But still, that just struck me as unreasonable.
[03:18:36.760 --> 03:18:43.260]   And the reason why it was so unreasonable was because I had the pitch for the cloud ringing in my ears.
[03:18:43.260 --> 03:18:45.160]   Hey, this is going to be faster.
[03:18:45.160 --> 03:18:46.760]   This is going to be easier.
[03:18:46.760 --> 03:18:48.220]   This is going to be cheaper.
[03:18:48.860 --> 03:18:50.540]   Why are you trying to produce your own power?
[03:18:50.540 --> 03:18:52.520]   Like, do you have your own power plant?
[03:18:52.520 --> 03:18:53.240]   Why would you do that?
[03:18:53.240 --> 03:18:56.740]   Leave the computers to the hyperscalers.
[03:18:56.740 --> 03:18:57.920]   They're much better at it anyway.
[03:18:58.380 --> 03:19:00.220]   I actually thought that was a compelling pitch.
[03:19:00.220 --> 03:19:04.160]   I bought in on that pitch for several years and thought, do you know what?
[03:19:04.160 --> 03:19:06.500]   I'm done ever owning a server again.
[03:19:06.500 --> 03:19:08.460]   We're just going to rent our capacity.
[03:19:08.460 --> 03:19:17.040]   And Amazon is going to be able to offer us services much cheaper than we could buy them themselves because they're going to have these economies of scale.
[03:19:17.040 --> 03:19:23.580]   And I was thinking, Jeff's word ringing, my competitor's margin is my opportunity.
[03:19:23.580 --> 03:19:31.920]   That was something he used to drive Amazon.com with, that if he could just make 2% when the other guy was trying to make 4%, he would end up with all the money.
[03:19:31.920 --> 03:19:34.240]   And on volume, he would still win.
[03:19:34.240 --> 03:19:37.580]   So I thought that was the operating ethos for AWS.
[03:19:37.580 --> 03:19:39.160]   It turns out that's not true at all.
[03:19:39.160 --> 03:19:42.300]   AWS, by the way, operates at almost 40% margin.
[03:19:43.240 --> 03:19:53.500]   So just in that, there's a clue that competitors are not able to do the competitive thing we like about capitalism, which is to lower costs and so forth.
[03:19:53.500 --> 03:19:59.080]   So the cloud pitch, in my optics, is fundamentally false.
[03:19:59.080 --> 03:20:02.020]   It did not get easier, first of all.
[03:20:02.020 --> 03:20:03.740]   I don't know if you've used AWS recently.
[03:20:03.740 --> 03:20:05.940]   It is hella complicated.
[03:20:05.940 --> 03:20:12.200]   If you think Linux is hard, you've never tried to set up IAM rules or access parameters or whatever for AWS.
[03:20:12.540 --> 03:20:13.800]   AWS was always difficult.
[03:20:13.800 --> 03:20:14.580]   It was always complicated.
[03:20:14.580 --> 03:20:16.040]   Well, I think it's gotten even more difficult.
[03:20:16.040 --> 03:20:16.780]   But yes.
[03:20:16.780 --> 03:20:22.220]   Now, some of that is it's difficult because it's very capable and you have a bunch of capacity on tap.
[03:20:22.220 --> 03:20:23.200]   And there are reasons.
[03:20:23.200 --> 03:20:29.140]   I don't think they're good enough to justify how complicated the whole jing-a-ma-jing has become.
[03:20:29.140 --> 03:20:32.020]   But what's certainly true is that it's no longer easier.
[03:20:32.020 --> 03:20:40.960]   It's not easier to use AWS than it is to run your own machines, which we learned when we pulled out of the cloud and didn't hire a single extra person.
[03:20:40.960 --> 03:20:45.200]   Even though we operate all our own hardware, the team stayed exactly the same.
[03:20:45.200 --> 03:20:47.080]   So you have this three-way pitch, right?
[03:20:47.080 --> 03:20:48.960]   It's going to be easier.
[03:20:48.960 --> 03:20:50.640]   It's going to be cheaper.
[03:20:50.640 --> 03:20:52.120]   It certainly wasn't cheaper.
[03:20:52.120 --> 03:20:56.940]   We've just proved that by cutting our spend on infrastructure by half to two-thirds.
[03:20:56.940 --> 03:20:58.460]   And it's going to be faster.
[03:20:58.720 --> 03:20:59.920]   The last bit was true.
[03:20:59.920 --> 03:21:05.140]   But way too many people overestimated the value of that speed.
[03:21:05.140 --> 03:21:11.000]   If you need a thousand computers online in the next 15 minutes, nothing beats the cloud.
[03:21:11.000 --> 03:21:12.620]   How would you even procure that?
[03:21:12.620 --> 03:21:22.920]   If we just need another 20 servers, it's going to take a week or two to get boxes shipped on pallets, delivered to a data center, unwrapped and racked and all that stuff.
[03:21:23.000 --> 03:21:25.100]   But how often do we need to do that?
[03:21:25.100 --> 03:21:32.680]   And how often do we need to do that if buying those servers is way, way cheaper so that we get vastly more compute for the same amount of money?
[03:21:32.680 --> 03:21:39.600]   Could we just buy more servers and not even care about the fact that we're not hyper-optimized on the compute utility?
[03:21:39.600 --> 03:21:45.200]   That we don't have to use things like automatic scaling to figure things out because we have to reduce costs?
[03:21:45.280 --> 03:21:45.980]   Yes, we can.
[03:21:45.980 --> 03:21:57.540]   So we went through this journey over a realization in early 2023 when I had finally had enough with our bills.
[03:21:57.540 --> 03:21:58.640]   I wanted to get rid of them.
[03:21:58.640 --> 03:21:59.700]   I wanted to spend less money.
[03:21:59.700 --> 03:22:01.340]   I wanted to keep more of the money ourselves.
[03:22:01.680 --> 03:22:11.460]   And in just over six months, we moved seven major applications out of the cloud in terms of compute, caching, databases that works onto our own servers.
[03:22:11.460 --> 03:22:21.640]   A glorious, beautiful new fleet bought from the king of servers, Michael Dell, who really, by the way, is another icon of mine.
[03:22:21.640 --> 03:22:24.000]   I saw he just celebrated 41 years in business.
[03:22:24.000 --> 03:22:25.300]   41 years.
[03:22:25.300 --> 03:22:30.180]   This man has been selling awesome servers that we've been using for our entire existence.
[03:22:30.180 --> 03:22:38.960]   But anyway, these pallets arrive in a couple of weeks, and we rack them up and get everything going, and we were out, at least with the compute part.
[03:22:38.960 --> 03:22:55.100]   We then had a long multi-year commitment to S3 because the only way to get decent pricing in the cloud, by the way, is not to buy on a day-to-day basis, not to rent on a day-to-day basis, but to bind yourself up to multi-year contracts.
[03:22:55.460 --> 03:22:57.440]   With compute, it's often a year.
[03:22:57.440 --> 03:22:58.380]   That was in our case.
[03:22:58.380 --> 03:23:00.540]   And with storage, it was four years.
[03:23:00.540 --> 03:23:09.020]   We signed a four-year contract to store our petabytes of customer files in the cloud to be able to get something just halfway decent affordable.
[03:23:10.240 --> 03:23:18.920]   All of these projects came together to the sense that we're now saving literally millions of dollars, projected about $10 million over five years.
[03:23:18.920 --> 03:23:19.760]   It's always hard.
[03:23:19.760 --> 03:23:21.520]   How do you do the accounting exactly?
[03:23:21.520 --> 03:23:23.760]   And TOC, this, that, and the other thing.
[03:23:23.760 --> 03:23:25.100]   But it's millions of dollars.
[03:23:25.100 --> 03:23:26.760]   But it's not just that.
[03:23:27.020 --> 03:23:34.620]   It's also the fact that getting out of the cloud meant returning to more of an original idea of the internet.
[03:23:34.620 --> 03:23:40.160]   That the internet was not designed such that three computers should run everything.
[03:23:40.160 --> 03:23:45.620]   It was a distributed network such that the individual nodes could disappear and the whole thing would still carry on.
[03:23:45.620 --> 03:23:51.920]   DARPA designed this such that the Russians could take out Washington and they could still fight back from New York.
[03:23:51.920 --> 03:23:57.220]   That the entire communication infrastructure wouldn't disappear because there was no hub and spoke.
[03:23:57.220 --> 03:23:57.920]   It was a network.
[03:23:57.920 --> 03:24:01.540]   I always found that an immensely beautiful vision.
[03:24:01.540 --> 03:24:06.880]   That you could have this glorious internet and no single node was in control of everything.
[03:24:06.880 --> 03:24:14.180]   And we've returned to much more of a single node controlling everything idea with these hyperscalers.
[03:24:14.180 --> 03:24:22.300]   When U.S. East 1, the main and original region for AWS, goes offline, which has happened more than a few times over the years.
[03:24:22.300 --> 03:24:24.680]   Seemingly a third of the internet is offline.
[03:24:24.680 --> 03:24:28.300]   That in itself is just an insult to DARPA's design.
[03:24:28.300 --> 03:24:32.600]   It doesn't detract from the fact that what AWS built was marvelous.
[03:24:32.600 --> 03:24:40.560]   I think the cloud has moved so many things so far forward, especially around virtualization, automation, setup.
[03:24:40.740 --> 03:24:55.000]   It's all those giant leaps forward for system administration that's allowing us now to be able to run things on-prem in a way that smells and feels much like the cloud, just at half the cost or less.
[03:24:55.000 --> 03:24:59.180]   And with the autonomy and the satisfaction of owning hardware.
[03:24:59.180 --> 03:25:04.240]   I don't know what the last time you looked at like an actual server and took it apart and looked inside of.
[03:25:04.240 --> 03:25:05.600]   These things are gorgeous.
[03:25:06.260 --> 03:25:18.560]   I mean, I posted a couple of pictures of our racks out in the data center and people always go crazy for them because we've gotten so abstracted from what the underlying metal looks like in this cloud age that most people have no idea.
[03:25:18.560 --> 03:25:22.700]   They have no idea how powerful a modern CPU is.
[03:25:22.700 --> 03:25:28.260]   They have no idea how much RAM you can fit into a 1U rack.
[03:25:28.960 --> 03:25:38.520]   Progress in computing has been really exciting, especially, I'd say, in the last four to five years after TSMC, with Apple's help, really pushed the envelope.
[03:25:38.520 --> 03:25:43.880]   I mean, we kind of sat still there for a while while Intel was spinning their wheels going nowhere.
[03:25:43.880 --> 03:25:47.980]   And then TSMC, with Apple propelling them, really moved things forward.
[03:25:47.980 --> 03:25:49.960]   And now servers are exciting again.
[03:25:50.200 --> 03:25:56.800]   Like you're getting jumps year over year in the 15, 20 percent rather than the single digit we were stuck with for a while.
[03:25:56.800 --> 03:26:07.260]   And that all means that owning your own hardware is a more feasible proposition than it's ever been, that you need fewer machines to run ever more, and that more people should do it.
[03:26:07.260 --> 03:26:18.540]   Because as much as I love Jeff and Amazon, like he doesn't need another, whatever, 40 percent margin on all the tech stuff that I buy to run our business.
[03:26:18.540 --> 03:26:36.880]   And this is just something I've been focused on, both because of the ideology around honoring DARPA's original design, the practicality of running our own hardware, seeing how fast we can push things with the latest machines, and then saving the money.
[03:26:36.880 --> 03:26:43.760]   And that has all been so enjoyable to do, but also so counterintuitive for a lot of people.
[03:26:43.760 --> 03:26:57.020]   Because it seemed, I think, for a lot of people in the industry that like we'd all decided that we were done buying computers, that that was something we would just delegate to AWS and Azure and Google Cloud, that we didn't have to own these things anymore.
[03:26:57.020 --> 03:27:03.000]   So I think there's a little bit of whiplash for some people that, oh, I thought we agreed, we were done with that.
[03:27:03.000 --> 03:27:06.920]   And then along come us and say, ah, do you know what, maybe you should have a computer.
[03:27:06.920 --> 03:27:09.480]   Is there some pain points to running your own servers?
[03:27:09.480 --> 03:27:10.280]   Oh, plenty.
[03:27:10.280 --> 03:27:13.140]   There's pain points to operating computers of all kind.
[03:27:13.140 --> 03:27:16.700]   Have you tried just like using a personal computer these days?
[03:27:16.900 --> 03:27:21.820]   Half the time when my kids or my wife have a problem, I go like, have you tried turning it just off and on again?
[03:27:21.820 --> 03:27:24.740]   Computers are inherently painful to humans.
[03:27:24.740 --> 03:27:28.840]   Owning your own computer, though, kind of makes some of that pain worth it.
[03:27:28.840 --> 03:27:37.780]   There's a responsibility that comes with actually owning the hardware that, to me, at least make the burden of operating that hardware seem slightly more enjoyable.
[03:27:37.840 --> 03:27:42.680]   Now, there are things you have to learn, certainly at our scale, too.
[03:27:42.680 --> 03:27:45.460]   I mean, we're not just buying a single computer and plugging it into an Ethernet.
[03:27:45.460 --> 03:27:48.560]   We have to have racks and racks of them, and you've got to set it up with network cabling.
[03:27:48.560 --> 03:27:51.080]   And there is some specialized expertise in that.
[03:27:51.080 --> 03:27:55.780]   But it's not like that expertise is like building nuclear rockets.
[03:27:55.780 --> 03:27:58.080]   It's not like it's not widely distributed.
[03:27:58.080 --> 03:28:03.800]   Literally, the entire Internet was built on people knowing how to plug in a computer to the Internet, right?
[03:28:03.800 --> 03:28:05.440]   Oh, Ethernet cable goes here.
[03:28:05.440 --> 03:28:06.520]   Power cable goes here.
[03:28:06.520 --> 03:28:07.720]   Let's boot up Linux.
[03:28:08.140 --> 03:28:14.280]   That's how everyone put anything online until 10, 12 years ago when the cloud sort of took over.
[03:28:14.280 --> 03:28:16.760]   So the expertise is there and can be rediscovered.
[03:28:16.760 --> 03:28:19.660]   You, too, can learn how to operate a Linux computer.
[03:28:19.660 --> 03:28:26.040]   Yeah, and it's, you know, when you get a bunch of them, there's a bunch of flashing LEDs, and it's just so exciting.
[03:28:26.040 --> 03:28:26.240]   Oh, they're beautiful.
[03:28:26.240 --> 03:28:26.860]   Calming.
[03:28:26.860 --> 03:28:27.780]   Amazing.
[03:28:27.780 --> 03:28:29.260]   Computers are really fun.
[03:28:29.260 --> 03:28:33.140]   This is actually something I've gotten into even deeper after we moved out of the cloud.
[03:28:33.620 --> 03:28:41.000]   Now, my next kind of tingle is that if you can move out of the cloud, can you also move out of the data center?
[03:28:42.180 --> 03:28:56.500]   Personal servers have gotten really scarily quick and efficient, and personal Internet connections rival what we connected data centers with just a decade or two ago.
[03:28:56.740 --> 03:29:19.760]   So there's a whole community around this concept of home lapping, which is essentially installing server hardware in your own apartment, connecting it to the Internet, and exposing that directly to the Internet that harks back to those glorious days of the 90s when people building for the Internet would host the actual website on their actual computer in the closet.
[03:29:20.020 --> 03:29:22.300]   And I'm pretty fired up about that.
[03:29:22.300 --> 03:29:23.280]   I'm doing a bunch of experiments.
[03:29:23.280 --> 03:29:25.920]   I've ordered a bunch of home servers from my own apartment.
[03:29:25.920 --> 03:29:30.660]   I marvel at the fact that I can get a 5 gigabit fiber connection now.
[03:29:30.660 --> 03:29:31.780]   I think, do you know what?
[03:29:31.780 --> 03:29:32.520]   5 gigabit?
[03:29:32.520 --> 03:29:47.620]   That could have taken Basecamp to multiple millions of MRR in the way that back then I ran the whole business on a single box with 2004 technology and probably 100 megabit cable.
[03:29:47.620 --> 03:29:57.480]   Like, the capacity we have access to, both in terms of compute and connectivity, is something that people haven't readjusted to.
[03:29:57.480 --> 03:30:01.080]   And this happens sometimes in technology where progress sneaks up on you.
[03:30:01.080 --> 03:30:02.980]   This happened with SSDs.
[03:30:02.980 --> 03:30:04.080]   I love that, by the way.
[03:30:04.080 --> 03:30:14.860]   We designed so much of our technology and storage approach and database design around spinning metal disks that had certain seek-rate properties.
[03:30:15.040 --> 03:30:18.160]   And then we went to NVMe and SSDs.
[03:30:18.160 --> 03:30:24.980]   And it took quite a while for people to realize that the systems had to be built fundamentally different now.
[03:30:24.980 --> 03:30:34.540]   That the difference between memory and disk was now far smaller when you weren't spinning these metal plates around with a little head that had to read off them.
[03:30:34.540 --> 03:30:37.580]   You were essentially just dealing with another type of memory.
[03:30:37.580 --> 03:30:45.020]   I think we're a little bit in that same phase when it comes to the capacity of new businesses to be launched literally out of your damn bedroom.
[03:30:45.020 --> 03:30:49.720]   So you can get pretty far with a large user base with home labbing.
[03:30:49.720 --> 03:30:50.540]   Absolutely.
[03:30:50.540 --> 03:30:51.540]   That's exciting.
[03:30:51.540 --> 03:30:52.800]   That's like the old school.
[03:30:52.800 --> 03:30:54.180]   That's really exciting.
[03:30:54.180 --> 03:31:00.300]   It's bringing back the startup in the garage in the literal physical sense of the word.
[03:31:00.440 --> 03:31:03.520]   Now, some of that is, do we need to?
[03:31:03.520 --> 03:31:07.380]   You can get relatively cheap cloud capacity if you don't need very much.
[03:31:07.380 --> 03:31:08.620]   Hell yes, we need to.
[03:31:08.620 --> 03:31:15.960]   I mean, the feeling of doing that by yourself, of seeing LED lights in your own home.
[03:31:15.960 --> 03:31:17.320]   I mean, there's nothing like that.
[03:31:17.320 --> 03:31:21.440]   There's just an aesthetic to it that I am completely in love with and I want to try to push on.
[03:31:21.440 --> 03:31:23.780]   Now, is that going to be the same thing as getting out of the cloud?
[03:31:23.780 --> 03:31:24.300]   I'm not sure.
[03:31:24.400 --> 03:31:27.060]   Our exit out of the cloud was not the exit out of the data center.
[03:31:27.060 --> 03:31:34.080]   We basically just bought hardware, shipped it to a professionally managed data center that we didn't even actually touch.
[03:31:34.080 --> 03:31:36.580]   This is the other misconception people have about moving out of the cloud,
[03:31:36.580 --> 03:31:43.060]   that we have a bunch of people who are constantly driving to a data center somewhere to rack new boxes and change dead RAM.
[03:31:43.060 --> 03:31:45.580]   That's not how things happen in the modern world at all.
[03:31:45.580 --> 03:31:52.120]   We have a company called Summit, previously Deft, that is what we call white gloves.
[03:31:52.500 --> 03:32:00.360]   They just, they work in the data center when we need something like, hey, hey, Deft, can you go down and swap the debt SSD in box number six?
[03:32:00.360 --> 03:32:01.500]   They do it.
[03:32:01.500 --> 03:32:05.520]   And what we see is akin to what someone working with the cloud would see.
[03:32:05.520 --> 03:32:07.680]   You see IP addresses coming online.
[03:32:07.680 --> 03:32:09.040]   You see drives coming online.
[03:32:09.040 --> 03:32:14.640]   It's not that different, but it is a whole heck of a lot cheaper when you are operating at our scale.
[03:32:14.640 --> 03:32:16.160]   And of course it is.
[03:32:16.160 --> 03:32:22.280]   Of course it's cheaper to own things if you need those things for years rather than it is to rent it.
[03:32:22.280 --> 03:32:28.500]   In no other domain would we confuse those two things that it's cheaper to own for the long duration than it is to rent.
[03:32:28.500 --> 03:32:33.760]   There is some gray area like I've gotten a chance to interact with the XAI team a bunch.
[03:32:33.760 --> 03:32:38.780]   I'm probably going back out there in Memphis to do a big podcast associated with the Grok release.
[03:32:39.140 --> 03:32:52.300]   And those folks, in order to achieve the speed of building up the cluster and to solve some of the novel aspects that have to do with the GPU, with the training, they have to be a little bit more hands-on.
[03:32:52.300 --> 03:32:53.700]   It's a little less white glove.
[03:32:54.260 --> 03:32:55.260]   Oh, and I love that, right?
[03:32:55.260 --> 03:33:02.080]   They're dealing with a frontier problem and they're dealing with it not by renting a bunch of GPUs at a huge markup from their main competitor.
[03:33:02.080 --> 03:33:03.880]   They're going like, no, screw that.
[03:33:03.880 --> 03:33:07.820]   We're going to put 100,000 GPUs in our own tents, right?
[03:33:07.820 --> 03:33:09.720]   And build it in absolute record time.
[03:33:09.720 --> 03:33:19.360]   So I think, if anything, this is testament to the idea that owning hardware can give you an advantage, both at the small scale, at the medium scale, and at the pioneer levels of computing.
[03:33:19.360 --> 03:33:26.280]   By the way, you know, speaking of teams, those are XAI, Tesla are large companies.
[03:33:26.280 --> 03:33:31.200]   But all those folks, I don't know what it is about.
[03:33:31.200 --> 03:33:38.540]   You said Jeff is really good at finding good people, at seeing strength in people.
[03:33:38.540 --> 03:33:40.900]   Like, Elon is also extremely good.
[03:33:40.900 --> 03:33:41.800]   I don't know what that is.
[03:33:41.800 --> 03:33:45.140]   Actually, I've never actually seen, maybe you could speak to that.
[03:33:45.140 --> 03:33:48.280]   He's good at finding greatness.
[03:33:48.280 --> 03:33:50.800]   I don't think he's finding as much as he's attracting.
[03:33:50.800 --> 03:33:57.200]   He's attracting the talent because of the audaciousness of his goals and his mission.
[03:33:57.200 --> 03:33:59.600]   The clarity by which he states it.
[03:33:59.600 --> 03:34:03.240]   He doesn't have to go scour the earth to find the best people.
[03:34:03.240 --> 03:34:07.500]   The best people come to him because he is, talking about Elon here,
[03:34:07.740 --> 03:34:10.960]   one of the singular, most invigorating figures.
[03:34:10.960 --> 03:34:14.660]   In both the same order of the universe here, haters and lovers, right?
[03:34:14.660 --> 03:34:18.960]   Like, he's having such an impact at such a scale that, of course, he's got to have literally
[03:34:18.960 --> 03:34:23.600]   millions of people think he's the worst person in the world.
[03:34:23.600 --> 03:34:27.180]   And he's also going to have millions of people thinking he's the greatest gift to humanity.
[03:34:28.020 --> 03:34:29.700]   Depending on the day, I'm somewhere in between.
[03:34:29.700 --> 03:34:33.760]   But I'm more on the greatest gift to humanity end of the scale than I'm on the others end
[03:34:33.760 --> 03:34:34.240]   of the scale.
[03:34:34.240 --> 03:34:42.500]   And I think that really inspires people in a way that we've almost forgotten that that level
[03:34:42.500 --> 03:34:48.240]   of audacity is so rare that when we see it, we don't fully know how to analyze it.
[03:34:48.320 --> 03:34:51.480]   We think of Elon as finding great talent, and I'm sure he's also good at that.
[03:34:51.480 --> 03:34:57.600]   But I also think that this beacon of the mission, we're going to fucking Mars.
[03:34:57.600 --> 03:35:02.800]   We're going to transform transportation into using electricity.
[03:35:03.140 --> 03:35:05.960]   We're going to cover the earth in internet.
[03:35:05.960 --> 03:35:11.240]   It's so grand that there are days where I wake up and go like, what the fuck am I doing
[03:35:11.240 --> 03:35:12.200]   with these to-do lists?
[03:35:12.200 --> 03:35:16.500]   Like, Jesus, should I go sign up for something like that?
[03:35:16.500 --> 03:35:16.800]   Yeah.
[03:35:16.800 --> 03:35:24.180]   That sounds invigorating in a sense I can only imagine like a Viking back in 1050 going like,
[03:35:24.180 --> 03:35:25.400]   should we go to Normandy?
[03:35:25.400 --> 03:35:27.180]   You may die along the way.
[03:35:27.180 --> 03:35:30.560]   But oh boy, does that sound like a journey and an adventure?
[03:35:30.560 --> 03:35:31.660]   There's a few components.
[03:35:31.660 --> 03:35:37.260]   There's one, definitely, this bigger than life mission and really believing it.
[03:35:37.260 --> 03:35:41.080]   You know, every other sentence is about Mars, like really believing it.
[03:35:41.080 --> 03:35:44.840]   It doesn't really matter what, like anybody else, the criticism, anything.
[03:35:44.840 --> 03:35:48.860]   There's a very singular, focused, big mission.
[03:35:48.860 --> 03:35:54.980]   But I think it also has to do with a bunch of the other components, like being able to hire
[03:35:54.980 --> 03:35:58.220]   well once the people, once the beacon attracts.
[03:35:58.940 --> 03:36:04.760]   And I've just seen people that don't necessarily on paper have a resume with a track record.
[03:36:04.760 --> 03:36:10.260]   I've seen really, who now turned out to be like legendary people.
[03:36:10.260 --> 03:36:17.180]   He basically like tosses them the ball of leadership, see something in them and says like, you go and
[03:36:17.180 --> 03:36:19.540]   gives them the ownership and they run with it.
[03:36:19.580 --> 03:36:23.180]   And that happens at every scale, that there's a real meritocracy.
[03:36:23.180 --> 03:36:36.320]   And like there's something, there's just like, you can see the flourishing of human intellect in these meetings, in these group getting together, where they're like, the energy is palpable.
[03:36:37.060 --> 03:36:54.600]   It's like exciting for me to just be around that because I don't, there's not many companies I've seen that in because when a company becomes successful and larger, it somehow suffocates that energy that I guess you see in startups at the early stages.
[03:36:54.800 --> 03:37:00.580]   But like, it's cool to see it at a large company that's actually able to achieve scale.
[03:37:00.580 --> 03:37:01.540]   You know?
[03:37:01.780 --> 03:37:07.160]   I think part of the secret there is that Elon actually knows things.
[03:37:07.160 --> 03:37:11.940]   And when you know things, you can evaluate the quality of work products.
[03:37:11.940 --> 03:37:19.060]   And when you can evaluate the quality of work products, you can very quickly tell who's full of shit and who will actually take you to Mars.
[03:37:19.060 --> 03:37:23.120]   And you can fire the people who's full of shit and you can bet on the people who'll get us to Mars.
[03:37:24.260 --> 03:37:32.140]   That capacity to directly evaluate the competency of individuals is actually a little bit rare.
[03:37:32.140 --> 03:37:37.040]   It's not widely distributed amongst managers, hiring managers.
[03:37:37.040 --> 03:37:45.320]   It's not something you can easily delegate to people who are not very skilled at the work itself.
[03:37:45.320 --> 03:37:48.400]   And Elon obviously knows a lot about a lot.
[03:37:48.400 --> 03:37:51.640]   And he can smell who knows stuff for real.
[03:37:51.820 --> 03:37:59.760]   And this is, at our tiny scale, something I've tried to do in the same order, where when we hire programmers, for example,
[03:37:59.760 --> 03:38:03.380]   it's going to be interesting now with AI as a new challenge.
[03:38:03.380 --> 03:38:11.660]   But up until this point, the main pivot point for getting hired was not your resume, was not the schooling you've had,
[03:38:11.660 --> 03:38:13.820]   was not your grades, was not your pedigree.
[03:38:13.820 --> 03:38:17.220]   It was how well you did on two things.
[03:38:17.720 --> 03:38:22.380]   A, your cover letter, because I can only work with people remotely if they're good writers.
[03:38:22.380 --> 03:38:29.580]   So if you can't pen a proper cover letter and can't bother to put in the effort to write it specifically for us, you're out.
[03:38:29.580 --> 03:38:37.140]   Two, you have to be able to program really well to the degree that I can look at your code and go like, yeah, I want to work with that person.
[03:38:37.140 --> 03:38:43.960]   Not only I want to work with that person, I want to work on that person's code when I have to see it again in five years to fix some damn bug.
[03:38:44.160 --> 03:38:50.640]   So we're going to give you a programming test that simulates the way we work for real, and we're going to see how you do.
[03:38:50.640 --> 03:38:56.500]   And I've been surprised time and again where I thought for sure this candidate is a shoo-in.
[03:38:56.500 --> 03:38:57.960]   They sound just right.
[03:38:57.960 --> 03:38:59.340]   The CV is just right.
[03:38:59.340 --> 03:39:01.880]   And then you see the code getting churned in.
[03:39:01.880 --> 03:39:02.800]   I'm like, no way.
[03:39:02.800 --> 03:39:05.240]   No way are we hiring this person.
[03:39:05.700 --> 03:39:07.920]   And the other way has been true as well.
[03:39:07.920 --> 03:39:11.700]   I've gone like, I don't know about this guy or this woman.
[03:39:11.700 --> 03:39:13.480]   I don't know.
[03:39:13.480 --> 03:39:14.980]   And then they turn in their code stuff.
[03:39:14.980 --> 03:39:19.140]   And I'm like, holy shit, can that person be on my team tomorrow, preferably?
[03:39:19.140 --> 03:39:23.720]   The capacity to evaluate a work product is a superpower when it comes to hiring.
[03:39:23.720 --> 03:39:30.820]   There's a step that I've seen Elon do really well, which is be able to show up and say, this can be done simpler.
[03:39:31.120 --> 03:39:31.480]   Yes.
[03:39:31.480 --> 03:39:33.220]   But he knows what he's talking about.
[03:39:33.220 --> 03:39:41.620]   And then the engineer, because Elon knows enough, the engineer's first reaction, you can kind of tell.
[03:39:41.620 --> 03:39:46.240]   It's almost like rolling your eyes if your parent tells you something.
[03:39:46.240 --> 03:39:46.640]   Yes.
[03:39:46.640 --> 03:39:50.600]   This is not, no, I've been working on this for a month.
[03:39:50.600 --> 03:39:56.640]   But then when you have that conversation a little more, you realize, no, it can be done simpler.
[03:39:56.640 --> 03:39:57.640]   Find the way.
[03:39:58.200 --> 03:40:03.100]   So there's a good, when two engineers are talking, one might not have perfect information.
[03:40:03.100 --> 03:40:13.860]   But if the senior engineer has like good instinct, that's like been battle earned, then you can say simplify.
[03:40:13.860 --> 03:40:17.260]   And it actually will result in simplification.
[03:40:17.260 --> 03:40:32.340]   And I think this is the hallmark of the true greats, that they not only have the insight into what's required to do the work, but they also have the transcendent vision to go beyond what the engineer would do.
[03:40:32.340 --> 03:40:41.320]   I think if we're looking at these rarities, obviously the myth of Steve Jobs was also this.
[03:40:41.320 --> 03:40:54.920]   Even though perhaps he was less technical than Elon is in many ways, he had the same capacity to show up to a product team and really challenge them to look harder for the simplification or for making things greater.
[03:40:54.920 --> 03:41:00.180]   In a way that would garner disbelief from the people who are supposed to do it.
[03:41:00.180 --> 03:41:01.340]   Like, this guy is full of shit.
[03:41:01.340 --> 03:41:02.240]   Like, this is crazy.
[03:41:02.240 --> 03:41:03.040]   We can never.
[03:41:03.040 --> 03:41:05.120]   And then two months later, it is.
[03:41:05.120 --> 03:41:10.080]   So there is something of this where you need, you need the vision.
[03:41:10.080 --> 03:41:19.960]   You need it anchored by the reality of knowing enough about what's possible, knowing enough about physics, knowing enough about software that you're not just building bullshit.
[03:41:19.960 --> 03:41:23.800]   There are plenty of people who can tell a group of engineers, no, just do it faster.
[03:41:23.800 --> 03:41:24.840]   Like, that's not a scam.
[03:41:24.840 --> 03:41:27.680]   It's got to be anchored in something real.
[03:41:27.680 --> 03:41:39.220]   But it's also got to be anchored in, it's a tired word, but a passion for the outcome to a degree where you get personally insulted if a bad job is done.
[03:41:39.220 --> 03:41:42.400]   This is what I've been writing about lately with Apple.
[03:41:42.400 --> 03:41:54.760]   They've lost that asshole who would show up and tell engineers that what they did was not good enough in ways that would actually perhaps make them feel a little small in the moment.
[03:41:54.760 --> 03:42:00.200]   But would spark that zest to really fix it.
[03:42:00.200 --> 03:42:09.000]   Now they have a logistics person who's very good at sourcing components and lining up production Gantt charts.
[03:42:09.760 --> 03:42:12.100]   But you're not getting that magic.
[03:42:12.100 --> 03:42:21.760]   Now, what's interesting with that whole scenario was I actually thought how well Tim Cook ran things and has run things at Apple for so long that maybe we were wrong.
[03:42:21.760 --> 03:42:27.320]   Maybe we were wrong about the criticality of Steve Jobs to the whole mission.
[03:42:27.680 --> 03:42:29.320]   Maybe you could get away with not having it.
[03:42:29.320 --> 03:42:33.380]   I think the bill was just going to come later and now it has.
[03:42:33.380 --> 03:42:44.120]   Apple is failing in all these ways that someone who would blow up Steve's ghost and really exalt him would say like, see, this is what's happening now.
[03:42:44.120 --> 03:42:56.860]   So the other thing here, too, of course, is it's impossible to divorce like your perception of what's a critical component of the system and the messy reality of a million different moving parts in the reality of life.
[03:42:56.860 --> 03:43:01.380]   And you should be skeptical about your own analysis and your own thesis at all time.
[03:43:01.380 --> 03:43:08.000]   Since you mentioned Apple, have to ask somebody on the Internet submitted the question.
[03:43:08.000 --> 03:43:12.100]   Does DHH still hate Apple?
[03:43:12.100 --> 03:43:13.360]   I believe the question is.
[03:43:14.460 --> 03:43:22.140]   So there was a time when Basecamp went to war with Apple over the 30 percent.
[03:43:22.140 --> 03:43:24.840]   What's can you tell the saga of that battle?
[03:43:24.840 --> 03:43:26.080]   Yes.
[03:43:26.080 --> 03:43:42.580]   But first, I'll tell you I fell in love with Apple, which was all the way back in also early 2000s when Microsoft was dominating the industry in a way we now see Apple and Google dominate mobile phones.
[03:43:42.800 --> 03:43:45.640]   Microsoft was just everything when it came to personal computers.
[03:43:45.640 --> 03:43:48.560]   And I really did not like the Microsoft of the 90s.
[03:43:48.560 --> 03:44:02.700]   The Microsoft of the 90s was the cutoff, the air supply to Netscape kind of characters, was the Bill Gates sitting defiant in an interview with the DOJ asking about what the definition of what is.
[03:44:02.700 --> 03:44:06.480]   And just overall unpleasant, I think.
[03:44:06.480 --> 03:44:09.980]   You can have respect for what was achieved, but I certainly didn't like it.
[03:44:10.180 --> 03:44:17.280]   And as we've talked about, I came begrudgingly to the PC after Commodore fell apart and I couldn't continue to use the Amiga.
[03:44:17.280 --> 03:44:23.700]   So I already had a bit of a bone to pick with PCs just over the fact that I love my Amiga so much.
[03:44:23.700 --> 03:44:32.760]   But then in the early 2000s, Apple emerged as a credible alternative because they bet the new generation of Macs on Unix underpinnings.
[03:44:32.760 --> 03:44:36.980]   And that allowed me to escape from Microsoft.
[03:44:36.980 --> 03:44:40.800]   And suddenly I became one of the biggest boosters of Apple.
[03:44:41.040 --> 03:44:45.840]   I was in my graduating class at the Copenhagen Business School.
[03:44:45.840 --> 03:44:50.960]   I started with the first white iBook, first person using Mac.
[03:44:50.960 --> 03:45:03.640]   And by the time we were done and graduating, I had basically converted half the class to using Apple computers because I would evangelize them so hard and demonstrate them and do all the things that a super fan would do.
[03:45:03.640 --> 03:45:17.300]   And I continued that work over many years, Jason and I actually, in I think 2004, 2005, did an ad for Apple that they posted on the developer side where we were all about Apple is so integral to everything that we do.
[03:45:17.300 --> 03:45:20.140]   And we look up to them and we are inspired by them.
[03:45:20.320 --> 03:45:25.160]   And that love relationship actually continued for a very long time.
[03:45:25.160 --> 03:45:29.320]   I basically just became a Mac person for 20 years.
[03:45:29.320 --> 03:45:32.420]   I didn't even care about looking at PCs.
[03:45:32.420 --> 03:45:42.360]   It seemed irrelevant to me, whatever Microsoft was doing, which felt like such a relief because in the 90s, I felt like I couldn't escape Microsoft and suddenly I had found my escape.
[03:45:42.360 --> 03:45:44.360]   And now I was with Apple and it was glorious.
[03:45:44.360 --> 03:45:48.500]   And they shared so many of my sensibilities and my aesthetics and they kept pushing the envelope.
[03:45:48.640 --> 03:45:51.740]   And there was so much to be proud of, so much to look up to.
[03:45:51.740 --> 03:45:59.740]   And then that sort of started to change with the iPhone, which is weird because the iPhone is what made modern Apple.
[03:45:59.740 --> 03:46:13.960]   It's what I lined up in 2007 together with Jason for five hours to stand in the line to buy a first generation product where Apple staff would clap at you when you walked out of the store.
[03:46:13.960 --> 03:46:14.980]   I don't know if you remember that.
[03:46:14.980 --> 03:46:18.500]   It was a whole ceremony and it was part of that.
[03:46:18.500 --> 03:46:22.240]   Myth and mystique and awe of Apple.
[03:46:22.240 --> 03:46:25.640]   So I just I wasn't in the market for other computers.
[03:46:25.640 --> 03:46:27.280]   I wasn't in the market for other computer ideas.
[03:46:27.280 --> 03:46:30.520]   I thought perhaps I'd be with the Mac until the end of days.
[03:46:31.200 --> 03:46:44.500]   But as Apple discovered the goldmine it is to operate a toll booth where you don't have to innovate, where you don't actually have to make anything, where you can just take 30 percent of other people's business.
[03:46:44.940 --> 03:46:54.280]   There was a lot that's crept in to the foundation of Apple, and that started all the way back from the initial launch of the app store.
[03:46:54.800 --> 03:47:02.680]   But I don't think we saw at the time I didn't see at the time just how critical the mobile phone would become to computing in general.
[03:47:03.100 --> 03:47:06.120]   I thought when the iPhone came out that like, oh, it's like a mobile phone.
[03:47:06.120 --> 03:47:08.220]   I've had a mobile phone since the early 90s.
[03:47:08.220 --> 03:47:09.800]   Well, it wasn't a mobile phone.
[03:47:09.800 --> 03:47:10.800]   It was a mobile computer.
[03:47:10.800 --> 03:47:23.660]   And even more than that, it was the most important computer or it would become the most important computer for most people around the world, which meant that if you like to make software and wanted to sell it to people, you had to go through that computer.
[03:47:24.180 --> 03:47:39.720]   And if going through that computer meant going through Apple's toll booth and not just having to ask them permission, which in and of itself was just an indignity when you're used to the Internet, where you don't have to ask anyone permission about anything.
[03:47:39.720 --> 03:47:44.940]   You buy a domain and you launch a business and if customers show up, boom, you're a success.
[03:47:44.940 --> 03:47:46.800]   And if they don't, well, you're a failure.
[03:47:46.800 --> 03:47:51.760]   Now, suddenly, before you could even launch, you'd have to ask Apple for permission.
[03:47:51.760 --> 03:47:53.760]   That always sat wrong with me.
[03:47:54.060 --> 03:48:04.680]   But it wasn't until we launched Hay in 2001 that I saw the full extent of the rot that has snugged into Apple's Apple.
[03:48:04.680 --> 03:48:14.060]   For people who don't know and will talk about it, Hay is this amazing email sort of attempt to solve the email problem.
[03:48:14.060 --> 03:48:14.800]   Yes.
[03:48:14.800 --> 03:48:22.380]   I like to pitch it as what Gmail would have been with 20 years of lessons applied in a way where they could actually ship.
[03:48:22.980 --> 03:48:25.500]   Gmail was incredible when it launched in 2004.
[03:48:25.500 --> 03:48:31.760]   And it still is a great product, but it's also trapped in its initial success.
[03:48:31.760 --> 03:48:34.200]   You can't redesign Gmail today.
[03:48:34.200 --> 03:48:35.760]   It just has way too many users.
[03:48:35.760 --> 03:48:40.240]   So if you want fresh thinking on email, I wanted fresh thinking on email.
[03:48:40.240 --> 03:48:44.100]   I needed to build my own email system and not just my own email client.
[03:48:44.100 --> 03:48:45.880]   That's what a lot of people have done over the years.
[03:48:45.880 --> 03:48:47.060]   They build a client for Gmail.
[03:48:47.060 --> 03:48:52.420]   But you're severely constrained if you don't control the email server as well.
[03:48:52.420 --> 03:48:56.660]   If you really want to move the ball forward with email, you have to control both the server and the client.
[03:48:56.900 --> 03:49:00.040]   And that was the audacious mission we set out to do with Hay.
[03:49:00.040 --> 03:49:02.280]   And that was what's funny.
[03:49:02.280 --> 03:49:05.500]   I thought our main obstacle here would be Gmail.
[03:49:05.500 --> 03:49:08.740]   It's the 800-pound gorilla in the email space.
[03:49:08.740 --> 03:49:13.700]   Something like 70% of all email in the U.S. is sent through Gmail.
[03:49:13.900 --> 03:49:16.940]   I think their world rates are probably in that neighborhood as well.
[03:49:16.940 --> 03:49:19.660]   They're just absolutely huge.
[03:49:19.660 --> 03:49:34.220]   And trying to attack an enormous established competitor like that, who's so actually still loved by plenty of people and is free, seems like a suicide mission.
[03:49:34.220 --> 03:49:42.040]   And it was only a mission we signed up for because we had grown ambitious enough after making Basecamp for 20 years that we thought we could tackle that problem.
[03:49:42.040 --> 03:49:45.080]   So I thought, hey, this is dumb.
[03:49:45.080 --> 03:49:49.480]   I would not advise anyone to go head-to-head with Gmail.
[03:49:49.480 --> 03:49:51.380]   That seems like a suicide mission.
[03:49:51.380 --> 03:49:54.860]   We're going to try anyway because, you know what, if we fail, it's going to be fine.
[03:49:54.860 --> 03:50:02.420]   We're just going to build a better email experience for me and Jason and the people at the company and our cat, and that'll be okay because we can afford to do so.
[03:50:02.820 --> 03:50:12.180]   But when we got ready to launch, after spending two years building this product, millions of dollars in investment to it, we obviously needed mobile apps.
[03:50:12.420 --> 03:50:18.220]   You're not going to be a serious contender with email if you're not on a mobile phone and you need to be there with a native client.
[03:50:18.220 --> 03:50:21.880]   So we had built a great native client for both iOS and for Android.
[03:50:21.880 --> 03:50:31.480]   And as we were getting ready to launch, we submitted both of them to the app stores, got both of them approved on, I think, Friday afternoon for the iOS app.
[03:50:31.760 --> 03:50:35.860]   And we then went live on Monday and we were so excited.
[03:50:35.860 --> 03:50:39.100]   Hey, world, we've been working on this new thing.
[03:50:39.100 --> 03:50:40.940]   I'd love for you to check it out.
[03:50:40.940 --> 03:50:44.520]   And of course, as with anything, when you launch a new product, there are some bugs.
[03:50:44.520 --> 03:50:49.280]   So we quickly found a few in the iOS client and submitted a new build to Apple.
[03:50:49.280 --> 03:50:50.820]   Hey, here's our bug fixes.
[03:50:50.820 --> 03:50:51.620]   Can you please update?
[03:50:51.620 --> 03:50:55.060]   And that's when all the help broke loose.
[03:50:55.060 --> 03:51:00.960]   Not only were they not going to approve our update, they said, oh, wait a minute.
[03:51:01.280 --> 03:51:04.740]   We gave you permission to be in the app store, but I'm sorry, that was a mistake.
[03:51:04.740 --> 03:51:12.500]   We see that you're not using our in-app payment system, which means that we don't get 30% of your business.
[03:51:12.500 --> 03:51:15.980]   You will have to rectify that or you can't be in the app store.
[03:51:15.980 --> 03:51:19.540]   At first, I thought, like, well, it got approved already.
[03:51:19.540 --> 03:51:24.340]   We're running on the same model we've run Basecamp on in the app store for a decade.
[03:51:24.340 --> 03:51:30.960]   If you're not signing up through the app and we're signing up our own customers on our own website and they're just going to the app store.
[03:51:30.960 --> 03:51:33.820]   to download their companion app, we're going to be fine.
[03:51:33.820 --> 03:51:35.680]   That was the truth, right?
[03:51:35.680 --> 03:51:41.800]   That was why I never got so fired up about the app store, even as Apple started tightening the screws, was like my business was okay.
[03:51:41.800 --> 03:51:44.120]   Now, suddenly, my business wasn't okay.
[03:51:44.540 --> 03:51:54.000]   Apple was willing to destroy hay if we did not agree to give them 30% of all the signups that came through the iOS app.
[03:51:54.000 --> 03:51:56.600]   And it wasn't just about the 30%.
[03:51:56.600 --> 03:52:02.240]   It was also about splitting and not longer having a direct relationship with our customers.
[03:52:02.240 --> 03:52:06.440]   When you sell an app in the app store, you're not selling an app to a customer.
[03:52:06.440 --> 03:52:09.820]   You're selling an app to inventory at Apple.
[03:52:09.820 --> 03:52:12.520]   And then Apple sells an app to that customer.
[03:52:12.520 --> 03:52:15.460]   That customer has a purchasing relationship with Apple.
[03:52:15.460 --> 03:52:20.940]   So if you want to give discounts or refunds or whatever, it's complete hell.
[03:52:20.940 --> 03:52:25.960]   If you want to easily support multi-platform, that's complete hell.
[03:52:25.960 --> 03:52:33.920]   If someone signs up for hay on their iPhone and they want to switch to Android, but that billing relationship, it's tied to Apple, it's complete hell.
[03:52:33.920 --> 03:52:38.000]   For a million reasons, I did not want to hand my business over to Apple.
[03:52:38.000 --> 03:52:40.980]   I did not want to hand 30% of our revenue over to Apple.
[03:52:40.980 --> 03:52:45.880]   So we decided to do something that seemingly Apple had never heard before.
[03:52:45.880 --> 03:52:50.500]   We said, no, we're not going to add the in-app payment.
[03:52:50.500 --> 03:52:54.040]   I don't care if you're threatening us.
[03:52:54.040 --> 03:52:54.980]   This is not fair.
[03:52:54.980 --> 03:52:55.940]   This is not reasonable.
[03:52:55.940 --> 03:52:59.220]   Please approve.
[03:52:59.220 --> 03:53:01.100]   And of course, they didn't.
[03:53:01.100 --> 03:53:01.960]   And it escalated.
[03:53:02.280 --> 03:53:05.460]   And after a couple of days, we realized, you know what?
[03:53:05.460 --> 03:53:06.620]   This isn't a mistake.
[03:53:06.620 --> 03:53:07.960]   This isn't going away.
[03:53:07.960 --> 03:53:11.320]   We're going to be dead if they go through with this.
[03:53:11.320 --> 03:53:16.960]   If we're not going to yield and give them the 30%, they're going to kick us off.
[03:53:16.960 --> 03:53:24.620]   Unless we make such a racket, such noise that they will regret it.
[03:53:24.620 --> 03:53:26.280]   And that's exactly what then happened.
[03:53:26.280 --> 03:53:31.960]   We were blessed by the fact that we launched Hay one week before the WWDC.
[03:53:31.960 --> 03:53:43.120]   Their worldwide developer conference, where Apple loves to get up on stage and harp on how much they do for developers, how much they love them, and why you should bill for their new devices, and so on and so forth.
[03:53:43.880 --> 03:53:51.660]   And then we also just happened to have a platform on the internet, which is very convenient when you need to go to war with a $3 trillion company.
[03:53:51.660 --> 03:54:04.660]   So I started kicking and screaming and essentially turning it up to 11 in terms of the fight and going public with our denial to be in the app store.
[03:54:05.040 --> 03:54:16.160]   And that turned into a prolonged two-week battle with Apple that essentially ended in the best possible outcome we could have gotten as David fighting Goliath, which was a bit of a truce.
[03:54:16.620 --> 03:54:28.420]   We wouldn't hand 30% over to Apple, they wouldn't kick us out of the app store, but we had to build some bullshit dummy accounts such that the app did something when you downloaded it.
[03:54:28.420 --> 03:54:38.900]   That was a rule that Phil Schiller seemingly made up on the fly when pressed for the fifth time by the media about why we couldn't be in the app store when a million other companion apps could.
[03:54:38.900 --> 03:54:47.920]   But we just happened to be able to create so much pain and noise for Apple that it was easier for them to just let us be than to keep on fighting.
[03:54:47.920 --> 03:54:53.380]   What do you think about Tim Sweeney's victory with Epic over Apple?
[03:54:53.380 --> 03:55:03.620]   I think it is incredible and the entire developer ecosystem, not just on iOS, but on Android as well.
[03:55:03.620 --> 03:55:22.540]   We owe Epic, Tim Sweeney, and Mark Rain an enormous debt of gratitude for taking on the only battle that has ever inflicted a serious wound on Apple in this entire sordid campaign of monopoly enforcement, and that is Epic's fight versus them.
[03:55:22.540 --> 03:55:32.320]   Tim recently revealed that it has cost well over $100 million in legal fees to carry on this battle against Apple.
[03:55:32.780 --> 03:55:37.300]   We, for a hot moment, considered suing Apple when they were threatening to kick us out.
[03:55:37.300 --> 03:55:44.220]   We shopped the case around with a few law firms, and perhaps, of course, they would tell us, you have a good case.
[03:55:44.220 --> 03:55:46.580]   I mean, they're trying to sell a product here.
[03:55:46.580 --> 03:55:54.180]   But they would also tell us it's going to cost a minimum of $10 million, and it's going to take five to seven years through all the appeals.
[03:55:54.180 --> 03:55:58.360]   Now, we now learned the actual price tag was 10 times higher, right?
[03:55:58.360 --> 03:55:59.880]   Epic spent over $100 million.
[03:56:00.400 --> 03:56:04.400]   It would have destroyed us to take on Apple in the legal realm.
[03:56:04.400 --> 03:56:06.860]   Only a company like Epic could do it.
[03:56:06.860 --> 03:56:17.080]   And only a company run by founders like Tim, like Mark, could risk the business in the way that they did.
[03:56:17.080 --> 03:56:22.160]   The audacity they had to provoke the fight in the first place, which I thought was just incredible.
[03:56:22.160 --> 03:56:24.820]   And to stick with it for the long term.
[03:56:24.820 --> 03:56:30.140]   No board would have signed off on this lawsuit to a professional CEO.
[03:56:30.140 --> 03:56:31.840]   No freaking way.
[03:56:32.300 --> 03:56:39.520]   So the fact that they've been able to beat Apple in also the most hilarious way possible, I think it's just incredible.
[03:56:39.520 --> 03:56:45.240]   Because remember, their first victory in the case was actually not much of a victory.
[03:56:45.240 --> 03:56:48.440]   There were about 11 counts in the trial.
[03:56:49.100 --> 03:57:03.600]   Apple basically won 10 of them, and the judge awarded Epic this one little win that Apple couldn't tell them not to link out to the internet to be able to do the payment processing.
[03:57:03.600 --> 03:57:05.340]   So they won this one little thing.
[03:57:05.340 --> 03:57:18.760]   And Apple, instead of just taking the 10 out of 11 wins and going, fine, you can have your little links, but all these other rules stay in place, decided to essentially commit criminal contempt of court.
[03:57:18.760 --> 03:57:21.680]   As they've now been referred to for prosecution.
[03:57:21.680 --> 03:57:41.640]   And angered the judge to such a degree that the rule of law in the U.S. now is that you can launch an app in the App Store and you don't have to use in-app payment, but you can have a direct billing relationship with a customer if you just link out to the open internet when you take the credit card and then hop back into the app.
[03:57:41.640 --> 03:57:44.780]   And we owe all of that to Tim and Mark.
[03:57:44.780 --> 03:57:46.380]   We owe all of that to Epic.
[03:57:46.840 --> 03:57:49.200]   We're going to launch new apps any minute now.
[03:57:49.200 --> 03:58:03.520]   I hope actually next week to take advantage of this, that revamp the HeyApps just that people who download the HeyApp off the Apple App Store can sign up in the app and can then use the web to put in their credit card.
[03:58:03.520 --> 03:58:04.920]   So we don't have to pay 30 percent.
[03:58:04.920 --> 03:58:12.920]   We have a direct billing relationship and such that they can take that subscription to Android, to PCs, whatever, without any hassle.
[03:58:13.240 --> 03:58:15.660]   And we have Tim and Mark to thank for it.
[03:58:15.660 --> 03:58:30.980]   Yeah, Tim, I mean, like you said, founders, but also specific kind of founders, because I think maybe you can educate me on this, but Tim is somebody who maintains to this day sort of the unreasonableness of principles.
[03:58:31.980 --> 03:58:32.280]   That's what I love.
[03:58:32.280 --> 03:58:32.960]   That's what I love.
[03:58:32.960 --> 03:58:36.460]   I think sometimes maybe even with founders, you can get worn down.
[03:58:36.460 --> 03:58:37.620]   It's a large company.
[03:58:37.620 --> 03:58:37.900]   Yes.
[03:58:37.900 --> 03:58:43.840]   There's a lot of smart quote unquote people around you, lawyers, and just whispering in your ear over time.
[03:58:43.840 --> 03:58:47.060]   And you're like, well, just be reasonable being, you know, this is a different thing.
[03:58:47.860 --> 03:58:55.820]   To be the sort of maintain, I mean, Steve Jobs did this, maintain, still are the asshole.
[03:58:55.820 --> 03:58:56.720]   Yes.
[03:58:56.720 --> 03:59:02.140]   Who says, no, this whole company, I'll sink this whole fucking company over this.
[03:59:02.280 --> 03:59:07.200]   That's the exact language basically I used in our original campaign.
[03:59:07.200 --> 03:59:12.020]   I will burn this business down before I hand over 30% of it to Apple.
[03:59:12.760 --> 03:59:21.760]   And that sort of indignation, that actual rage is something I try to be a little careful about tapping into because it is a little bit of a volatile compound.
[03:59:21.760 --> 03:59:24.000]   Because, I mean, I have a bunch of employees.
[03:59:24.000 --> 03:59:25.580]   We have a bunch of customers.
[03:59:25.580 --> 03:59:35.700]   It would be pretty sad if the journey of 37 signals after 25 years would come to an end because Apple would burn us down or I would burn the business down over this fight with Apple.
[03:59:36.140 --> 03:59:41.140]   But I think you also need that level of conviction to be able to even drive day-to-day decisions.
[03:59:41.140 --> 03:59:46.960]   One of the other Apple examples, I know I'm racking on Apple a little bit here, and I don't actually hate them.
[03:59:46.960 --> 03:59:47.960]   I really don't.
[03:59:47.960 --> 03:59:57.660]   I am tremendously disappointed at the squandered relationship that did not need to be sold away for so little.
[03:59:57.660 --> 04:00:02.100]   Now, I understand that the App Store toll booth is actually a pretty big business.
[04:00:02.100 --> 04:00:03.420]   It's multiple billions.
[04:00:03.420 --> 04:00:05.620]   But Apple is a trillion-dollar company.
[04:00:05.620 --> 04:00:10.440]   And I think in the lens of history, this is going to come off as a tremendous mistake.
[04:00:10.440 --> 04:00:12.980]   And I think it's already coming off as a tremendous mistake.
[04:00:12.980 --> 04:00:19.440]   The flop that was the Vision Pro was partly because Apple had pissed off every other developer.
[04:00:19.440 --> 04:00:27.500]   No one was eager to come build the kind of experiences for their new hardware that would perhaps have made it a success.
[04:00:28.040 --> 04:00:37.320]   So when you're on top and you have all the cards, you can dilute yourself into thinking that you can dictate all terms at all times and there are no long-term consequences.
[04:00:37.320 --> 04:00:44.700]   Apple is learning, finally, the fact that there are long-term consequences and that developers actually are important to Apple's business.
[04:00:44.860 --> 04:00:46.980]   And the relationship is not entirely one-sided.
[04:00:46.980 --> 04:00:51.040]   We don't owe our existence to Apple and Apple alone.
[04:00:51.040 --> 04:00:52.880]   We've built our own customer bases.
[04:00:52.880 --> 04:00:56.020]   Apple has been beneficial to the industry.
[04:00:56.020 --> 04:00:57.940]   I'm glad the iPhone exists.
[04:00:57.940 --> 04:01:03.200]   It's not that it doesn't go both ways, but Apple wants it only one way.
[04:01:03.720 --> 04:01:06.580]   And I think that is a mistake.
[04:01:06.580 --> 04:01:09.440]   And it's a mistake that was avoidable.
[04:01:09.440 --> 04:01:12.440]   And A, that's disappointing.
[04:01:12.440 --> 04:01:13.960]   Certainly disappointing for me.
[04:01:13.960 --> 04:01:16.800]   I've literally spent 20 years evangelizing this shit, right?
[04:01:16.800 --> 04:01:24.940]   I've spent so much money buying Apple hardware, excusing a bunch of things they've done over the years.
[04:01:24.940 --> 04:01:27.360]   And then for what?
[04:01:28.580 --> 04:01:36.640]   For the fact that you wanted 30% of something that I created in the most unreasonable way possible, couldn't we have found a better way to do this?
[04:01:36.640 --> 04:01:39.820]   I think they're going to get forced to do a better way.
[04:01:39.820 --> 04:01:47.640]   But did you also have to go through the indignity of having a criminal contempt charge against you, getting referred to prosecution?
[04:01:47.640 --> 04:02:01.200]   It just seems so beneath Apple, but it also seems so in line with what happens to huge companies who are run by, quote unquote, professional managers rather than founders and unreasonable people.
[04:02:01.200 --> 04:02:08.540]   Well, we should probably also say that the thing you love about Apple, the great spirit of Apple, I think, still persists.
[04:02:09.200 --> 04:02:16.080]   And there's a case to be made that this 30% of things, a slice, a particular slice of a company, not a defining aspect of the company.
[04:02:16.080 --> 04:02:22.580]   And that Apple is still on top in the hardware that it makes and a lot of things that it makes.
[04:02:22.580 --> 04:02:33.680]   And, you know, this is, that could be just a hiccup in a long story of a great company that does a lot of awesome stuff for humanity.
[04:02:33.680 --> 04:02:39.640]   So like Apple is a truly special company, we mentioned Amazon, there's no company like Apple.
[04:02:39.640 --> 04:02:40.460]   I agree.
[04:02:40.460 --> 04:02:56.880]   This is why the disappointment is all greater because we had such high aspirations and expectations to Apple that they were the shining city on the hill and they were guiding the industry in a million positive ways.
[04:02:56.880 --> 04:03:13.280]   I think, as we talked about earlier, hardware is exciting again, in large part because Apple bought PA Semi and pursued a against all odds mission to get ARM up to the level it is today.
[04:03:13.280 --> 04:03:16.040]   And we have these incredible M chips now because of it.
[04:03:16.580 --> 04:03:23.360]   And the design sensibilities that Apple bring to the table are unparalleled.
[04:03:23.360 --> 04:03:34.300]   No one has taste, certainly at the hardware level, like Apple does, even at the software level, I'd say there's a lot of taste left in Apple, but there's also some real sour taste now.
[04:03:34.300 --> 04:03:38.340]   So they have to wash that off first, I think, before they find their wear back.
[04:03:38.660 --> 04:03:41.360]   But Apple's been in a mirage before.
[04:03:41.360 --> 04:03:47.560]   I mean, Wozniak and Steve Jobs started this thing in the garage, has great success with the Apple II.
[04:03:47.560 --> 04:03:53.880]   He hands the company over to a sugar drink salesman who tanks the company into the 90s.
[04:03:53.880 --> 04:04:13.080]   He doesn't learn the lesson, spends the next 20 years building up this amazing company, then hands the company over again to a logistics person who presumably had more redeeming qualities than the first guy who put in charge, but still ends up leading the company astray.
[04:04:13.080 --> 04:04:15.920]   Now, this is the norm.
[04:04:15.920 --> 04:04:19.120]   The norm is the great companies don't last forever.
[04:04:19.960 --> 04:04:23.620]   In the long arc of history, almost no company lasts forever.
[04:04:23.620 --> 04:04:35.860]   There are very few companies around that was here 100 years ago, even fewer 200 years ago, and virtually nothing that are 1,000 years old outside of a handful of Japanese sword makers or something like that, right?
[04:04:35.860 --> 04:04:43.100]   So you can get deluded into thinking that something is forever when you're in the moment and they seem so large.
[04:04:43.100 --> 04:04:48.880]   Apple could absolutely stumble, and I think they have more reason to stumble now than ever.
[04:04:49.220 --> 04:04:51.620]   They're behind on AI, terribly behind.
[04:04:51.620 --> 04:04:56.160]   Their software quality is faltering in a bunch of ways.
[04:04:56.160 --> 04:05:10.320]   The competition is catching up on the hardware game, in part because TSMC is not an Apple subsidiary, but a foundry that services AMD and NVIDIA and others who are now able to use the same kind of advanced processes.
[04:05:10.320 --> 04:05:20.220]   This is something I learned after not looking at PC hardware for the longest time that, holy smokes, AMD actually makes CPUs that are just as fast, if not faster than Apple's.
[04:05:20.220 --> 04:05:26.860]   They're not quite as efficient yet because ARM has some fundamental efficiencies over x86, but they're still pretty good.
[04:05:27.100 --> 04:05:30.620]   So Apple should have reason to worry.
[04:05:30.620 --> 04:05:40.060]   Apple's shareholders should have reason to be concerned, not just about all these stumbles, but also by the fact that Apple is run by old people.
[04:05:40.940 --> 04:05:44.680]   Apple's board has an average age of, I think, 75.
[04:05:44.680 --> 04:05:47.760]   Their entire executive team is above 60.
[04:05:48.280 --> 04:05:51.920]   Now, that sounds horribly ageist.
[04:05:51.920 --> 04:05:54.320]   And in some ways, it a little bit is.
[04:05:54.320 --> 04:05:56.840]   In the same way, I'm ageist against myself.
[04:05:56.840 --> 04:05:58.320]   Like, I'm 45 now.
[04:05:58.680 --> 04:06:06.120]   And I sort of kind of have to force myself to really get into AI because it is such a paradigm shift.
[04:06:06.120 --> 04:06:10.620]   And a lot of people, when they reach a certain age, are just happy to stay with what they know.
[04:06:10.620 --> 04:06:12.440]   They don't want to go back to being a beginner.
[04:06:12.440 --> 04:06:15.140]   They don't want to go back to having to relearn everything.
[04:06:15.140 --> 04:06:18.640]   And I think like, this is a little hard for me at 45.
[04:06:18.640 --> 04:06:20.760]   How the hell do you do that at 75?
[04:06:20.760 --> 04:06:23.560]   I have to come back to it.
[04:06:23.560 --> 04:06:24.540]   You mentioned it earlier.
[04:06:24.540 --> 04:06:26.460]   You're a parent.
[04:06:27.140 --> 04:06:31.880]   Can you speak to the impact that becoming a father has had on your life?
[04:06:31.880 --> 04:06:37.260]   I think what's funny about fatherhood is that, for me, I wasn't even sure it's something I wanted.
[04:06:37.260 --> 04:06:49.660]   It took meeting the right woman and letting her convince me that this was the right idea before we even got started.
[04:06:49.660 --> 04:06:56.660]   I didn't have starting my own family on the list of priorities in my late 20s or even early 30s.
[04:06:56.660 --> 04:07:06.340]   It was really the impetus of meeting my wife, Jamie, and her telling me, this is what I want.
[04:07:06.340 --> 04:07:08.660]   I want to have a family.
[04:07:08.660 --> 04:07:09.740]   I want to get married.
[04:07:09.740 --> 04:07:10.980]   I want to have kids.
[04:07:11.300 --> 04:07:12.240]   I want to have three.
[04:07:12.240 --> 04:07:17.960]   And me going for a second, like, whoa, whoa, whoa.
[04:07:17.960 --> 04:07:22.700]   And then, all right, let's do it.
[04:07:23.700 --> 04:07:36.480]   And I think that's the kind of happy accident where some parts of my life have been very driven, where I knew exactly what I wanted and how to push forward to it and what the payoff was going to be.
[04:07:37.620 --> 04:07:47.920]   But when it comes to having a family, that always felt like a very fuzzy, abstract idea that, sure, someday, maybe.
[04:07:48.660 --> 04:07:53.580]   And then it became very concrete because I met a woman who knew what she wanted.
[04:07:53.580 --> 04:08:02.460]   And looking back on it now, it almost seems crazy.
[04:08:02.460 --> 04:08:23.440]   Like, there's this fork in the road of reality where if that hadn't happened and I had been sitting here now not being a father, not having a family, the level of regret, knowing what I know now about the joys of having that family would have been existential.
[04:08:24.480 --> 04:08:28.880]   That would have been, I don't know if they would have been devastating.
[04:08:28.880 --> 04:08:35.100]   I think men have a little bit of a longer window to pursue these things than women do.
[04:08:35.100 --> 04:08:37.500]   There are just certain biological facts.
[04:08:37.500 --> 04:08:52.480]   But ending up with the family I have now, ending up with my three boys, have been just a transformative experience in the sense that here's something that turned out to be the most important thing.
[04:08:53.300 --> 04:08:59.280]   And it was an open secret, not even an open secret, it was an open truth through all of history.
[04:08:59.280 --> 04:09:04.340]   You listen to anyone who's ever had children, they will all say my children are the most important to me.
[04:09:04.340 --> 04:09:09.240]   Yet somehow that wisdom couldn't sink in until you were in the situation yourself.
[04:09:09.240 --> 04:09:11.680]   I find those truths fascinating.
[04:09:11.680 --> 04:09:19.680]   When you can't actually relay them with words, I can tell you, hey, Lex, what are you doing?
[04:09:19.680 --> 04:09:23.280]   Get a wife, make some kids, get a move on it.
[04:09:23.960 --> 04:09:24.980]   And these are just words.
[04:09:24.980 --> 04:09:29.180]   They're not communicating the gravity of what it actually feels to go through the experience.
[04:09:29.180 --> 04:09:32.760]   And you can't really learn it without going through it.
[04:09:32.760 --> 04:09:35.360]   Now, of course, you can be influenced and whatever.
[04:09:35.360 --> 04:09:40.560]   We can all help contribute and little sparks and little seeds can grow in your mind about it.
[04:09:40.560 --> 04:09:41.480]   But it still has to happen.
[04:09:44.440 --> 04:09:55.820]   Now that I am in this situation and just the sheer joy on a daily basis where you think your level of life satisfaction is on a scale of one to 10.
[04:09:55.820 --> 04:10:06.360]   And then the satisfaction of seeing your children understand something, accomplish something, learn something, do something, just be.
[04:10:06.360 --> 04:10:10.440]   Just goes like, oh, my God, the scale doesn't go from one to 10.
[04:10:10.440 --> 04:10:11.980]   It goes from one to 100.
[04:10:12.420 --> 04:10:16.760]   And I've been playing down here in the one to 10 range all this time.
[04:10:16.760 --> 04:10:19.260]   And there's a there's a one to 100.
[04:10:20.600 --> 04:10:24.040]   That has been humbling in a way that.
[04:10:24.040 --> 04:10:35.060]   Is impactful in and of itself, this whole idea that I thought I had a fair understanding of like the boundaries of life in my early 30s.
[04:10:35.060 --> 04:10:36.000]   Like, what is this about?
[04:10:36.000 --> 04:10:38.900]   I mean, I've been on this earth long enough now here to know something.
[04:10:38.900 --> 04:10:40.580]   And I don't know.
[04:10:40.580 --> 04:10:41.640]   I did not know.
[04:10:41.640 --> 04:10:45.780]   I did not know that the scale was much, much broader.
[04:10:45.780 --> 04:11:00.700]   And I've often talked about the joys of having kids and just seeing your own DNA, which is remarkable to me because literally that's been the pursuit of humans since the dawn of time.
[04:11:00.700 --> 04:11:11.340]   I am here today because, whatever, 30,000 years ago, some Neanderthal had the same realization that I should procreate and I should continue my bloodline.
[04:11:11.340 --> 04:11:14.960]   And that all amounts to me sitting here here now.
[04:11:15.120 --> 04:11:21.220]   But it didn't become a practical reality to me before meeting the right woman.
[04:11:21.220 --> 04:11:32.560]   And I think that that's sometimes not part of the conversation enough that there's something broken at the moment about how people pair up in the Western world.
[04:11:32.840 --> 04:11:48.740]   And it's at the source of why we're not having enough children, because there's not enough couples, there's not enough marriage, there's not a lot of these, there's not enough of all these traditional values that even 50, 60, 70 years ago was just taken for granted.
[04:11:49.060 --> 04:11:53.720]   We're in this grand experiment of what happens if we just remove a bunch of institutions.
[04:11:53.720 --> 04:11:55.420]   What happens if we just remove a bunch of institutions?
[04:11:55.420 --> 04:12:01.880]   What happens if we no longer value marriage as something to aspire to?
[04:12:01.880 --> 04:12:11.420]   What happens if parenthood is now seen in some camps as almost something like weird or against your own self-expression?
[04:12:11.480 --> 04:12:17.320]   It's a grand experiment that I'm kind of curious how it turns out.
[04:12:17.520 --> 04:12:20.360]   I'd prefer to watch it as a movie like The Children of Men.
[04:12:20.360 --> 04:12:21.400]   I'm like, that was a good show.
[04:12:21.400 --> 04:12:23.420]   I kind of wish that wasn't reality.
[04:12:23.420 --> 04:12:25.400]   But we're seeing that reality play out.
[04:12:25.400 --> 04:12:37.420]   While I'm sitting here in a very traditional two-parent-loving household with three children and going, this is now at the top.
[04:12:37.960 --> 04:12:39.420]   I've done a lot of things in my life.
[04:12:39.420 --> 04:12:41.940]   I've built software.
[04:12:41.940 --> 04:12:42.820]   I've built companies.
[04:12:42.820 --> 04:12:43.740]   I've raced cars.
[04:12:43.740 --> 04:12:45.040]   I've done all sorts of things.
[04:12:45.040 --> 04:12:49.520]   And I would trade all of it in a heartbeat for my kids.
[04:12:49.520 --> 04:12:52.580]   That's just a really fascinating human experience.
[04:12:52.580 --> 04:12:59.680]   That the depth of that bond is something you can't appreciate before you have it.
[04:13:00.200 --> 04:13:10.980]   But I also think there is a role to play to talk it up because we're being bombarded constantly with reasons why not to.
[04:13:10.980 --> 04:13:12.480]   Oh, it's too expensive.
[04:13:12.480 --> 04:13:16.820]   Well, you could get divorced and then you might lose half.
[04:13:17.120 --> 04:13:24.700]   There's all these voices constantly articulating the case against marriage, the case against having children.
[04:13:24.700 --> 04:13:35.580]   That those of us who've chosen to do the traditional thing, to get married and to have children, have an obligation to kind of talk it up a little bit.
[04:13:35.580 --> 04:13:42.220]   Which would have seen ridiculous, again, 50 years ago that you'd have to talk up something so fundamental of that.
[04:13:42.220 --> 04:13:48.460]   But I have become kind of obligated in that sense to do just that.
[04:13:48.460 --> 04:13:49.360]   To talk it up.
[04:13:49.360 --> 04:13:50.880]   To say, you know what?
[04:13:50.880 --> 04:13:53.020]   You can look at everything that I've done.
[04:13:53.020 --> 04:14:03.680]   And if you like some of those parts, realize that to me, in this situation, the kids, the family, the wife is more important than all of it.
[04:14:03.680 --> 04:14:07.000]   And it sounds like a cliche because you've heard it a thousand times before.
[04:14:07.140 --> 04:14:12.800]   And by becoming a cliche, maybe you start believing it's not true, that it's just something people say.
[04:14:12.800 --> 04:14:15.820]   But it is reality.
[04:14:15.820 --> 04:14:23.200]   I know almost no parents that I have personal relationships with that don't consider their children to be the most important thing in their life.
[04:14:23.460 --> 04:14:25.420]   So there's a lot of interesting things you said.
[04:14:25.420 --> 04:14:41.520]   So one, it does seem to be, I know a lot of parents, perhaps more interestingly, I know a lot of super successful people who are parents who really love their kids.
[04:14:41.900 --> 04:14:45.480]   And who say that the kids even help them to be more successful.
[04:14:45.480 --> 04:14:54.940]   Now, the interesting thing, speaking to what you're saying, is it does seem for us humans, it's easier to articulate the negatives.
[04:14:54.940 --> 04:15:00.360]   Because they're sort of concrete, pragmatic, you know, it costs more, it takes some time.
[04:15:00.360 --> 04:15:03.620]   You know, they could be crying all over the place.
[04:15:03.620 --> 04:15:06.980]   They're, you know, tiny narcissists running around or whatever.
[04:15:06.980 --> 04:15:07.740]   Which is all true.
[04:15:07.900 --> 04:15:09.680]   Yeah, pooping everywhere, that kind of stuff.
[04:15:09.680 --> 04:15:19.700]   But to articulate the thing you were speaking to, there's this little creature that you love more than anything you've ever loved in your life.
[04:15:19.700 --> 04:15:22.080]   It's hard to convert that into words.
[04:15:22.080 --> 04:15:23.260]   You have to really experience it.
[04:15:23.260 --> 04:15:39.060]   But I believe it, and I want to experience that, but I believe, because just from a scientific method, have seen a lot of people who are not, honestly, not very capable of love, fall completely in love with their kids.
[04:15:39.060 --> 04:15:39.360]   Yes.
[04:15:39.560 --> 04:15:45.920]   Like, you know, very sort of, let's just call it what it is, engineers that are very, like, beep, boop, bop.
[04:15:45.920 --> 04:15:46.660]   Yes.
[04:15:46.660 --> 04:15:48.320]   They just fall in love.
[04:15:48.320 --> 04:15:57.820]   And it's like, all right, people who, just like you said, they don't really want, they don't really care or don't really think about having kids, that kind of stuff.
[04:15:58.040 --> 04:15:59.640]   Once they do, it changes everything.
[04:15:59.640 --> 04:16:02.960]   So, you know, but it's hard to convert into words.
[04:16:02.960 --> 04:16:08.380]   One of the reasons that I think it's also difficult is, I mean, I like kids.
[04:16:08.380 --> 04:16:10.340]   Not that I actively dislike them.
[04:16:11.360 --> 04:16:15.920]   But when I was around other people's kids, I didn't have a emotional reaction.
[04:16:15.920 --> 04:16:17.280]   Some women have, right?
[04:16:17.280 --> 04:16:21.540]   They see a baby and they go, ah, I never had any emotion of that.
[04:16:21.540 --> 04:16:24.000]   I mean, I could appreciate, I'm glad for you that you have children.
[04:16:24.000 --> 04:16:25.660]   It did not provoke anything in me.
[04:16:25.660 --> 04:16:32.300]   The emotions that are provoked in me when I look at my own children, this doesn't exist in the same universe.
[04:16:32.300 --> 04:16:39.300]   So you don't have something, you don't have a complete parallel, or at least a lot of men, or at least me, I didn't have sort of a framework to put it into.
[04:16:39.300 --> 04:16:41.280]   What would it be like to have my own child?
[04:16:41.280 --> 04:16:47.440]   And then you experience that you just, it's like the, and it happens so quickly, too.
[04:16:47.440 --> 04:16:49.080]   This is what I found fascinating.
[04:16:49.080 --> 04:16:55.260]   It happens before that little human is even able to return any words to you.
[04:16:55.260 --> 04:17:00.860]   That the love you develop to an infant happens quite quickly.
[04:17:00.860 --> 04:17:03.100]   Not necessarily immediately.
[04:17:03.100 --> 04:17:03.820]   I don't know.
[04:17:03.820 --> 04:17:05.240]   Different people have different experiences.
[04:17:05.240 --> 04:17:07.940]   But it took me a little bit.
[04:17:08.120 --> 04:17:11.640]   But then once it hit, it just hit like kick of a horse.
[04:17:11.640 --> 04:17:20.480]   And I love that it's also just such a universal experience that you can be the most successful person in the world.
[04:17:20.480 --> 04:17:21.980]   You can be the poorest person in the world.
[04:17:21.980 --> 04:17:23.120]   You can be somewhere in the middle.
[04:17:23.520 --> 04:17:32.000]   And we share this experience that being a parent, for most of them, turns out to be the most important thing in their life.
[04:17:32.800 --> 04:17:37.460]   But, you know, it is really nice to do that kind of experience with the right partner.
[04:17:37.460 --> 04:17:43.160]   But I think because I'm such an empath, the cost of having the wrong partner is high for me.
[04:17:43.480 --> 04:17:51.640]   But then I also like realize, man, I have a friend of mine who's divorced happily and he still loves the shit out of his kids.
[04:17:51.640 --> 04:17:52.420]   And it's still beautiful.
[04:17:52.420 --> 04:17:53.000]   It's a mess.
[04:17:53.000 --> 04:17:56.000]   But there's all of that love is still there.
[04:17:56.400 --> 04:17:58.540]   And it's, you know, you just have to make it work.
[04:17:58.540 --> 04:18:02.400]   It's just that, I don't know, that kind of like divorce would destroy me.
[04:18:02.740 --> 04:18:04.900]   You should listen to The School of Life.
[04:18:04.900 --> 04:18:08.540]   He has this great bit on YouTube.
[04:18:08.540 --> 04:18:10.280]   You'll marry the wrong person.
[04:18:10.280 --> 04:18:19.060]   If you accept up front that you will marry the wrong person, that every potential person you can marry is going to be the wrong person in some dimension.
[04:18:19.060 --> 04:18:20.580]   They're going to annoy you.
[04:18:20.580 --> 04:18:24.540]   They're going to be not what you hoped in certain dimensions.
[04:18:24.960 --> 04:18:34.060]   The romantic ideal that everything is just perfect all the time is not very conducive to the reality of hitching up and making babies.
[04:18:34.060 --> 04:18:50.700]   Because I think as you just accounted, even when it turns to shit, I find that most of the people I personally know where things have fallen apart and have turned to shit, never in a million years would they go like, I regret it.
[04:18:51.000 --> 04:18:56.200]   I would rather my children did not exist because a relationship turned sour.
[04:18:56.200 --> 04:18:58.760]   I mean, I think you should try very hard.
[04:18:58.760 --> 04:19:04.180]   And I think this is also one of those things where we didn't fully understand those fences.
[04:19:04.180 --> 04:19:11.700]   And when we pulled them up and celebrated how easy it is to get divorced, for example, that that wasn't going to have some negative consequences.
[04:19:11.700 --> 04:19:13.600]   I'm not saying you shouldn't have divorces.
[04:19:13.600 --> 04:19:16.920]   I'm not saying return to times past.
[04:19:16.920 --> 04:19:31.360]   I'm saying, though, that civilization over thousands of years developed certain technologies for ensuring the continuation of its own institutions and its own life that perhaps we didn't fully appreciate.
[04:19:31.360 --> 04:19:40.680]   I mean, again, this is something Jordan Peterson and others are far more articulate to speak about and that I've learned a lot to just analyze my own situation.
[04:19:40.920 --> 04:19:52.200]   Why is it that this incredible burden it is to be responsible for someone else's life that you brought into this world is also the most rewarding part of existence?
[04:19:52.200 --> 04:19:53.820]   That's just curious.
[04:19:53.820 --> 04:20:05.300]   Before I heard Peterson articulate the value of taking on the greatest burden you know how to carry, I always thought about burdens as a negative things.
[04:20:05.520 --> 04:20:07.940]   Why would I want the burden of a child?
[04:20:07.940 --> 04:20:09.440]   I might screw it up.
[04:20:09.440 --> 04:20:10.820]   I might be a bad parent.
[04:20:10.820 --> 04:20:12.700]   They might have bad outcomes.
[04:20:12.700 --> 04:20:14.000]   All this stuff, right?
[04:20:14.000 --> 04:20:16.040]   All the reasons why you shouldn't.
[04:20:16.040 --> 04:20:20.340]   And so few voices articulating why you should.
[04:20:20.340 --> 04:20:21.360]   Yeah.
[04:20:21.360 --> 04:20:27.460]   But I should also add on top of that thing you mentioned currently, perhaps in the West, the matchmaking process.
[04:20:27.460 --> 04:20:28.880]   It's broken.
[04:20:28.880 --> 04:20:30.680]   It's broken and technology made it worse.
[04:20:30.680 --> 04:20:31.560]   It's fascinating.
[04:20:31.560 --> 04:20:34.800]   This whole thing that that hasn't been solved.
[04:20:34.800 --> 04:20:43.740]   So hiring great teams, that's probably been solved the best out of matchmaking, finding great people to hire.
[04:20:43.740 --> 04:20:44.100]   Right.
[04:20:44.100 --> 04:20:46.920]   Second, finding great friends.
[04:20:46.920 --> 04:20:49.600]   That's like, that's also hasn't been solved.
[04:20:49.600 --> 04:20:50.700]   And it's breaking down.
[04:20:50.700 --> 04:20:51.520]   It's breaking down.
[04:20:51.520 --> 04:20:53.840]   And third is matchmaking for like relationships.
[04:20:53.840 --> 04:20:55.380]   That's like the worst.
[04:20:55.380 --> 04:20:57.700]   And in fact, technology made it even worse.
[04:20:57.700 --> 04:20:58.220]   Yes.
[04:20:58.220 --> 04:20:59.020]   It's fascinating.
[04:20:59.020 --> 04:20:59.820]   It is.
[04:20:59.820 --> 04:21:06.240]   It's a great example, again, of how all the greatest intentions still led us straight to hell.
[04:21:06.240 --> 04:21:18.380]   I really enjoy Louise Perry's analysis of the sexual revolution not being an unqualified good, which was something I hadn't thought about at all before she articulated it.
[04:21:18.380 --> 04:21:26.660]   That, of course, women should be able to have freedom and self-determination and abortions and all of these things.
[04:21:26.660 --> 04:21:30.560]   And Louise Perry is not arguing against that either, of course.
[04:21:30.560 --> 04:21:38.580]   But there are second order effects that we don't appreciate at the time and we may not have ready-made solutions for.
[04:21:38.580 --> 04:21:39.800]   And that's just interesting.
[04:21:39.800 --> 04:21:43.260]   You make life better in a million different ways.
[04:21:43.260 --> 04:21:45.280]   And somehow we end up more miserable.
[04:21:45.280 --> 04:21:46.480]   Why is that?
[04:21:46.480 --> 04:21:52.500]   Why is it that humans find meaning in hardship?
[04:21:53.320 --> 04:22:01.960]   And I think some of that is that it's a difficult question to answer through science.
[04:22:01.960 --> 04:22:13.100]   And again, Peterson articulates well this idea that you have to find some of it through art, some of it through authors, some of it through different...
[04:22:13.100 --> 04:22:19.420]   I was just about to say modes of knowing before I stopped myself because that sounds like woo bullshit.
[04:22:19.420 --> 04:22:32.720]   But there are different ways to acquire those deep lessons that sort of paper is not going to tell you.
[04:22:32.720 --> 04:22:39.020]   I mean, this is really the point also applies to religion, for example.
[04:22:39.020 --> 04:22:44.760]   If you remove from society the softer religion, you better have a good replacement.
[04:22:44.760 --> 04:22:49.620]   And we've had a bunch of bad replacements, especially over the last few decades.
[04:22:49.620 --> 04:22:54.280]   Religion is one of those things I've struggled with a lot because I'm not religious.
[04:22:55.080 --> 04:22:56.620]   But I sort of wish I was.
[04:22:56.620 --> 04:23:11.100]   I can now fully appreciate the enormous value having an operating system like that brings, not just at the individual level, but rather at a societal level.
[04:23:11.100 --> 04:23:13.560]   And it's not clear at all what the answer is.
[04:23:13.560 --> 04:23:28.320]   I think we've tried a lot of dead ends when it came to replacements and people have been filling that void in a million different ways that seem worse than all the religions, despite their faults in a myriad of ways, have been able to deliver.
[04:23:28.320 --> 04:23:29.120]   Yeah.
[04:23:29.120 --> 04:23:32.180]   Religion is like the cobalt code.
[04:23:32.180 --> 04:23:33.220]   It's just...
[04:23:33.220 --> 04:23:33.400]   Yes.
[04:23:33.400 --> 04:23:39.840]   It's the institutions where we don't fully understand the rules and why they're there and what's going to happen if we remove them.
[04:23:40.000 --> 04:23:44.840]   Some of them, it seems obvious to me, are just bullshit of the time.
[04:23:44.840 --> 04:23:50.460]   Oh, you should need whatever shellfish because in that region of the world there was something, something, something.
[04:23:50.460 --> 04:23:51.040]   Okay, fine.
[04:23:51.040 --> 04:23:57.360]   But there's a bunch of other things that are pivotal to keeping society functioning for the long term.
[04:23:57.360 --> 04:23:59.800]   And we don't fully understand which is which.
[04:23:59.800 --> 04:24:03.640]   What's the bullshit and what's the load-bearing pillars of society?
[04:24:03.640 --> 04:24:08.360]   Can you speak to the hit on productivity that kids have?
[04:24:09.200 --> 04:24:13.200]   Did they increase your productivity, decrease it, or is that even the wrong question to ask?
[04:24:13.200 --> 04:24:19.040]   I think it's one of the reasons why ambitious people are often afraid of having children because they think,
[04:24:19.040 --> 04:24:22.100]   I have so much more to do and I barely have enough time now.
[04:24:22.100 --> 04:24:29.220]   How would I possibly be able to accomplish the things I want to accomplish if I add another human into the mix?
[04:24:29.900 --> 04:24:37.340]   Now, A, we've always worked 40 hours a week, not 80 or 100 or 120.
[04:24:37.340 --> 04:24:38.660]   I think that's very beneficial.
[04:24:38.660 --> 04:24:45.880]   B, kids don't exist in this vacuum of just them alone being entered into your life.
[04:24:46.040 --> 04:24:47.040]   Hopefully, there's a partner.
[04:24:47.040 --> 04:25:02.260]   And in my life, I'm married to a wonderful woman who decided to stop working her corporate job when we got together and have been able to carry a huge part of that responsibility.
[04:25:02.760 --> 04:25:10.380]   I was just about to say burden, and I think that's exactly how it often gets presented, especially from a feminist perspective,
[04:25:10.380 --> 04:25:25.140]   that caring for your own children is some sort of unpaid labor that has to be compensated for in some specific way beyond the compensation of what bringing life into this world,
[04:25:25.540 --> 04:25:38.200]   raising wonderful humans, there's something screwy about that analysis that I actually think the modern trad movement is a reply against.
[04:25:38.200 --> 04:25:53.140]   Whether they have all the answers, I'm certainly not sure of either, but there's something that's just not right in the analysis that children are a burden and that if a woman chooses to stay at home with the kids,
[04:25:53.140 --> 04:25:59.760]   I think that's just that that some sort of failure mode of feminist ambition, I think that's actually a complete dead end.
[04:25:59.760 --> 04:26:02.940]   Now, depends on different people, different circumstances.
[04:26:02.940 --> 04:26:17.320]   I can just speak to my life, being married to a wonderful woman who have decided to be home with the kids, at least at their early age, and taking on a lot of those responsibilities.
[04:26:17.420 --> 04:26:29.940]   Now, it doesn't mean there isn't plenty of ways that I have to be part of that and have to chip in, but it's allowed me to continue to work the 40 hours a week that I've always worked.
[04:26:29.940 --> 04:26:32.460]   But it's made the 40 hours more strict.
[04:26:32.980 --> 04:26:41.220]   I have a schedule where I wake up, whatever, 6.30, and we have to get out of the door a little before eight.
[04:26:41.220 --> 04:26:47.880]   I usually have to play at least one or two rounds of Fortnite with my youngest, sometimes middle child.
[04:26:48.380 --> 04:26:59.440]   Then take the kids to school, get in, start work at, I don't know, 8.30, 9.00, then work until 5.30, sometimes 6.00, but then it's dinner.
[04:27:00.360 --> 04:27:03.040]   And I have to be there for that, and then I have to read to the kids.
[04:27:03.040 --> 04:27:06.600]   And by the time that's done, I don't want to go back to work.
[04:27:06.600 --> 04:27:14.380]   So my work time really is 9.00 to 5.00, 9.00 to 6.00, depending of whatever is going on.
[04:27:14.380 --> 04:27:16.340]   Sometimes there's emergencies, and you have to attend to them.
[04:27:16.340 --> 04:27:17.820]   But it's made it more structured.
[04:27:18.560 --> 04:27:25.900]   And I found some benefit in that, and I found some productivity in that, that I can't goof around quite as much.
[04:27:25.900 --> 04:27:29.620]   That the day will end at around 5.36.
[04:27:29.620 --> 04:27:34.840]   That's just, if I didn't accomplish what I wanted to do today, if I get to that time, it's done.
[04:27:34.840 --> 04:27:35.340]   I'm over.
[04:27:35.340 --> 04:27:38.140]   I have to try again tomorrow.
[04:27:38.140 --> 04:27:44.740]   Whereas before having a family and before having kids, I could just not do it and just make it up in the evening.
[04:27:44.740 --> 04:27:48.060]   So in that way, it's made me more structured.
[04:27:48.060 --> 04:27:51.120]   But it hasn't really changed my volume of work all that much.
[04:27:51.120 --> 04:27:53.220]   I still work about the same amount of hours.
[04:27:53.220 --> 04:27:54.500]   And that's, by the way, enough.
[04:27:54.500 --> 04:28:02.740]   This is one of the key points we make in It Doesn't Have to Be Crazy at Work, the latest book we wrote, is that there's enough time.
[04:28:02.740 --> 04:28:06.880]   40 hours a week is actually a ton if you don't piss it away.
[04:28:06.880 --> 04:28:08.680]   Most people do piss it away.
[04:28:08.680 --> 04:28:09.960]   They piss it away in meetings.
[04:28:09.960 --> 04:28:13.120]   They piss it away on just stuff that doesn't matter.
[04:28:14.620 --> 04:28:25.960]   Even three hours, four hours of concentrated, uninterrupted time every day would move the goals they truly care about way down the field.
[04:28:25.960 --> 04:28:31.440]   I think kids do make you more productive in that way for people who need it, especially people like me.
[04:28:32.000 --> 04:28:33.280]   They create their urgency.
[04:28:33.280 --> 04:28:50.020]   If you have to be done by five, it's maybe a counterintuitive notion, but for people like me who like to work, you can really fill the day with fluff of work.
[04:28:50.540 --> 04:28:59.580]   And if you have to be done by five, you're going to have to do the deep work and get it done, like really focused, singular work.
[04:28:59.580 --> 04:29:00.040]   Yes.
[04:29:00.040 --> 04:29:02.440]   And then you're just going to cut off all the bullshit.
[04:29:02.440 --> 04:29:03.640]   It keeps you honest.
[04:29:03.640 --> 04:29:07.800]   Because you can squander one day, you can squander two days.
[04:29:07.800 --> 04:29:11.840]   But if I squander a whole week, I feel terrible.
[04:29:12.580 --> 04:29:23.340]   Now, that's just some drive I have in me where I feel content and full of meaning if I actually do stuff that matters, if I can look back upon the week and go like, that was a nice week.
[04:29:23.340 --> 04:29:24.480]   Really, we moved forward.
[04:29:24.480 --> 04:29:27.060]   Maybe we didn't get done, but we moved forward and everything got better.
[04:29:28.200 --> 04:29:31.780]   And I think it's really helped just time box things in that way.
[04:29:31.780 --> 04:29:42.360]   And a lot of people need that because I find just so much of the celebration of overwork to be so tiresome.
[04:29:42.360 --> 04:29:46.520]   Oh, I work 60 hours or 80 hours, 100 hours a week.
[04:29:46.520 --> 04:29:48.960]   And just like, first of all, no, you don't.
[04:29:48.960 --> 04:29:50.420]   No, you don't.
[04:29:50.420 --> 04:30:02.180]   Like, those 80 hours are full of all sorts of fluff that you label work, but that I would laugh at and that most people laugh at, that you would laugh at if you actually did the analysis of where is that time going.
[04:30:02.180 --> 04:30:10.540]   Most of the important stuff that has to be done is done in these uninterrupted chunks of two hours here or four hours there or five hours there.
[04:30:10.540 --> 04:30:13.560]   The hard part is making sure you get them in the whole piece.
[04:30:13.560 --> 04:30:17.260]   So don't give me that.
[04:30:17.260 --> 04:30:18.040]   There's time enough.
[04:30:18.040 --> 04:30:25.000]   And also, what's so important that it ranks above continuing your lineage?
[04:30:25.000 --> 04:30:37.620]   I think there's just some ancient honor in the fact that, again, this DNA that's sitting on this chair traveled 30,000 years to get here.
[04:30:37.620 --> 04:30:40.980]   And you're going to squander all that away just so you can send a few more emails?
[04:30:41.480 --> 04:30:49.140]   There is something that's also hard to convert into words of just the kind of fun you can have just playing with your kids.
[04:30:49.320 --> 04:30:54.860]   I don't know what that, on the surface, it's like, I could have that kind of fun just playing video games by myself.
[04:30:54.860 --> 04:30:57.780]   But no, it's like, there's something magical about it, right?
[04:30:57.780 --> 04:31:04.240]   I have a thousand hours logged in Fortnite since 19, I think.
[04:31:05.940 --> 04:31:07.140]   All of it with my kids.
[04:31:07.140 --> 04:31:08.840]   I'd never be playing Fortnite.
[04:31:08.840 --> 04:31:10.420]   Well, I don't know if I never would be.
[04:31:10.420 --> 04:31:13.700]   I wouldn't be playing a thousand hours of Fortnite if it wasn't for my kids.
[04:31:13.700 --> 04:31:19.160]   The enjoyment for me is to do something with them that I also happen to enjoy.
[04:31:19.160 --> 04:31:20.260]   I really love Fortnite.
[04:31:20.260 --> 04:31:22.200]   It's a phenomenal game.
[04:31:22.200 --> 04:31:24.660]   I don't have to force myself to play that with them.
[04:31:24.740 --> 04:31:27.360]   I often ask, like, hey, do you want to play Fortnite?
[04:31:27.360 --> 04:31:31.320]   But still, it's an activity that I get to share with them.
[04:31:31.320 --> 04:31:33.080]   It's a passion that I get to share with them.
[04:31:33.080 --> 04:31:35.980]   I've started doing go-karting with my oldest.
[04:31:35.980 --> 04:31:39.660]   I've been driving race cars for a long time, and now they're getting into go-karting.
[04:31:39.660 --> 04:31:45.820]   And just being at the go-kart track, seeing them going around, seeing them get faster, seeing them learn that skill.
[04:31:47.020 --> 04:31:51.020]   You just go look at, like, what else would I be doing with my life?
[04:31:51.020 --> 04:31:58.460]   At my age, 45, I'm standing here truly enjoying life I brought into this world.
[04:31:58.460 --> 04:32:03.600]   What else is it that was so important at this stage that I would otherwise be spending my time on?
[04:32:03.600 --> 04:32:04.680]   All right.
[04:32:04.680 --> 04:32:11.200]   Like you mentioned, you like to race cars, and you do it at a world-class competitive level, which is incredible.
[04:32:11.200 --> 04:32:13.340]   So how'd you get into it?
[04:32:13.340 --> 04:32:15.200]   What attracts you to racing?
[04:32:15.200 --> 04:32:16.500]   What do you love about it?
[04:32:16.500 --> 04:32:22.140]   The funny thing about getting into racing is I did not get my driver's license until I was 25.
[04:32:22.140 --> 04:32:32.120]   I grew up in Copenhagen, Denmark, where the tax on cars is basically over 200%.
[04:32:32.120 --> 04:32:36.020]   So you pay for three cars, and you get one.
[04:32:36.020 --> 04:32:39.080]   And I didn't even have the money for one car, let alone three.
[04:32:39.080 --> 04:32:41.260]   So I could not afford a car growing up.
[04:32:41.260 --> 04:32:42.980]   We did not have a car growing up.
[04:32:43.180 --> 04:32:51.200]   But Copenhagen is a nice city to be able to get around on a bike or with a bus or, as I did for a long period of time, on rollerblades.
[04:32:51.200 --> 04:32:59.220]   But when I was 25, I realized I wanted to spend more time in the U.S.
[04:32:59.220 --> 04:33:01.020]   I wasn't sure yet that I was going to move there.
[04:33:01.020 --> 04:33:02.660]   That turned out later to be true.
[04:33:02.660 --> 04:33:06.200]   But I knew that if I wanted to spend time in the U.S., I needed to have a driver's license.
[04:33:06.200 --> 04:33:10.280]   I was not going to get around very well if I didn't know how to drive a car.
[04:33:10.280 --> 04:33:14.960]   So I got a driver's license at 25, then ended up moving to the U.S. later that year.
[04:33:15.960 --> 04:33:20.420]   And I'd always been into video games, racing video games.
[04:33:20.420 --> 04:33:27.960]   Metropolitan Street Racer under Dreamcast was one of those games that really sucked me into.
[04:33:27.960 --> 04:33:36.820]   It was the precursor to Project Godham, which was the precursor to essentially Forza Horizon, I think.
[04:33:36.820 --> 04:33:37.360]   Oh, okay.
[04:33:37.380 --> 04:33:39.080]   I think that's how the lineage goes.
[04:33:39.080 --> 04:33:40.640]   Just a great game.
[04:33:40.640 --> 04:33:44.200]   I actually just fired it up on an emulator a few weeks ago.
[04:33:44.200 --> 04:33:51.280]   And it still sort of kind of holds up because it has enough real car dynamics that it smells a little bit like driving a real car.
[04:33:51.280 --> 04:33:54.940]   It's not just like an arcade racer like Sega Rally or something like that.
[04:33:54.940 --> 04:33:56.520]   But I'd always been into that.
[04:33:56.520 --> 04:34:00.600]   Then I got my driver's license at 25 and moved to the U.S.
[04:34:00.600 --> 04:34:07.300]   And then two years later, a friend that I'd met in Chicago took me to the Chicago Autobahn Country Club.
[04:34:07.300 --> 04:34:10.600]   Which is this great track about 45 minutes from Chicago.
[04:34:10.600 --> 04:34:14.640]   And I sat in a race car and I drove a race car for the first time.
[04:34:14.640 --> 04:34:23.500]   And I had the same kind of pseudo-religious experience I did as when I started working on Ruby.
[04:34:23.500 --> 04:34:33.200]   Where I did maybe 20 laps in this, basically a Mazda race car from I think like the 90s or something.
[04:34:33.200 --> 04:34:35.860]   Like a pretty cheap race car, but a real race car.
[04:34:36.080 --> 04:34:41.600]   Single-seater, manual gearbox, but exposed slick wheels, all the stuff.
[04:34:41.600 --> 04:34:46.980]   And after having had that experience, first of all, it was just the most amazing thing ever.
[04:34:46.980 --> 04:34:52.020]   Like the physical sensation of driving a race car is really unique.
[04:34:52.020 --> 04:34:58.200]   And I think if you're driving a car fast, you have maybe a 2% taste of it.
[04:34:59.720 --> 04:35:05.420]   The exposure to the elements that you get in a single-seat race car, especially one like that where your head is actually out in the elements.
[04:35:05.420 --> 04:35:07.840]   You can see the individual wheels.
[04:35:07.840 --> 04:35:11.740]   And your sensation of speed is just so much higher.
[04:35:11.740 --> 04:35:13.240]   It's at a completely different level.
[04:35:13.240 --> 04:35:14.560]   So can you actually speak to that?
[04:35:14.560 --> 04:35:22.300]   So even at that Mazda, so you can feel what can you feel like the track reverberating?
[04:35:22.300 --> 04:35:23.280]   You feel the grip?
[04:35:23.280 --> 04:35:31.580]   Not only can you see the bumps because you're literally looking straight at the wheels, you can feel all the bumps because you're running a slick tire.
[04:35:31.760 --> 04:35:32.860]   It's a really stiff setup.
[04:35:32.860 --> 04:35:37.580]   It's nothing like taking a fast street car out on a racetrack and trying to drive it a little bit around.
[04:35:37.580 --> 04:35:39.240]   So can you feel like the slipping?
[04:35:39.240 --> 04:35:40.500]   You can feel the slipping.
[04:35:40.500 --> 04:35:51.120]   That's a huge part of the satisfaction of driving a race car is driving it at the edge of adhesion, as we call it, where the car is actually sliding a little bit.
[04:35:51.180 --> 04:35:54.480]   A couple of percent slip angle is the fastest way to drive a race car.
[04:35:54.480 --> 04:35:55.540]   You don't want to slide too much.
[04:35:55.540 --> 04:35:56.280]   That looks great.
[04:35:56.280 --> 04:35:58.140]   Lots of smoke, but it's not fast.
[04:35:58.140 --> 04:36:08.480]   How you want to drive it is just at the limit of adhesion where you're rotating the car as much as your tires can manage and then slightly more than that.
[04:36:08.480 --> 04:36:19.480]   And playing at it, keeping it just at that level, because when you're at the level of or at the limit of adhesion, you're essentially just a tiny movement away from spinning out.
[04:36:20.120 --> 04:36:21.800]   I mean, it doesn't take much.
[04:36:21.800 --> 04:36:23.100]   Then the car starts rotating.
[04:36:23.100 --> 04:36:26.900]   Once it starts rotating, you lose grip and you're going for the wall.
[04:36:26.900 --> 04:36:33.600]   That balance of danger and skill is what's so intoxicating.
[04:36:33.600 --> 04:36:40.560]   And it's so much better than racing video games, too, because the criticality is taking up two notches.
[04:36:40.560 --> 04:36:45.280]   I often think about people who really like gambling, where I think, like, aren't you just playing poker?
[04:36:45.280 --> 04:36:48.240]   And like, no, the point is not poker.
[04:36:48.700 --> 04:36:52.100]   Poker may be part of it, but the point is that I could lose my house, right?
[04:36:52.100 --> 04:36:57.900]   Like, that's the addiction that some people get to gambling, that there's something real on the line.
[04:36:57.900 --> 04:37:00.860]   When you're in a race car, there's something very real on the line.
[04:37:01.260 --> 04:37:08.780]   If you get it wrong, at the very least, you're going to spin out and probably hit a wall and it's going to be expensive.
[04:37:08.780 --> 04:37:12.220]   At the very worst, you're not getting out alive.
[04:37:12.460 --> 04:37:24.760]   And even if modern race cars have gotten way safer than they used to be, there is that element of danger that's real, that there are people who still get seriously hurt or even killed in a race car.
[04:37:24.860 --> 04:37:40.260]   It's mercifully rare compared to what it used to be when those maniacs in the 60s would do Formula One and whatever, 13% of the grid wouldn't make it to the end of the year because they'd just die in a fiery, flaming fireball.
[04:37:41.260 --> 04:37:48.320]   There's still some of it there, and I think that sense that there's something on the line really contributes to it.
[04:37:48.320 --> 04:37:49.140]   But it's more than that.
[04:37:49.140 --> 04:37:50.600]   There's just a physical sensation.
[04:37:50.600 --> 04:37:52.180]   There's activation of all your forces.
[04:37:52.180 --> 04:37:53.200]   There's the flow.
[04:37:54.540 --> 04:38:02.340]   And I think that really cements, like, why I got addicted because I always, I love that flow I got out of programming.
[04:38:02.340 --> 04:38:05.880]   But getting flow out of programming is a very inconsistent process.
[04:38:05.880 --> 04:38:11.500]   I can't just sit down in front of a keyboard and go like, all right, let's get the flow going.
[04:38:11.500 --> 04:38:13.260]   It doesn't happen like that.
[04:38:13.260 --> 04:38:14.760]   The problem has to be just right.
[04:38:14.760 --> 04:38:16.620]   It has to meet my skills in just the right moment.
[04:38:16.620 --> 04:38:18.160]   It's a bit of a lottery.
[04:38:18.160 --> 04:38:20.540]   In a race car, it's not a lottery at all.
[04:38:20.620 --> 04:38:27.380]   You sit down in that car, you turn the ignition, you go out on track, and I get flow virtually guaranteed.
[04:38:27.380 --> 04:38:36.200]   Because you need, or I need, at least 100% of my brain processing power to be able to go at the speed I go without crashing.
[04:38:36.200 --> 04:38:43.860]   So there's no time to think about dinner tonight or the meeting next week or product launch.
[04:38:43.860 --> 04:38:48.920]   It just, it's completely zen in actually the literal sense of the word.
[04:38:48.920 --> 04:38:51.180]   I think of someone who's really good at meditation.
[04:38:51.180 --> 04:38:53.460]   That's probably kind of state they get into.
[04:38:53.460 --> 04:38:55.780]   It's just clear you're in the now.
[04:38:55.780 --> 04:38:58.460]   There's nothing but you and the next corner.
[04:38:58.460 --> 04:39:01.460]   That's a really addictive experience.
[04:39:01.460 --> 04:39:03.960]   So after I've had that, I couldn't get enough.
[04:39:03.960 --> 04:39:06.780]   I just, I kept going to the track every opportunity I got.
[04:39:06.780 --> 04:39:09.840]   Every single weekend for about four years, I would go to the track.
[04:39:10.360 --> 04:39:18.660]   And by the end of that time, I'd finally worked up enough skill and enough success with the company that I could afford to go, quote unquote, real racing.
[04:39:18.660 --> 04:39:20.940]   So I started doing that.
[04:39:20.940 --> 04:39:22.200]   I started driving these Porsches.
[04:39:22.200 --> 04:39:27.740]   And then as soon as I got into that, as soon as I got into, quote unquote, real competition, I was like, I wonder how far you can take this.
[04:39:28.740 --> 04:39:32.260]   And it didn't take that long before I decided, you know what?
[04:39:32.260 --> 04:39:34.080]   I could take this all the way.
[04:39:34.080 --> 04:39:37.240]   My great hero in racing is Tom Christensen.
[04:39:37.240 --> 04:39:41.760]   Fellow Dane, the Mr. Le Mans, as they call him.
[04:39:41.760 --> 04:39:43.360]   The greatest endurance race in the world.
[04:39:43.360 --> 04:39:48.280]   The 24 hours of Le Mans has been won more times than any other by Tom Christensen.
[04:39:48.280 --> 04:39:50.880]   He won the race nine times.
[04:39:51.560 --> 04:39:55.900]   So Tom just really turned me on to Le Mans.
[04:39:55.900 --> 04:39:59.320]   I've been watching Le Mans since I think the 80s.
[04:39:59.320 --> 04:40:01.660]   I have my earliest memories of watching that on TV.
[04:40:01.660 --> 04:40:04.820]   The race has been going since, I think, the 20s.
[04:40:04.820 --> 04:40:06.860]   But in the 80s, I got kind of into it.
[04:40:06.860 --> 04:40:16.280]   And then in the late 90s, early 2000s, when Tom started winning, I, like pretty much every other Dane, started watching the race almost religiously.
[04:40:16.280 --> 04:40:17.140]   So I thought, you know what?
[04:40:17.140 --> 04:40:17.860]   I want to get to Le Mans.
[04:40:18.040 --> 04:40:27.900]   And this is the magic thing about racing, that if I get into basketball, like I can't set a realistic expectation that I'm going to play in the NBA, that I'm going to go to the finals.
[04:40:27.900 --> 04:40:30.480]   Or I get into tennis and I'm going to play at Wimbledon.
[04:40:30.480 --> 04:40:31.720]   That just doesn't happen.
[04:40:31.720 --> 04:40:36.560]   But racing is special in this way because it requires a fair amount of money to keep these cars running.
[04:40:36.560 --> 04:40:37.460]   It's really expensive.
[04:40:37.460 --> 04:40:39.280]   It's like having a small startup.
[04:40:39.280 --> 04:40:43.260]   You need to fly a bunch of people around the world and buy expensive equipment and so forth.
[04:40:43.260 --> 04:40:44.180]   So you need a bunch of capital.
[04:40:44.180 --> 04:40:46.840]   And I had some through the success of the company.
[04:40:46.840 --> 04:40:50.360]   So I could do it, which meant that I could get to Le Mans.
[04:40:50.360 --> 04:40:51.800]   So I set that as my goal.
[04:40:51.800 --> 04:40:52.820]   I want to get to Le Mans.
[04:40:52.820 --> 04:40:57.760]   And I started racing in real competition 2009.
[04:40:57.760 --> 04:41:02.320]   And three years later in 2012, I was at the grid of Le Mans for the first time.
[04:41:02.320 --> 04:41:06.700]   We should say, so Le Mans, 24-hour race, endurance.
[04:41:06.700 --> 04:41:09.180]   I mean, this is insane.
[04:41:09.720 --> 04:41:11.260]   There are three drivers, mind you.
[04:41:11.260 --> 04:41:15.080]   So it's not like one guy just driving for 20 hours, 24 hours straight.
[04:41:15.080 --> 04:41:19.680]   But still, it's a pretty tough race, both physically and mentally, especially mentally.
[04:41:19.680 --> 04:41:27.740]   When you've been up for 24-plus hours, you're not quite as sharp as when you first wake up.
[04:41:27.960 --> 04:41:29.500]   And this is funny about Le Mans, too.
[04:41:29.500 --> 04:41:31.480]   It starts at around 4 o'clock in the afternoon.
[04:41:31.480 --> 04:41:34.340]   So you've already been up for half a day by the time the race starts.
[04:41:34.340 --> 04:41:36.840]   And then there's 24 hours to go before you're done.
[04:41:37.180 --> 04:41:43.600]   And you'll be in the car for anywhere from usually an hour and a half to a maximum of four hours.
[04:41:43.600 --> 04:41:46.460]   The regulations say four out of six is the max you can do.
[04:41:46.460 --> 04:41:50.040]   I've spent perhaps two and a half hours in a single stint at Le Mans.
[04:41:50.040 --> 04:41:51.640]   It's pretty taxing.
[04:41:51.640 --> 04:41:56.140]   You're going 200 miles an hour into some of these turns.
[04:41:56.140 --> 04:41:59.740]   And there's another 60 cars on track.
[04:41:59.740 --> 04:42:04.660]   Whenever I'm in my normal category, which is the LMP2 category,
[04:42:04.660 --> 04:42:09.920]   I have GT cars, which are more like a Ferrari and a Porsche, that I have to overtake.
[04:42:09.920 --> 04:42:13.420]   And then I have these hyper cars, which is the top class, that are overtaking me.
[04:42:13.420 --> 04:42:15.060]   So you've got a lot going on.
[04:42:15.060 --> 04:42:18.520]   And you've got to stay sharp for two and a half hours straight to do that.
[04:42:18.520 --> 04:42:24.380]   That is just a guaranteed way to get incredible flow for long, long stretches of time.
[04:42:24.380 --> 04:42:26.420]   That's why you get addicted to it.
[04:42:26.420 --> 04:42:27.600]   That's why I got addicted to it.
[04:42:27.600 --> 04:42:31.360]   You've got to talk me through this video, this video of you in these LMP2s.
[04:42:31.360 --> 04:42:32.500]   This is such a cool.
[04:42:32.500 --> 04:42:33.980]   This is so cool.
[04:42:34.360 --> 04:42:37.500]   Yeah, this was probably my favorite battle of my career.
[04:42:37.500 --> 04:42:37.860]   Sure.
[04:42:37.860 --> 04:42:41.540]   And Hallmark Hansen has beat past and fights past.
[04:42:41.540 --> 04:42:47.160]   Yeah, so this is me driving against Nico Miller at the Shanghai International Circuit.
[04:42:47.160 --> 04:42:48.340]   You're on the outside here.
[04:42:48.340 --> 04:42:50.940]   I'm on the outside in the blue and white.
[04:42:50.940 --> 04:42:55.080]   And we go a whole track around with basically a piece of paper between us.
[04:42:55.080 --> 04:42:56.020]   See, down this back straight.
[04:42:56.140 --> 04:43:01.900]   I get so close to him because I want to force him over on the other side of the track such that he can't just box me in.
[04:43:01.900 --> 04:43:05.820]   And we've been fighting already at this point for basically 40 minutes straight.
[04:43:05.820 --> 04:43:09.780]   I've been managing to keep this professional driver behind me for 40 minutes.
[04:43:10.020 --> 04:43:11.620]   And he finally passes me.
[04:43:11.620 --> 04:43:14.020]   But we just keep the battle on for the whole time.
[04:43:14.020 --> 04:43:16.360]   And it really just shows both these kinds of cars.
[04:43:16.360 --> 04:43:19.500]   The Le Mans prototypes we don't actually ever touch.
[04:43:19.800 --> 04:43:25.920]   We get within about an inch and keep going around the Shanghai circuit too.
[04:43:25.920 --> 04:43:27.640]   How did you get so good?
[04:43:27.640 --> 04:43:29.560]   Like what?
[04:43:29.560 --> 04:43:31.960]   I mean, that's a fascinating story, right?
[04:43:31.960 --> 04:43:33.980]   That you are able to get so good.
[04:43:34.220 --> 04:43:39.640]   I'm pretty good for the kind of driver I am, which is called the gentleman driver, which means I'm not a professional driver.
[04:43:39.640 --> 04:43:49.260]   And like many good gentleman drivers, when we're at our really best, we can be quite competitive with even professional drivers who have been doing this their whole life.
[04:43:49.260 --> 04:43:54.620]   The difference between us and the professionals is the professionals can do it every time or more or less every time.
[04:43:54.620 --> 04:43:56.680]   So I can't be this good all the time.
[04:43:56.680 --> 04:44:01.180]   When everything is just right, I can be competitive with professional drivers.
[04:44:01.180 --> 04:44:03.560]   But that's not how you win championships.
[04:44:03.820 --> 04:44:05.780]   That's not how you get paid by factories to drive.
[04:44:05.780 --> 04:44:07.480]   You've got to be good every time you go out.
[04:44:07.480 --> 04:44:08.940]   So that's a huge difference.
[04:44:08.940 --> 04:44:11.920]   But some of it was also just, I really put my mind to it.
[04:44:11.920 --> 04:44:20.060]   By the time I realized race cars is what I want to do as my serious hobby, I put in thousands of hours.
[04:44:20.060 --> 04:44:21.720]   Have you crashed?
[04:44:21.720 --> 04:44:22.920]   What's the worst crash?
[04:44:22.920 --> 04:44:24.340]   I've had a lot of crashes.
[04:44:24.340 --> 04:44:30.020]   But thankfully, nug on wood, I haven't had any crashes where I've gotten really seriously hurt.
[04:44:30.020 --> 04:44:31.560]   Have you like wrecked the car?
[04:44:31.560 --> 04:44:32.220]   Oh, yes.
[04:44:32.220 --> 04:44:32.940]   Oh, yes.
[04:44:32.940 --> 04:44:34.220]   I've wrecked many a car.
[04:44:34.220 --> 04:44:35.480]   So what does that feel like?
[04:44:35.480 --> 04:44:36.660]   Just you wreck a car?
[04:44:36.660 --> 04:44:37.520]   Like, how do you get?
[04:44:37.520 --> 04:44:42.220]   It feels like total shit if you're in a real race and other people depend on you.
[04:44:42.220 --> 04:44:47.460]   It's not even so much the car, although it's also sometimes that these cars are expensive to repair and that sucks.
[04:44:47.500 --> 04:44:51.580]   And it feels so wasteful, in a way, when you crash some of these cars.
[04:44:51.580 --> 04:44:57.700]   But the sense that you're letting a team down, endurance racing is a team sport.
[04:44:57.700 --> 04:45:00.460]   Not only do you have your mechanics, you usually have co-drivers.
[04:45:00.460 --> 04:45:04.960]   So when I crash, I just feel like, damn it, I could have avoided this.
[04:45:04.960 --> 04:45:08.000]   Yeah, but also, you could have died.
[04:45:08.000 --> 04:45:09.040]   Do you know what's funny?
[04:45:09.040 --> 04:45:10.620]   I never think about that.
[04:45:10.960 --> 04:45:17.260]   I don't think you can because I think the moment you start thinking about being able to die, you can't do it.
[04:45:17.260 --> 04:45:18.240]   You can't go fast.
[04:45:18.240 --> 04:45:29.160]   Well, I'm sure, not to go all Carl Jung and Freud here, but I'm sure that's always present in the back of your mind somewhere.
[04:45:29.160 --> 04:45:31.140]   You're not just bringing it to the surface.
[04:45:31.140 --> 04:45:34.240]   It is in the sense that it's part of the appeal.
[04:45:34.240 --> 04:45:39.180]   It's part of the sense that there's something on the line, that this isn't just virtual.
[04:45:39.180 --> 04:45:41.800]   I can't just hit reset, restart, reboot.
[04:45:42.380 --> 04:45:49.500]   If I crash this car, we're going to be out, or we're going to be disadvantaged, or it's going to get destroyed, or I might get hurt.
[04:45:49.500 --> 04:45:52.920]   I've gotten lightly hurt a few times.
[04:45:52.920 --> 04:45:57.560]   I actually had the year we won 24 hours of Le Mans in our class.
[04:45:57.560 --> 04:46:03.420]   I've been training in this Formula 3.5 car.
[04:46:03.420 --> 04:46:04.840]   It's a really fast car.
[04:46:04.840 --> 04:46:08.960]   It's a really nice exercise to do, but it's also, it doesn't have power steering.
[04:46:09.720 --> 04:46:18.280]   So some of these race cars, especially the open seaters, they don't have power steering, which means that the steering wheel is basically directly connected to the front wheels.
[04:46:18.280 --> 04:46:25.900]   So if you crash one of those cars and the front wheels suddenly turn, you're really going to hurt your hands if you don't get your hands off the wheel.
[04:46:25.900 --> 04:46:32.900]   I hadn't raced enough of those cars to know that I had to get, or to have the instinct, to have developed the instinct that I had to get my hands off the wheel.
[04:46:32.900 --> 04:46:33.740]   So I didn't.
[04:46:34.020 --> 04:46:35.520]   And I really hurt my hand.
[04:46:35.520 --> 04:46:39.300]   And this was just, I think, a month before the 24 hours of Le Mans.
[04:46:39.300 --> 04:46:41.500]   So I thought, oh, man, I'm going to have to miss it this year.
[04:46:41.500 --> 04:46:43.240]   I had like, not a cast.
[04:46:43.240 --> 04:46:44.320]   It was just seriously sprained.
[04:46:44.320 --> 04:46:50.480]   And then somehow, miraculously, like a week before the event, I was like, oh, yeah, actually, it's okay now.
[04:46:50.480 --> 04:46:51.480]   So got to do it.
[04:46:51.540 --> 04:46:59.320]   And that would have been grave regret if I would have seen my team go on to win the race and I would have to sit on the sidelines.
[04:46:59.320 --> 04:47:07.740]   But I really have been quite fortunate in the sense that most of my crashes have just been expensive or sporting inconvenient.
[04:47:07.740 --> 04:47:10.840]   They've never been something where I got seriously hurt.
[04:47:10.960 --> 04:47:12.880]   But I've seen plenty of people who have.
[04:47:12.880 --> 04:47:20.800]   In fact, my co-driver this year, and for several years, Petro Fittipaldi, drove a race car at Spa.
[04:47:20.800 --> 04:47:24.600]   Spa is one of the great racetracks of all time.
[04:47:24.600 --> 04:47:29.920]   And it has this iconic corner called Arouge, which is probably the most famous corner in all of motorsports.
[04:47:29.920 --> 04:47:33.780]   It has a great compression before you climb uphill.
[04:47:34.080 --> 04:47:36.840]   It's an extremely fast, very difficult corner.
[04:47:36.840 --> 04:47:42.580]   And just as he does the compression, his car basically sets out and he loses his power steering.
[04:47:42.580 --> 04:47:49.240]   And he drives straight into the wall and breaks both his legs and basically face the prospect that maybe his career was over.
[04:47:49.240 --> 04:47:55.600]   I've had other teammates and people I know have serious injuries that's really hurt them.
[04:47:56.660 --> 04:48:00.540]   And yet what's funny, as you say, you'd think that would sink in.
[04:48:00.540 --> 04:48:12.500]   The year before we won in 2014, that same car had a Danish driver in it at Le Mans at the race I was driving who died.
[04:48:12.500 --> 04:48:19.440]   He lost control of the car when there was a bit of rain on the track.
[04:48:19.640 --> 04:48:26.600]   And the track went unfortunately designed in such a poor way that there was a very big tree right behind the railing.
[04:48:26.600 --> 04:48:41.080]   And he hit that tree at full speed, pulled 90 Gs and was dead on the spot, which was just such an extremely awful experience to go through.
[04:48:41.480 --> 04:48:46.040]   I finished second that year, which should have been cause for a bunch of celebration.
[04:48:46.040 --> 04:48:57.000]   But it was just tainted by the fact that not only did a driver die, a fellow Dane died, a guy I knew died.
[04:48:57.000 --> 04:49:00.780]   That was pretty tough.
[04:49:01.880 --> 04:49:11.940]   So that, throw that into the pile of the things that have to be considered is the weather conditions that you mentioned of the track, the weather is dry or wet.
[04:49:11.940 --> 04:49:13.800]   It's a huge part of it.
[04:49:13.800 --> 04:49:18.480]   Even just last year at Le Mans, it was raining and I was out.
[04:49:19.520 --> 04:49:33.120]   And I hadn't made a serious mistake at the 24 hours of Le Mans since I did the first race in 2012 where I put it in the sand trap with like four hours to go.
[04:49:33.120 --> 04:49:40.380]   And we lost a couple of laps getting pulled out, but it didn't actually change anything for our result because that was just how the field was spread out.
[04:49:40.680 --> 04:49:43.800]   I'd made minor mistakes over the years, but nothing that really set us out.
[04:49:43.800 --> 04:49:56.900]   And at the race last year, when it was raining, I first clobbered a Ford Mustang when I made an overambitious pass on a damp part of the track and couldn't stop in time.
[04:49:57.280 --> 04:50:06.800]   And then felt absolutely awful as I sat in the gravel pit for two laps and knew that our race was over, a race where we were highly competitive.
[04:50:06.800 --> 04:50:11.400]   You're not blessed with a competitive car, a competitive team and competitive setup every year.
[04:50:11.400 --> 04:50:13.100]   I know how rare that is.
[04:50:13.100 --> 04:50:21.500]   So to know that we had had a chance that year and I sort of squandered it felt really bad, but that got compounded.
[04:50:21.660 --> 04:50:28.940]   I got back on track, barely made it another stint and then put it in the gravel trap again when it started raining on the entrance into Porsche.
[04:50:28.940 --> 04:50:35.080]   So this is part of why racing is so addicting too, because the highs are very, very high.
[04:50:35.080 --> 04:50:39.480]   When you win a race like the 24 hours of Le Mans, it feels just incredible.
[04:50:39.480 --> 04:50:44.200]   There's so much emotion, but if you fuck it up, the lows are very, very low.
[04:50:44.200 --> 04:50:47.280]   What are the things you're paying attention to when you're driving?
[04:50:47.280 --> 04:50:50.840]   What's, what, what is the, what are the parameters?
[04:50:51.040 --> 04:50:52.000]   What are you loading in?
[04:50:52.000 --> 04:50:56.300]   Are you feeling the grip?
[04:50:56.300 --> 04:51:03.500]   Are you basically increasing the speed and seeing what, like a constant feedback system effect it has on the grip?
[04:51:03.500 --> 04:51:08.040]   Are you trying to manage that and try to find that optimal slip angle?
[04:51:08.040 --> 04:51:11.200]   Are you looking around using your eyes?
[04:51:11.200 --> 04:51:13.620]   Are you smelling things?
[04:51:13.620 --> 04:51:14.200]   Are you listening?
[04:51:14.200 --> 04:51:15.240]   Are you feeling the wind?
[04:51:15.240 --> 04:51:19.200]   Are you, are you, oh, are you looking at the field too?
[04:51:20.160 --> 04:51:22.420]   Like how, how, how'd you not hit that guy at all?
[04:51:22.420 --> 04:51:24.680]   You get close within inches, right?
[04:51:24.680 --> 04:51:25.980]   So you have to pay attention to that too.
[04:51:25.980 --> 04:51:30.960]   It's really interesting about that specific battle where we're literally a few inches apart.
[04:51:30.960 --> 04:51:42.780]   I can't fully explain it, but humans can develop an incredible sense of space where I can't see the edge of the back of my car, but I can know exactly where it is.
[04:51:42.780 --> 04:51:56.560]   I can have a mental model in my head that gives me the exact dimensions of this car so that I can run within a few inches of a competitor car or within a few inches of the wall and not hit either when things go well.
[04:51:56.800 --> 04:52:02.980]   The car is about two meters wide and it's quite long, five meters and you can't see everything.
[04:52:02.980 --> 04:52:04.660]   The mirrors are actually kind of shit.
[04:52:04.660 --> 04:52:06.560]   There's no rear view mirror in these cars.
[04:52:06.560 --> 04:52:07.460]   You can't see out the back.
[04:52:07.460 --> 04:52:13.500]   You can only see through your two side mirrors, but you form this intuitive mental model when
[04:52:13.500 --> 04:52:14.400]   you get good enough at this.
[04:52:14.500 --> 04:52:19.320]   But what I actually pay attention to most is I run a program.
[04:52:19.320 --> 04:52:26.460]   What I try to do when I go to a racetrack is I try to load up the best program I know how for every single corner.
[04:52:26.460 --> 04:52:27.840]   What's my break point?
[04:52:27.840 --> 04:52:29.840]   What's my acceleration point?
[04:52:29.840 --> 04:52:32.900]   What's my brake trailing curve?
[04:52:33.580 --> 04:52:44.500]   And I try to pick up that program in part just by finding it myself and how fast I can go, but even more so than that, by copying my professional competitors or not competitors, co-drivers.
[04:52:44.500 --> 04:52:54.640]   So I usually always race with a pro and modern race cars produce an absolute enormous amount of data and you can analyze all that data after each outing.
[04:52:54.640 --> 04:53:02.920]   You can see an exact trace of how much you push the brake pedal, how much you did in terms of steering inputs, when you got on the gas.
[04:53:02.920 --> 04:53:08.440]   You can see every millisecond you're losing is evident in those charts.
[04:53:08.440 --> 04:53:14.600]   So what I try to do is I try to look at the chart and then I try to load that in and like that's what I got to do.
[04:53:14.600 --> 04:53:20.420]   Oh, in this corner 17, I actually I have to be 10 bar lighter on the brake.
[04:53:20.420 --> 04:53:23.540]   So I try to load that program in and then I try to repeat it.
[04:53:23.780 --> 04:53:25.300]   Now, then there are all the things that changes.
[04:53:25.300 --> 04:53:28.140]   Your tires change quite a lot.
[04:53:28.140 --> 04:53:32.700]   These tires are made to only last 40 minutes in many cases.
[04:53:32.700 --> 04:53:39.540]   Sometimes at Le Mans we can go longer, but at some racetracks they'll last as little as 40 minutes before they really fall off.
[04:53:39.540 --> 04:53:42.100]   So you got to manage that, that the grip is constantly changing.
[04:53:42.100 --> 04:53:45.400]   So your program have to suddenly fit those changing circumstances.
[04:53:45.400 --> 04:53:52.340]   And then in endurance racing, you're constantly interacting with other cars because you're passing slower classes or you're getting passed by a faster class.
[04:53:52.420 --> 04:53:54.180]   So that's part of the equation.
[04:53:54.180 --> 04:53:58.840]   And then you're trying to dance the car around the limit of adhesion.
[04:53:58.840 --> 04:54:01.220]   So you got all those factors playing at the same time.
[04:54:01.220 --> 04:54:05.940]   But above all else for me is to try to become a robot.
[04:54:05.940 --> 04:54:17.440]   Like, how can I repeat this set of steps exactly as I'm supposed to for two and a half hours straight without making 100 milliseconds worth of mistakes?
[04:54:18.120 --> 04:54:19.420]   Yeah, low latency algorithm.
[04:54:19.420 --> 04:54:22.080]   That's really a huge part of it, actually.
[04:54:22.080 --> 04:54:29.420]   Your latency is enormously important in terms of being able to catch when the car starts slipping.
[04:54:29.420 --> 04:54:37.280]   You get this sensation in your body that the G-forces are a little off, the slip angle is a little off, and then you have to counter steer.
[04:54:38.000 --> 04:54:41.700]   And obviously, the best race car drivers just feel like an intuition.
[04:54:41.700 --> 04:54:43.140]   I have some intuition.
[04:54:43.140 --> 04:54:44.060]   I don't have all of it.
[04:54:44.060 --> 04:54:46.460]   So I do occasionally spin my car.
[04:54:46.460 --> 04:54:47.940]   But that's the challenge.
[04:54:47.940 --> 04:54:53.840]   From everything you've studied and understand, what does it take to achieve mastery in racing?
[04:54:54.180 --> 04:54:57.640]   Like, what does it take to become the best race car driver in the world?
[04:54:57.640 --> 04:54:59.820]   Obsession is part of it.
[04:54:59.820 --> 04:55:07.660]   When I read and hear about Senna and the other greats, they were just singularly focused.
[04:55:07.660 --> 04:55:12.680]   Max Verstappen is the current champion of the world, and he is the same kind.
[04:55:12.680 --> 04:55:16.140]   Max has been fascinating to watch.
[04:55:16.140 --> 04:55:20.500]   I mean, he's a phenomenal race car driver, but he also literally does nothing else.
[04:55:20.500 --> 04:55:23.320]   When he's not at the racetrack, he's driving sim racing.
[04:55:23.980 --> 04:55:29.780]   He's literally in video games doing more racing when he's not doing all the racing he's already doing.
[04:55:29.780 --> 04:55:35.980]   Is there a specific skill they have that, like, stands out to you as supernatural through all that obsession?
[04:55:35.980 --> 04:55:42.420]   Like, what—is it a bunch of factors, or are they actually able to, like you said, develop a sense?
[04:55:42.420 --> 04:55:45.460]   Is it that they're able to get to the very edge of the slip?
[04:55:45.460 --> 04:55:50.460]   They're able to develop very fine-tuned sensibilities for when the car is sliding.
[04:55:50.460 --> 04:55:57.260]   They can feel just these tiny moments or movements in the chassis that transports up, usually through their ass.
[04:55:57.260 --> 04:56:06.560]   That's why you call it like a butt meter that goes up, and you feel like the car is loose, or you feel like you're just about to lock up.
[04:56:06.560 --> 04:56:09.540]   You can really hone that tuning.
[04:56:09.540 --> 04:56:12.680]   Then the other thing is you have to have really good reaction time.
[04:56:13.060 --> 04:56:22.100]   And when you look at great Formula 1 drivers, they can generally have a reaction time of just under 200 milliseconds, which is awesome.
[04:56:22.100 --> 04:56:25.940]   And even 10 milliseconds difference makes a huge difference.
[04:56:25.940 --> 04:56:31.800]   You'll see it when the Formula 1 grid, for example, they do a standing start, and you see the five red lights come on.
[04:56:31.980 --> 04:56:36.320]   And when the last light goes out, they're supposed to release the clutch and get going.
[04:56:36.320 --> 04:56:40.560]   And they can time this, so you can see exactly who has the reaction time.
[04:56:40.560 --> 04:56:47.620]   And even being off by 20 milliseconds can make the difference of whether you're in front or behind at the first corner.
[04:56:47.620 --> 04:56:52.600]   How much of winning is also just the strategy of jostling for position?
[04:56:53.160 --> 04:56:55.440]   There's some of that, and some of it is also just nerve.
[04:56:55.440 --> 04:56:56.860]   Who wants it more?
[04:56:56.860 --> 04:57:00.620]   That's exactly when that sense of danger comes in.
[04:57:00.620 --> 04:57:08.880]   There's a great quote from Fernando Alonso when he was driving at Suzuka against Schumacher, I think.
[04:57:08.880 --> 04:57:12.100]   They're coming up to this incredibly fast corner.
[04:57:12.100 --> 04:57:13.580]   It's very dangerous.
[04:57:13.580 --> 04:57:21.240]   And Alonso basically accounts, I was going to make the pass because I knew he had a wife and kids at home.
[04:57:22.140 --> 04:57:23.160]   That's so gangster.
[04:57:23.160 --> 04:57:24.920]   Just absolutely ruthless, right?
[04:57:24.920 --> 04:57:25.500]   Yeah, wow.
[04:57:25.500 --> 04:57:28.040]   That I knew he valued life more than I did.
[04:57:28.040 --> 04:57:31.120]   So there's a bit of poker sometimes in that.
[04:57:31.120 --> 04:57:32.560]   Who's going to yield?
[04:57:32.560 --> 04:57:35.320]   There's a bit of chicken race in that regard.
[04:57:35.320 --> 04:57:37.600]   And sometimes it doesn't work.
[04:57:37.600 --> 04:57:39.360]   No one yields, and you both crash.
[04:57:39.360 --> 04:57:41.620]   But very often, one person will blink first.
[04:57:41.620 --> 04:57:43.760]   Can the pass be both on the inside and the outside?
[04:57:43.760 --> 04:57:50.080]   You can pass wherever you want as long as you have just a slight part of the car on the racetrack.
[04:57:50.640 --> 04:57:53.300]   And then you just improvise and take risks.
[04:57:53.300 --> 04:57:55.220]   What a sport.
[04:57:55.220 --> 04:58:00.020]   And then Senna, of course, is like a legendary risk taker.
[04:58:00.020 --> 04:58:00.820]   Yes.
[04:58:01.660 --> 04:58:06.240]   And even before him, by the time, I mean, he died in the 90s.
[04:58:06.240 --> 04:58:13.360]   But by the time we got to the 90s, racing was already a lot safer than it was when Nicky Lauda raced in the 60s.
[04:58:14.820 --> 04:58:17.040]   That level of danger is no longer there.
[04:58:17.040 --> 04:58:21.180]   There's still just a remnant of it, and it is still dangerous, but nothing like that.
[04:58:21.180 --> 04:58:25.980]   And it's a little hard to compare through the ages, like who's the greatest driver of all time.
[04:58:25.980 --> 04:58:30.300]   I think there's a fair argument that Senna is, but we don't have the data.
[04:58:30.360 --> 04:58:31.500]   We don't know who he was up against.
[04:58:31.500 --> 04:58:34.660]   Like, how would he fare if we pitted him against Max Verstappen today?
[04:58:34.660 --> 04:58:43.480]   I do think sometimes that you can have a bit of a nostalgia for the all-time greats, but the world moves forward and new records are being set all the time.
[04:58:43.520 --> 04:58:45.460]   And the professionalism keeps improving.
[04:58:45.460 --> 04:58:54.400]   Sometimes to the detriment of the sport, I think, there's a lot of professional drivers who are not only just very good at driving, but are very good at being corporate spokespeople.
[04:58:54.400 --> 04:58:56.160]   And it used to be quite different.
[04:58:56.160 --> 04:59:05.600]   There used to be more characters in racing that had a bit more personality that they were allowed to shine because there weren't a billion sponsorships on the line that they were afraid to lose.
[04:59:05.600 --> 04:59:06.900]   Ridiculous question.
[04:59:06.900 --> 04:59:08.160]   What's the greatest car ever made?
[04:59:08.160 --> 04:59:10.640]   Or maybe what's the funnest one to drive?
[04:59:11.360 --> 04:59:14.500]   The greatest car for me of all time is the Pagani Sonda.
[04:59:14.500 --> 04:59:16.400]   Okay, I'm looking this up.
[04:59:16.400 --> 04:59:17.200]   Pagani Sonda.
[04:59:17.200 --> 04:59:24.820]   So the Pagani Sonda was made by this wonderful Argentinian called Horacio Pagani.
[04:59:24.820 --> 04:59:26.440]   My God, that's a beautiful car.
[04:59:26.440 --> 04:59:26.680]   Wow.
[04:59:26.680 --> 04:59:27.920]   It's a gorgeous car.
[04:59:27.920 --> 04:59:28.840]   You can look up mine.
[04:59:28.840 --> 04:59:30.660]   It's the Pagani Sonda HH.
[04:59:30.660 --> 04:59:31.660]   Yep.
[04:59:31.660 --> 04:59:41.080]   So that's a car I had made in 2010 after we visited.
[04:59:41.080 --> 04:59:51.680]   I visited the factory in Marna and by sheer accident ended up with this car, but it became my favorite car in the world.
[04:59:51.680 --> 05:00:04.700]   When I watched an episode of Top Gear, I think in 2005 where one of the presenters was driving the Pagani Sonda F around and I just thought that's the most beautiful car in the world.
[05:00:04.860 --> 05:00:08.540]   It is the most incredibly sounding car in the world.
[05:00:08.540 --> 05:00:14.040]   If I one day have the option, this is what I want.
[05:00:14.500 --> 05:00:16.460]   And then I had the option in 2010.
[05:00:16.460 --> 05:00:17.840]   I've had the car ever since.
[05:00:17.840 --> 05:00:19.200]   I'm never, ever going to sell it.
[05:00:19.200 --> 05:00:24.140]   It's truly a masterpiece that stood the test of time.
[05:00:24.140 --> 05:00:28.840]   There's some great cars from history that are recognized as being great in their time.
[05:00:28.840 --> 05:00:29.720]   This car is still great.
[05:00:29.720 --> 05:00:31.540]   Have you taken it on the racetrack?
[05:00:31.540 --> 05:00:32.240]   I have.
[05:00:32.240 --> 05:00:33.260]   It's terrible at that.
[05:00:33.260 --> 05:00:35.340]   But I don't want to say it's terrible at that.
[05:00:35.340 --> 05:00:36.680]   That's not what it's designed for.
[05:00:36.860 --> 05:00:39.120]   It's designed for the road.
[05:00:39.120 --> 05:00:40.880]   And that's why it's great.
[05:00:40.880 --> 05:00:46.160]   There are a lot of fast cars that are straddling their race car for the road.
[05:00:46.160 --> 05:00:48.080]   You don't actually want a race car for the world.
[05:00:48.080 --> 05:00:50.040]   A race car for the world is a pain in the ass.
[05:00:50.040 --> 05:00:50.920]   It's way too stiff.
[05:00:50.920 --> 05:00:51.940]   It's way too loud.
[05:00:51.940 --> 05:00:52.780]   It's way too uncomfortable.
[05:00:52.780 --> 05:00:54.680]   You can't actually take it on a road trip.
[05:00:54.680 --> 05:00:56.680]   So this actually feels good driving.
[05:00:56.680 --> 05:00:57.780]   Oh, totally, totally.
[05:00:57.780 --> 05:00:59.700]   And you, of course, always go to speed limit.
[05:00:59.700 --> 05:01:00.560]   Always.
[05:01:00.560 --> 05:01:05.640]   This is why I love having this car in Spain because they're a little more relaxed.
[05:01:05.640 --> 05:01:09.080]   Not entirely relaxed, but more relaxed than they are in a lot of places.
[05:01:09.080 --> 05:01:14.700]   In Denmark, I kid you not, if you are on the highway and you go more than twice the speed limit,
[05:01:14.700 --> 05:01:17.540]   they confiscate your car and keep it.
[05:01:17.540 --> 05:01:19.200]   You're not getting it back.
[05:01:19.200 --> 05:01:21.080]   They don't even care if it's your car or not.
[05:01:21.080 --> 05:01:24.780]   Like if you were boring my car and you went twice the speed limit, it's gone.
[05:01:24.780 --> 05:01:27.560]   So they don't do that in Spain.
[05:01:27.560 --> 05:01:33.460]   I mean, in most places, except for the German Autobahn, they get pissy if you go twice the speed limit
[05:01:33.460 --> 05:01:35.220]   for all sorts of fair reasons.
[05:01:35.400 --> 05:01:38.400]   I'm not advocating that you should be going much more than that.
[05:01:38.400 --> 05:01:42.760]   But there are certain special roads where you can't open things up and no one's in harm's
[05:01:42.760 --> 05:01:42.960]   way.
[05:01:42.960 --> 05:01:44.600]   And that's an incredible sensation.
[05:01:44.600 --> 05:01:47.720]   And I do think that some of those speed limits actually are kind of silly.
[05:01:47.720 --> 05:01:49.720]   And I'm not just saying that in a vacuum.
[05:01:49.720 --> 05:01:52.840]   In Germany, they have the glorious Autobahn.
[05:01:52.840 --> 05:01:56.840]   And on the Autobahn, there is no speed limit in a bunch of segments.
[05:01:57.840 --> 05:02:02.960]   And they're so committed to their speed limitless Autobahn, which is, by the way, very weird
[05:02:02.960 --> 05:02:03.620]   of Germans.
[05:02:03.620 --> 05:02:05.040]   They usually love rules.
[05:02:05.040 --> 05:02:07.120]   They usually are very precise about it.
[05:02:07.120 --> 05:02:09.140]   And then they have this glorious thing called the Autobahn.
[05:02:09.140 --> 05:02:15.400]   There was a great case a couple of years ago where a guy took out a Bugatti Chiron, went
[05:02:15.400 --> 05:02:21.060]   400 kilometers an hour on the Autobahn and he filled it and put it on YouTube and a case
[05:02:21.060 --> 05:02:24.700]   was brought against him because even though they don't have a speed limit, they do have
[05:02:24.700 --> 05:02:26.200]   rules that you can't drive recklessly.
[05:02:26.200 --> 05:02:27.760]   And he won the case.
[05:02:27.760 --> 05:02:28.760]   He wasn't driving recklessly.
[05:02:28.760 --> 05:02:31.340]   He was just going very, very fast.
[05:02:31.860 --> 05:02:33.720]   I've done the Autobahn a couple of times.
[05:02:33.720 --> 05:02:41.120]   My wife and I went on a road trip in Europe in 2009 and I got the Lamborghini Guiata we
[05:02:41.120 --> 05:02:43.080]   were driving up to 200 miles an hour.
[05:02:43.080 --> 05:02:47.500]   And I'd driven 200 miles an hour or close to it on a racetrack before.
[05:02:47.500 --> 05:02:48.420]   That feels like one thing.
[05:02:48.420 --> 05:02:52.520]   Driving on a public road, 200 miles an hour feels really, really fast.
[05:02:52.520 --> 05:02:53.180]   Scary?
[05:02:53.180 --> 05:02:55.320]   Actually, a little scary, yes.
[05:02:55.320 --> 05:03:00.660]   Because you constantly think like on a racetrack, you know the road, you know the surface, you
[05:03:00.660 --> 05:03:03.100]   can walk the track and most of the time you can know if there's a dip.
[05:03:03.100 --> 05:03:05.780]   On a public road, you can't know if there's suddenly a pothole.
[05:03:05.780 --> 05:03:10.580]   Presumably, there's not going to be a pothole on the German Autobahn, but it does feel a little
[05:03:10.580 --> 05:03:12.840]   scary, but also exhilarating.
[05:03:12.840 --> 05:03:16.420]   Speed is just intrinsically really fun.
[05:03:16.420 --> 05:03:19.200]   I don't know anyone I've taken out in a fast car.
[05:03:19.200 --> 05:03:21.180]   Well, actually, I do know a few people.
[05:03:21.180 --> 05:03:23.660]   Most people I take out in a fast car, they grin.
[05:03:23.660 --> 05:03:28.100]   It's a human reaction to grin when you go really fast.
[05:03:28.100 --> 05:03:30.260]   Do you know what the fastest you've ever gone?
[05:03:30.900 --> 05:03:31.720]   I was probably at Le Mans.
[05:03:31.720 --> 05:03:37.300]   I think when the LMP2s were at their maximum power and had 600 horsepower and really sticky
[05:03:37.300 --> 05:03:42.840]   tires, we were going 340 kilometers an hour, which is just over 200 miles an hour.
[05:03:42.840 --> 05:03:44.100]   A bit over 200 miles an hour.
[05:03:44.100 --> 05:03:46.440]   That does feel fast.
[05:03:46.700 --> 05:03:51.780]   And it's really interesting with speed is that the difference between going, let's say, 150
[05:03:51.780 --> 05:03:55.440]   and 160 doesn't feel that much.
[05:03:55.440 --> 05:03:57.620]   Actually, those 10 miles an hour.
[05:03:57.620 --> 05:04:04.320]   But the difference between going 190 and 200 feels crazy faster, which as a percentage change
[05:04:04.320 --> 05:04:07.420]   is actually less than going from 150 to 160.
[05:04:07.740 --> 05:04:14.340]   But there's some sense of exponentiality once you get up to those limits, where it's just
[05:04:14.340 --> 05:04:15.580]   on a complete different level.
[05:04:15.580 --> 05:04:20.160]   Yeah, because to me, like 110, 120 feels fast.
[05:04:20.160 --> 05:04:21.520]   200.
[05:04:22.260 --> 05:04:24.160]   That's crazy.
[05:04:24.160 --> 05:04:25.180]   It really is crazy.
[05:04:25.180 --> 05:04:34.100]   I got to ask you about the details of your programming setup, the IDE, all that kind of stuff.
[05:04:34.100 --> 05:04:38.700]   Let's paint the picture of the perfect programming setup.
[05:04:38.700 --> 05:04:41.500]   Do you have a programming setup that you enjoy?
[05:04:41.500 --> 05:04:42.440]   Are you very flexible?
[05:04:42.920 --> 05:04:50.160]   Like how many monitors, what kind of keyboard, what kind of chair, what kind of desk?
[05:04:50.160 --> 05:04:55.980]   It's funny because if you'd asked me, let's see, a year and a half ago, I would have given
[05:04:55.980 --> 05:04:59.900]   you the same answer as I would have given anyone for basically 20 years.
[05:04:59.900 --> 05:05:01.940]   I want a Mac.
[05:05:01.940 --> 05:05:05.220]   I like the Magic Keyboard.
[05:05:05.220 --> 05:05:09.200]   I like the single monitor.
[05:05:09.620 --> 05:05:15.860]   Apple makes an awesome 6K, 32-inch XDR screen that I still haven't found anyone who'd beaten,
[05:05:15.860 --> 05:05:20.160]   that I still use, even though I switched away from Apple computers, I still use their monitor
[05:05:20.160 --> 05:05:21.780]   because it's just fantastic.
[05:05:21.780 --> 05:05:24.420]   But I've always been a single screen kind of guy.
[05:05:24.420 --> 05:05:27.280]   I do like a big screen, but I don't want multiple screens.
[05:05:27.280 --> 05:05:31.500]   I've never found that that really works with my perception.
[05:05:31.500 --> 05:05:33.980]   I want to be able to just focus on a single thing.
[05:05:33.980 --> 05:05:35.900]   I don't want all of it all over the place.
[05:05:35.900 --> 05:05:40.220]   And I've always used multiple virtual desktops and been able to switch back and forth between
[05:05:40.220 --> 05:05:40.760]   those things.
[05:05:40.760 --> 05:05:44.880]   But the setup I have today is Linux.
[05:05:44.880 --> 05:05:50.500]   I switched to a little over a year ago after I finally got fed up with Apple enough that
[05:05:50.500 --> 05:05:52.020]   I couldn't do that anymore.
[05:05:52.560 --> 05:06:03.880]   And then I use this low-profile mechanical keyboard called the Low Free Flow 84, which is just the
[05:06:03.880 --> 05:06:07.920]   most glorious-sounding keyboard I've ever heard.
[05:06:07.920 --> 05:06:12.880]   I know there are a lot of connoisseurs of mechanical keyboards that will probably contest me on this.
[05:06:12.880 --> 05:06:16.200]   This is too thocky or too clicky or too clacky or whatever.
[05:06:16.200 --> 05:06:25.160]   But for me, the Low Free Flow 84 is just a delight that I did not even know existed, which
[05:06:25.160 --> 05:06:27.820]   is so funny because, I mean, I've been programming for a long time.
[05:06:27.820 --> 05:06:31.120]   Mechanical keyboards have been a thing for a long time.
[05:06:31.120 --> 05:06:34.240]   And the keyboard, when you look at it like this, it just kind of, it looks plain.
[05:06:34.240 --> 05:06:40.820]   It doesn't look extravagant, but the tactile sensation you get out of pushing those keys,
[05:06:40.820 --> 05:06:46.200]   the talky sound that you hear when the keys hit the board, it's just sublime.
[05:06:46.200 --> 05:06:54.860]   And I'm kicking myself that I was in this Mac bubble for so long that I wasn't even in the
[05:06:54.860 --> 05:06:56.420]   market to find this.
[05:06:56.420 --> 05:07:01.800]   I didn't, I knew mechanical keyboards existed, but to be blunt, I thought it was a bit of a
[05:07:01.800 --> 05:07:06.380]   nerd thing that only real nerds that were much more nerdy than me would ever care about.
[05:07:07.540 --> 05:07:10.800]   And then I got out of the Apple bubble and suddenly I had to find everything again.
[05:07:10.800 --> 05:07:11.940]   I had to find a new mouse.
[05:07:11.940 --> 05:07:13.080]   I had to find a new keyboard.
[05:07:13.080 --> 05:07:14.100]   I had to find everything.
[05:07:14.100 --> 05:07:16.960]   And I thought like, all right, let me give mechanical keyboards a try.
[05:07:16.960 --> 05:07:18.700]   And I gave quite a few of them a try.
[05:07:18.700 --> 05:07:21.720]   The Keychron is one of the big brands in that.
[05:07:21.720 --> 05:07:22.820]   I didn't like that at all.
[05:07:22.820 --> 05:07:24.320]   I tried a bunch of other keyboards.
[05:07:24.320 --> 05:07:29.540]   And then I finally found this keyboard and I just went like angels of singing.
[05:07:29.540 --> 05:07:31.140]   Where have you been my whole life?
[05:07:31.140 --> 05:07:34.940]   We spent as programmers so much of our time interacting with those keys.
[05:07:35.060 --> 05:07:37.720]   It really kind of matters in a way I didn't fully appreciate.
[05:07:37.720 --> 05:07:41.700]   I used to defend the Apple Magic keyboard.
[05:07:41.700 --> 05:07:42.640]   Like, it's great.
[05:07:42.640 --> 05:07:43.420]   It's actually a great keyboard.
[05:07:43.420 --> 05:07:47.840]   And I think for what it is, this ultra low profile, ultra low travel is actually a really
[05:07:47.840 --> 05:07:48.380]   nice keyboard.
[05:07:48.380 --> 05:07:53.440]   But once you've tried a longer travel mechanical keyboard, there's no going back.
[05:07:54.320 --> 05:07:59.140]   You do have to remember in many ways, both on the software side and the hardware side, that
[05:07:59.140 --> 05:08:02.520]   you do spend a lot of hours behind the computer.
[05:08:02.520 --> 05:08:04.140]   It's worth investing in.
[05:08:04.140 --> 05:08:09.060]   And also worth exploring until you find the thing where the angels start singing or whatever.
[05:08:09.060 --> 05:08:09.820]   That's exactly right.
[05:08:09.820 --> 05:08:14.220]   And I actually do regret that a little bit, especially with this damn keyboard.
[05:08:14.660 --> 05:08:19.160]   I could have been listening to these beautiful, thawky keys for years and years.
[05:08:19.160 --> 05:08:25.700]   But sometimes you have to get really pissed off before you open your eyes and see that something
[05:08:25.700 --> 05:08:26.300]   else exists.
[05:08:26.300 --> 05:08:27.620]   I feel the same way about Linux.
[05:08:27.620 --> 05:08:34.120]   So I've been using Linux on the server since late 90s, probably.
[05:08:34.120 --> 05:08:36.000]   We ran servers on Linux back then.
[05:08:36.000 --> 05:08:39.340]   I never seriously considered it as a desktop option.
[05:08:39.720 --> 05:08:42.420]   I never ran Linux before directly myself.
[05:08:42.420 --> 05:08:44.120]   I always thought, do you know what?
[05:08:44.120 --> 05:08:46.080]   I just, I want to focus on programming.
[05:08:46.080 --> 05:08:50.080]   I don't have time for all these configuration files and all this setup bullshit and whatnot.
[05:08:50.080 --> 05:08:51.880]   And Apple is close enough.
[05:08:51.880 --> 05:08:53.580]   It's built on Unix underpinnings.
[05:08:53.580 --> 05:08:55.660]   Why do I need to bother with Linux?
[05:08:55.660 --> 05:08:58.100]   And again, it was one of those things.
[05:08:58.100 --> 05:09:07.400]   I needed to try new things and try something else to realize that there is other things other
[05:09:07.400 --> 05:09:08.300]   than Apple.
[05:09:08.500 --> 05:09:09.760]   And again, it's not because I hate Apple.
[05:09:09.760 --> 05:09:11.200]   I think they still make good computers.
[05:09:11.200 --> 05:09:14.780]   I think a lot of the software is still also pretty okay.
[05:09:14.780 --> 05:09:19.380]   But I have come to realize that as a web developer, Linux is just better.
[05:09:19.380 --> 05:09:20.780]   Linux is just better.
[05:09:20.780 --> 05:09:23.280]   It's closer to what I deploy on.
[05:09:23.280 --> 05:09:25.260]   The tooling is actually phenomenal.
[05:09:25.680 --> 05:09:32.780]   And if you spend a bit of time setting it up, you can record a reproducible environment that
[05:09:32.780 --> 05:09:38.560]   I've now done with this Omacube concept or project that I've done that I can set up a new Linux
[05:09:38.560 --> 05:09:40.640]   machine in less than 30 minutes.
[05:09:40.640 --> 05:09:41.440]   And it's perfect.
[05:09:41.440 --> 05:09:42.640]   It's not pretty good.
[05:09:42.640 --> 05:09:44.280]   It's not like I still need to spend two hours.
[05:09:44.280 --> 05:09:49.960]   It's perfect because you can code all aspects of the development environment into this.
[05:09:49.960 --> 05:09:50.980]   And I didn't know.
[05:09:50.980 --> 05:09:55.900]   I didn't even know, to be fair, that Linux could look as good as it can.
[05:09:56.360 --> 05:10:03.180]   If you look at a stock Ubuntu or Fedora boot, I mean, not that it's ugly, but I'd pick the
[05:10:03.180 --> 05:10:04.060]   Mac in the day of the week.
[05:10:04.060 --> 05:10:06.400]   You look at a Omacube.
[05:10:06.400 --> 05:10:09.380]   I mean, I'm biased here, of course, because I built it with my own sensibilities.
[05:10:09.380 --> 05:10:11.960]   But I look at that and go like, this is better.
[05:10:11.960 --> 05:10:13.200]   This is beautiful.
[05:10:13.200 --> 05:10:19.120]   And then you look at some of those true Linux rising setups where people go nuts with everything
[05:10:19.120 --> 05:10:24.380]   and you go, oh, yeah, I remember when computers used to be fun in this way, when there was
[05:10:24.380 --> 05:10:29.660]   this individuality and the setup and it wasn't just all bland, the sameness.
[05:10:29.660 --> 05:10:34.200]   And I think that's the flip side sometimes of something like Apple, where they have really
[05:10:34.200 --> 05:10:36.380]   strong opinions and they have really good opinions.
[05:10:36.380 --> 05:10:38.580]   They have very good taste and it looks very nice.
[05:10:38.580 --> 05:10:40.260]   And it also looks totally the same.
[05:10:40.260 --> 05:10:45.680]   And Linux has far more variety and far more texture and flavor, sometimes also annoyances
[05:10:45.680 --> 05:10:46.960]   and bugs and whatever.
[05:10:46.960 --> 05:10:49.180]   But I run Linux now.
[05:10:49.180 --> 05:10:54.140]   It's Ubuntu-based with the Omacube stuff on top, the low-free keyboard.
[05:10:54.140 --> 05:11:02.460]   I use a Logitech, what's it called, the MS3 mouse, which I love how it feels in my hand.
[05:11:02.460 --> 05:11:03.560]   I don't love how it looks.
[05:11:03.560 --> 05:11:08.140]   I actually was a Magic Mouse stan for the longest time.
[05:11:08.140 --> 05:11:13.460]   I thought it was genius that Apple integrated the trackpad into a mouse and I used that.
[05:11:13.460 --> 05:11:17.720]   And I always thought it was ridiculous that people would slag it just because you had to
[05:11:17.720 --> 05:11:19.220]   charge it by flipping it over.
[05:11:19.220 --> 05:11:23.440]   Because the battery would last for three months and then you'd charge it for half an hour.
[05:11:23.440 --> 05:11:27.460]   I thought like, that's a perfect compatibility with my sensibilities.
[05:11:27.560 --> 05:11:30.880]   I don't mind giving up a little inconvenience if something is beautiful.
[05:11:30.880 --> 05:11:32.140]   And that Magic Mouse is beautiful.
[05:11:32.140 --> 05:11:34.740]   But it wasn't going to work on Linux, so I found something else.
[05:11:34.740 --> 05:11:40.160]   The MS3 is nice, but I sometimes do wish, like, the Magic Mouse is pretty good.
[05:11:40.160 --> 05:11:45.660]   Yeah, Linux is really great for customizing everything, for tiling, for macros, for all of that.
[05:11:45.660 --> 05:11:52.200]   I also do the same in Windows with AutoHotKey, where you just customize the whole thing to your preferences.
[05:11:52.600 --> 05:11:56.300]   If you're a developer, you should learn how to control your environment with the keyboard.
[05:11:56.300 --> 05:12:00.220]   It's just, it's faster, it's more fluid.
[05:12:00.220 --> 05:12:06.820]   I think one of those silly things I've come to truly appreciate about my AlmaCoop setup is that I can,
[05:12:06.820 --> 05:12:11.120]   in whatever time it takes to refresh the screen, probably five milliseconds,
[05:12:11.120 --> 05:12:13.520]   switch from one virtual desktop to another.
[05:12:14.520 --> 05:12:17.780]   Even on Windows, you can't get it that smooth.
[05:12:17.780 --> 05:12:20.020]   You can get close, you can't get it that smooth.
[05:12:20.020 --> 05:12:29.200]   On macOS, for whatever reason, Apple insists on having this infuriating animation when you switch between virtual desktops,
[05:12:29.200 --> 05:12:31.260]   which makes it just that you don't want to.
[05:12:31.260 --> 05:12:36.140]   You don't want to run full-screen apps because it's too cumbersome to switch between the virtual desktops.
[05:12:36.140 --> 05:12:42.880]   The kind of immediacy that you can get from a wonderful Linux setup in that regard is just next level.
[05:12:42.880 --> 05:12:50.940]   Yeah, and it seems like a subtle thing, but, you know, difference in milliseconds and latency between switching the virtual desktops, for example.
[05:12:50.940 --> 05:12:52.520]   I don't know, it changes.
[05:12:52.520 --> 05:12:54.520]   It changes how you use the computer.
[05:12:54.520 --> 05:12:55.460]   It really does.
[05:12:55.460 --> 05:12:56.800]   Similar thing with VR, right?
[05:12:56.800 --> 05:13:01.180]   If there's some kind of latency or, like, it just completely takes you out of it.
[05:13:01.520 --> 05:13:08.460]   And it's funny, I actually had to watch, I think it was the Primogen on YouTube, when he was showing off his setup.
[05:13:08.460 --> 05:13:11.880]   And I was seeing how quickly he was switching between those virtual desktops.
[05:13:11.880 --> 05:13:16.860]   And I'd always been using virtual desktops, but I didn't like switching too much because just of that latency.
[05:13:16.860 --> 05:13:18.520]   And it's like, oh, you can do that on Linux?
[05:13:18.520 --> 05:13:19.940]   Oh, that's pretty cool.
[05:13:19.940 --> 05:13:24.680]   So I run that, and then my editor of choice now is NeoVim.
[05:13:24.680 --> 05:13:25.180]   Oh, good.
[05:13:25.180 --> 05:13:25.740]   All right.
[05:13:25.740 --> 05:13:26.940]   Well, we're out of time.
[05:13:26.940 --> 05:13:31.200]   All right, you did, for many, many years, you used, what is it, TextMate?
[05:13:31.200 --> 05:13:32.620]   Yes, TextMate.
[05:13:32.620 --> 05:13:35.660]   That was actually, that was the main blocker of moving away from Apple.
[05:13:35.660 --> 05:13:38.700]   Everything else I thought, you know what, I can swing it.
[05:13:38.700 --> 05:13:43.740]   But TextMate was, and is, a wonderful editor.
[05:13:43.740 --> 05:13:46.780]   One, I helped birth into this world.
[05:13:46.780 --> 05:13:55.040]   The programmer, Alan Uggle, is a good friend of mine, all the way back from those, the party days when we were lugging our computers around.
[05:13:55.040 --> 05:13:57.220]   And he was a big Mac guy.
[05:13:57.220 --> 05:14:00.600]   And in 2005, he was writing this editor.
[05:14:00.600 --> 05:14:09.700]   And I helped him with the project management of kind of keeping him on track, keeping him focused on getting something released because I really wanted it for myself.
[05:14:10.080 --> 05:14:12.800]   And I thought this was the last editor.
[05:14:12.800 --> 05:14:14.120]   I thought I was never going to switch.
[05:14:14.120 --> 05:14:18.740]   Forgive me for not knowing, but how featureful is this editor?
[05:14:18.740 --> 05:14:19.260]   Is this?
[05:14:19.260 --> 05:14:26.420]   It's quite featureful, but it's a GUI-driven editor in some regards.
[05:14:26.420 --> 05:14:35.280]   It was really early on with ways of recording macros and having sort of sophisticated syntax highlighting.
[05:14:35.280 --> 05:14:39.780]   And it did a bunch of firsts, and it was just a really pleasant editing experience.
[05:14:39.780 --> 05:14:43.200]   I think these days, a lot of people would just use VS Code.
[05:14:43.200 --> 05:14:47.720]   VS Codes exist in the same universe as TextMate in some ways.
[05:14:47.920 --> 05:14:53.120]   And actually, I think it's compatible with the original TextMate bundles, the original TextMate format.
[05:14:53.120 --> 05:14:55.380]   So it really trailed a path there.
[05:14:55.380 --> 05:14:57.940]   But it also just didn't evolve.
[05:14:57.940 --> 05:15:00.760]   Now, a lot of people saw a huge problem with that.
[05:15:00.760 --> 05:15:02.400]   They were like, oh, it needs to have more features.
[05:15:02.400 --> 05:15:03.240]   It needs to have all these things.
[05:15:03.240 --> 05:15:10.480]   I was like, I'm happy with this text editor that hasn't changed at all, basically, when Alan stopped working on it for a decade or more.
[05:15:10.600 --> 05:15:15.100]   I don't need anything else, because as our original discussion went, I don't want an IDE.
[05:15:15.100 --> 05:15:19.440]   I don't want the editor to write code for me.
[05:15:19.440 --> 05:15:20.680]   I want a text editor.
[05:15:20.680 --> 05:15:24.000]   I want to interact with characters directly.
[05:15:24.000 --> 05:15:30.240]   And NeoVim allows me to do that in some ways that are even better than TextMate.
[05:15:30.240 --> 05:15:31.160]   And I love TextMate.
[05:15:31.160 --> 05:15:40.360]   But VI, as you know, once you learn the commands, and it sounds, I sometimes feel like VI fans overplay how difficult it is to learn,
[05:15:40.440 --> 05:15:46.660]   because it makes them perhaps seem kind of more awesome that they were able to do it, it's not that difficult.
[05:15:46.660 --> 05:15:56.320]   And it doesn't take that long, in my opinion, to learn just enough combo moves to get that high of, holy shit, I could not do this in any other editor.
[05:15:56.320 --> 05:15:57.260]   How long did it take you?
[05:15:57.260 --> 05:15:58.460]   And by the way, I don't know.
[05:15:58.460 --> 05:15:59.800]   I'm still, I haven't yet.
[05:15:59.800 --> 05:16:07.980]   I know intellectually, but just like with kids, I haven't gone in all the way, and I haven't used Vim.
[05:16:07.980 --> 05:16:09.940]   You have a treat in mind.
[05:16:10.280 --> 05:16:20.160]   I switched in about, I had three days, when I switched here about a year ago, I had three days of cursing, where I thought it was absolutely terrible, and it was never going to happen.
[05:16:20.160 --> 05:16:22.100]   And I had three days of annoyance.
[05:16:22.100 --> 05:16:24.720]   And already the next week, I was like, this is sweet.
[05:16:24.720 --> 05:16:25.560]   I'm not going anywhere.
[05:16:25.560 --> 05:16:26.260]   Oh, wow.
[05:16:26.640 --> 05:16:31.020]   But I also had a bit of a head start about 20 years ago in the early 2000s.
[05:16:31.020 --> 05:16:35.600]   I tried Vim for like a summer, and it didn't stick.
[05:16:35.600 --> 05:16:38.240]   I didn't, for whatever reason, love it at the time.
[05:16:38.240 --> 05:16:39.860]   But NeoVim is really good.
[05:16:39.860 --> 05:16:44.280]   The key to NeoVim is to realize that you don't have to build the whole damn editor yourself.
[05:16:44.540 --> 05:16:48.740]   There's a lot of NeoVim stans who are like, here's how to write the config from scratch.
[05:16:48.740 --> 05:16:52.000]   Over 17 episodes, it's going to take you three weeks.
[05:16:52.000 --> 05:16:54.040]   I don't care that much.
[05:16:54.420 --> 05:16:55.320]   I love a great editor.
[05:16:55.320 --> 05:16:58.020]   I love to tailor it a little bit, but not that much.
[05:16:58.020 --> 05:17:02.460]   So you have to pair NeoVim with this thing called LazyVim.
[05:17:02.460 --> 05:17:10.760]   LazyVim.org is a distribution for NeoVim that takes all the drudgery out of getting an amazing
[05:17:10.760 --> 05:17:12.720]   editor experience right out of the box.
[05:17:12.720 --> 05:17:15.020]   Ridiculous question.
[05:17:15.020 --> 05:17:16.740]   We talked about a bunch of programming languages.
[05:17:16.740 --> 05:17:19.380]   You told us how much you love JavaScript.
[05:17:19.380 --> 05:17:21.700]   It's your second favorite programming language.
[05:17:23.480 --> 05:17:25.860]   Would TypeScript be the third then?
[05:17:25.860 --> 05:17:28.120]   TypeScript wouldn't even be in this universe.
[05:17:28.120 --> 05:17:31.980]   I hate TypeScript as much as I like JavaScript.
[05:17:31.980 --> 05:17:37.500]   So what you hate, oh man, I'm not smart enough to understand the math of that.
[05:17:37.500 --> 05:17:37.860]   Okay.
[05:17:37.860 --> 05:17:44.420]   Before I ask about other programming languages, what's, if you can encapsulate your hatred
[05:17:44.420 --> 05:17:49.740]   of TypeScript into something that could be human interpretable, what would be the reasoning?
[05:17:50.300 --> 05:17:56.680]   JavaScript smells a lot like Ruby when it comes to some aspects of its metaprogramming.
[05:17:56.680 --> 05:18:02.520]   And TypeScript just complicates that to an infuriating degree when you're trying to write
[05:18:02.520 --> 05:18:03.400]   that kind of code.
[05:18:03.400 --> 05:18:08.040]   And even when you're trying to write the normal kind of code, none of the benefits that accrue
[05:18:08.040 --> 05:18:11.580]   to people who like it, like autocompletion, is something I care about.
[05:18:11.820 --> 05:18:14.920]   I don't care about autocompletion because I'm not using an IDE.
[05:18:14.920 --> 05:18:21.140]   Now, I understand that that is part of what separates it and why I don't see the benefits.
[05:18:21.140 --> 05:18:22.160]   I only see the costs.
[05:18:22.160 --> 05:18:23.640]   I see the extra typing.
[05:18:23.640 --> 05:18:29.740]   I see the type gymnastics that you sometimes have to do and where a bunch of people give
[05:18:29.740 --> 05:18:31.820]   up and just do any instead, right?
[05:18:31.860 --> 05:18:35.480]   Like that they don't actually use the type system because it's just too frustrating to
[05:18:35.480 --> 05:18:35.720]   use.
[05:18:35.720 --> 05:18:43.140]   So I've ever only felt the frustration of TypeScript and the obfuscation of TypeScript in the code
[05:18:43.140 --> 05:18:46.140]   that gave me no payoff.
[05:18:46.140 --> 05:18:48.120]   Again, I understand that there is a payoff.
[05:18:48.120 --> 05:18:49.540]   I don't want the payoff.
[05:18:49.800 --> 05:18:56.260]   So for my situation, I'm not willing to make the trade and I'm not willing to take a language
[05:18:56.260 --> 05:19:03.660]   that's underneath is as dynamic of a language as Ruby is and then turn it into this pretend
[05:19:03.660 --> 05:19:04.840]   statically typed language.
[05:19:04.840 --> 05:19:07.720]   I find that just intellectually insulting.
[05:19:07.720 --> 05:19:10.880]   Do you think it will and do you think it should die, TypeScript?
[05:19:10.880 --> 05:19:14.160]   I don't want to take something away from people who enjoy it.
[05:19:14.160 --> 05:19:16.820]   So if you like TypeScript, all the most part of you.
[05:19:16.820 --> 05:19:20.900]   If you're using TypeScript because you think that's what a professional program is supposed
[05:19:20.900 --> 05:19:22.940]   to do, here's my permission.
[05:19:22.940 --> 05:19:24.100]   You don't have to use TypeScript.
[05:19:24.100 --> 05:19:30.680]   There's something deeply enjoyable about a brilliant programmer such as yourself.
[05:19:30.680 --> 05:19:32.700]   DHH talking shit.
[05:19:32.700 --> 05:19:35.540]   It's just, it's like one of my favorite things in life.
[05:19:35.540 --> 05:19:40.680]   What are the top three programming languages everyone should learn if you're talking to a
[05:19:40.680 --> 05:19:40.940]   beginner?
[05:19:40.940 --> 05:19:43.400]   I would 100% start with Ruby.
[05:19:43.400 --> 05:19:49.700]   It is magic for beginners in terms of just understanding the core concepts of conditionals
[05:19:49.700 --> 05:19:52.360]   and loops and whatever, because it makes it so easy.
[05:19:52.360 --> 05:19:58.720]   Even if you're just making a shell program that's outputting to the terminal, getting hello world
[05:19:58.720 --> 05:20:06.700]   running in Ruby is basically puts, P-U-T-S, space, start quotes, hello world, end quote.
[05:20:06.700 --> 05:20:07.120]   You're done.
[05:20:07.120 --> 05:20:07.780]   Right?
[05:20:07.820 --> 05:20:09.120]   There's no fluff.
[05:20:09.120 --> 05:20:10.700]   There's nothing to wrap it into.
[05:20:10.700 --> 05:20:16.220]   There are other languages that does that, especially in the Perl or Python would be rather similar,
[05:20:16.220 --> 05:20:17.620]   but Go would not.
[05:20:17.620 --> 05:20:18.520]   Java would not.
[05:20:18.520 --> 05:20:22.440]   There's a lot of other languages that have a lot more ceremony and boilerplate.
[05:20:22.440 --> 05:20:23.600]   Ruby has none of it.
[05:20:23.600 --> 05:20:25.920]   So it's a wonderful starting language.
[05:20:26.100 --> 05:20:33.400]   There's a book called Learn to Program by Pine that uses Ruby essentially to just teach basic
[05:20:33.400 --> 05:20:36.800]   programming principles that I've seen heavily recommended.
[05:20:36.800 --> 05:20:38.040]   So that's a great language.
[05:20:38.040 --> 05:20:39.340]   How quickly would you go to Rails?
[05:20:39.340 --> 05:20:40.720]   It depends on what you want to do.
[05:20:40.720 --> 05:20:43.260]   If you want to build web applications, go to Rails right away.
[05:20:43.260 --> 05:20:44.840]   Learn Ruby along with Rails.
[05:20:44.840 --> 05:20:51.040]   Because I think what really helps power through learning programming is to build programs that
[05:20:51.040 --> 05:20:52.220]   you want, right?
[05:20:52.220 --> 05:20:56.280]   If you're just learning it in the abstract, it's difficult to motivate yourself to actually
[05:20:56.280 --> 05:20:56.660]   do it well.
[05:20:56.660 --> 05:20:59.020]   Some people learn languages just for the fun of them.
[05:20:59.020 --> 05:21:00.760]   Most people do not.
[05:21:00.760 --> 05:21:03.160]   Most people learn it because they have a mission.
[05:21:03.160 --> 05:21:04.900]   They want to build a program.
[05:21:04.900 --> 05:21:06.020]   They want to become a programmer.
[05:21:06.020 --> 05:21:07.740]   So you got to use it for something real.
[05:21:07.740 --> 05:21:11.500]   And I actually find that it's easier to learn programming that way too, because it drives your
[05:21:11.500 --> 05:21:12.280]   learning process.
[05:21:12.840 --> 05:21:14.560]   You can't just learn the whole thing up front.
[05:21:14.560 --> 05:21:20.180]   You can't just sit down and read the language specification and then go like, ooh, like Neo.
[05:21:20.180 --> 05:21:21.440]   Now I know Kung Fu.
[05:21:21.440 --> 05:21:22.380]   Now I know Ruby.
[05:21:22.380 --> 05:21:23.900]   It doesn't download that way.
[05:21:23.900 --> 05:21:27.480]   You actually have to type it out in anger on a real program.
[05:21:27.480 --> 05:21:28.600]   Yeah.
[05:21:28.600 --> 05:21:29.980]   Yeah, for sure.
[05:21:29.980 --> 05:21:30.800]   So I would start there.
[05:21:30.800 --> 05:21:33.020]   But then number two, I probably would be JavaScript.
[05:21:33.020 --> 05:21:38.600]   Because JavaScript just is the language you need to know if you want to work with the web.
[05:21:38.600 --> 05:21:42.080]   And the web is the greatest application platform of all time.
[05:21:42.180 --> 05:21:46.820]   If you're making business software, collaboration software, all this kind of stuff.
[05:21:46.820 --> 05:21:51.400]   If you're making video games, you should probably go off and learn C++ or C or something else
[05:21:51.400 --> 05:21:51.820]   like that.
[05:21:51.820 --> 05:21:56.020]   But if you're in the realm of web applications, you got to learn JavaScript.
[05:21:56.020 --> 05:21:58.220]   Regardless of what else you learn, you got to learn JavaScript.
[05:21:58.220 --> 05:22:06.680]   So if you're learning Ruby, what does Ruby not have in terms of programming concepts that you
[05:22:06.680 --> 05:22:08.400]   would need other languages for?
[05:22:08.400 --> 05:22:14.800]   I don't know if there's any concepts missing, but it doesn't have the speed or the low-level
[05:22:14.800 --> 05:22:20.420]   access of memory manipulation that you would need to build a 3D gaming engine, for example.
[05:22:20.500 --> 05:22:21.940]   No one's going to build that in Ruby.
[05:22:21.940 --> 05:22:27.720]   You can build quite low-level stuff when it comes to web technologies in Ruby.
[05:22:27.720 --> 05:22:32.340]   But at some point, you're going to hit the limit and you should use something else.
[05:22:32.340 --> 05:22:34.560]   I'm not someone who prescribes just Ruby for everything.
[05:22:34.560 --> 05:22:40.200]   Just once you reach the level of abstraction that's involved with web applications, Ruby is
[05:22:40.200 --> 05:22:41.180]   superb.
[05:22:41.720 --> 05:22:46.600]   But if you're writing, for example, an HTTP proxy, go.
[05:22:46.600 --> 05:22:47.740]   It's great for that.
[05:22:47.740 --> 05:22:52.720]   We've written quite a few HTTP proxies lately at the company for various reasons, including
[05:22:52.720 --> 05:22:54.080]   our cloud exit and so forth.
[05:22:54.080 --> 05:22:57.940]   And Kevin, one of the programs I'm working with, he writes all of that in Go.
[05:22:57.940 --> 05:23:02.680]   Go just have the primitives and it has the pace and the speed to do that really well.
[05:23:02.680 --> 05:23:05.180]   I highly recommend it.
[05:23:05.180 --> 05:23:08.280]   If you're writing an HTTP general proxy, do it in Go.
[05:23:08.280 --> 05:23:09.220]   Great language for that.
[05:23:09.420 --> 05:23:11.580]   Don't write your business logic in Go.
[05:23:11.580 --> 05:23:14.100]   I know people do, but I don't see the point in that.
[05:23:14.100 --> 05:23:15.780]   So what would you say there are three?
[05:23:15.780 --> 05:23:18.800]   So GoRuby, plus Rails, JavaScript.
[05:23:18.800 --> 05:23:23.140]   Yeah, if you're interested in working with the web, I'd probably pick those three.
[05:23:23.140 --> 05:23:24.520]   Go, Ruby, and JavaScript.
[05:23:24.520 --> 05:23:26.220]   Go, Ruby, and JavaScript.
[05:23:26.220 --> 05:23:26.600]   Okay.
[05:23:26.600 --> 05:23:27.760]   Functional languages?
[05:23:27.760 --> 05:23:29.040]   Someone's talking about OCaml?
[05:23:29.040 --> 05:23:32.060]   There's always, they are always going to show up.
[05:23:32.060 --> 05:23:39.340]   It must be some kind of OCaml industrial complex or something like this, but they always
[05:23:39.340 --> 05:23:40.540]   say mention OCaml.
[05:23:40.540 --> 05:23:45.720]   I love that there are people who love functional languages to that degree.
[05:23:45.720 --> 05:23:47.200]   Those people are not me.
[05:23:47.200 --> 05:23:48.140]   I don't care at all.
[05:23:48.140 --> 05:23:54.580]   I care about functional principles when they help me in these isolated cases where that's
[05:23:54.580 --> 05:23:55.540]   just better than everything else.
[05:23:55.540 --> 05:23:58.960]   But at heart, I'm an object-oriented guy.
[05:23:58.960 --> 05:24:00.620]   That's just how I think about programs.
[05:24:00.620 --> 05:24:02.120]   That's how I like to think about programs.
[05:24:02.120 --> 05:24:06.800]   That's how I carve up a big problem space into a domain language.
[05:24:06.800 --> 05:24:10.080]   Objects are my jam.
[05:24:10.560 --> 05:24:11.060]   Yeah, me too.
[05:24:11.060 --> 05:24:19.120]   So I programmed in Lisp a bunch for AI applications for basic Othello chess engines, that kind
[05:24:19.120 --> 05:24:24.500]   of stuff, and I just try OCaml just to force myself to program just a very basic game of
[05:24:24.500 --> 05:24:24.860]   life.
[05:24:24.860 --> 05:24:25.360]   Yeah.
[05:24:25.360 --> 05:24:25.980]   A little simulation.
[05:24:25.980 --> 05:24:31.780]   It's much, you know, Lisp is just parentheses everywhere.
[05:24:31.780 --> 05:24:33.760]   It's actually not readable at all.
[05:24:33.760 --> 05:24:36.280]   That's the problem I've had with Lisp.
[05:24:36.740 --> 05:24:39.200]   OCaml is very, very intuitive, very readable.
[05:24:39.200 --> 05:24:39.900]   That's nice.
[05:24:39.900 --> 05:24:42.860]   I really should pick up a language like that at some point.
[05:24:42.860 --> 05:24:45.620]   I've been programming long enough that it's a little embarrassing that I haven't actually
[05:24:45.620 --> 05:24:50.040]   done anything real in anger in a fully functionally programmed language.
[05:24:50.040 --> 05:24:55.540]   Yeah, but I have to figure out, I'm sure there's an answer to this, what can I do that would
[05:24:55.540 --> 05:25:02.120]   be useful for me, like that I actually want to build, that a functional language is better
[05:25:02.120 --> 05:25:03.100]   suited for.
[05:25:03.100 --> 05:25:03.540]   That's right.
[05:25:03.540 --> 05:25:05.680]   Because I really want to experience the language properly.
[05:25:05.680 --> 05:25:06.280]   That's right.
[05:25:06.280 --> 05:25:10.980]   Yeah, because I'm still, yeah, I'm very, at this point, I'm very object-oriented, brained.
[05:25:10.980 --> 05:25:11.700]   Yes.
[05:25:11.700 --> 05:25:13.360]   And that's my problem, too.
[05:25:13.360 --> 05:25:18.500]   I just, I don't care as much about these low-level problems in computer science.
[05:25:18.500 --> 05:25:19.540]   I care about the high level.
[05:25:19.540 --> 05:25:21.300]   I care about writing software.
[05:25:21.300 --> 05:25:28.760]   I care about the abstraction layer that really floats well with web applications and business
[05:25:28.760 --> 05:25:29.120]   logic.
[05:25:29.120 --> 05:25:33.400]   And I just, I've come to accept that about myself, even though, as we talked about when I
[05:25:33.400 --> 05:25:35.980]   was a kid, I really wanted to become a games programmer.
[05:25:35.980 --> 05:25:39.640]   And then I saw what it took to write a collision detection engine.
[05:25:39.640 --> 05:25:41.280]   And I go like, yeah, that's not me at all.
[05:25:41.280 --> 05:25:47.040]   I'm never going to be into vector matrix manipulation or any of that stuff.
[05:25:47.040 --> 05:25:48.880]   It's way too much math.
[05:25:49.660 --> 05:25:53.960]   And I'm more of a writing person than I am of a math person.
[05:25:53.960 --> 05:26:00.960]   I mean, you just, in the way you were speaking today, you have like a poetic literary approach
[05:26:00.960 --> 05:26:02.240]   to programming.
[05:26:02.240 --> 05:26:03.220]   Yes.
[05:26:03.220 --> 05:26:04.120]   Yeah.
[05:26:04.120 --> 05:26:05.300]   That's actually exactly right.
[05:26:05.360 --> 05:26:11.640]   So I did actually a keynote at RailsConf 10 years ago where I called myself a software
[05:26:11.640 --> 05:26:12.060]   writer.
[05:26:12.060 --> 05:26:13.760]   I mean, I'm not the first person to say that.
[05:26:13.760 --> 05:26:20.300]   Software writer has been in the vernacular for a long time, but the modern identity that
[05:26:20.300 --> 05:26:24.320]   most programmers adopt when they're trying to be serious is software engineer.
[05:26:24.320 --> 05:26:26.080]   And I reject that label.
[05:26:26.080 --> 05:26:27.260]   I'm not an engineer.
[05:26:27.260 --> 05:26:32.680]   Occasionally I dabble in some engineering, but the vast majority of the time I'm a software
[05:26:32.680 --> 05:26:33.080]   writer.
[05:26:33.200 --> 05:26:38.420]   I write software for human consumption and for my own delight.
[05:26:38.420 --> 05:26:45.100]   I can get away with that because I'm working in a high level language like Ruby, working
[05:26:45.100 --> 05:26:48.580]   on collaboration software and to-do lists and all the other stuff.
[05:26:48.580 --> 05:26:56.500]   Again, if I was trying to apply my talent to writing 3D game engines, no, that's not the
[05:26:56.500 --> 05:26:57.120]   right mindset.
[05:26:57.120 --> 05:26:58.360]   That's not the right identity.
[05:26:58.360 --> 05:27:04.120]   But I find that the software engineering identity flattens thing a little bit.
[05:27:04.120 --> 05:27:08.380]   I'd like to think that we have software writers and software mathematicians, for example.
[05:27:08.380 --> 05:27:13.420]   And then those are actually richer ways of describing the abstraction level that you're
[05:27:13.420 --> 05:27:15.280]   working at than engineer.
[05:27:16.400 --> 05:27:16.660]   Yeah.
[05:27:16.660 --> 05:27:25.020]   And I think if AI becomes more and more successful, I think we'll need the software writer skill
[05:27:25.020 --> 05:27:26.500]   more and more.
[05:27:26.500 --> 05:27:33.400]   Because it feels like that's the realm of which, because it's not writer, you're going to have
[05:27:33.400 --> 05:27:34.800]   to do the software.
[05:27:34.800 --> 05:27:37.200]   You're going to have to be a computer person.
[05:27:37.440 --> 05:27:43.240]   But there's a more, I don't know, I just don't want to romanticize it, but it's more
[05:27:43.240 --> 05:27:43.620]   poetic.
[05:27:43.620 --> 05:27:44.420]   It's more literary.
[05:27:44.420 --> 05:27:48.080]   It's more feels like writing a good blog post than-
[05:27:48.080 --> 05:27:52.140]   I actually wish that AI had a bit higher standards for writing.
[05:27:52.140 --> 05:27:57.940]   I find the fact that it accepts my slobby, incomplete sentences a little offensive.
[05:27:57.940 --> 05:28:03.820]   I wish there was like a strict mode for AI where it would snap my fingers if it was just feeding
[05:28:03.820 --> 05:28:09.620]   it keywords and like speak proper, do pronunciation, do punctuation.
[05:28:09.620 --> 05:28:12.040]   Because I love that.
[05:28:12.040 --> 05:28:20.320]   I love crafting a just right sentence that hasn't been boiled down that it has no meat on it,
[05:28:20.320 --> 05:28:22.500]   has no character in it.
[05:28:22.500 --> 05:28:23.540]   It's succinct.
[05:28:23.540 --> 05:28:25.540]   It's not overly flowery.
[05:28:25.540 --> 05:28:26.300]   It's just right.
[05:28:26.300 --> 05:28:31.620]   That writing phase to me is just addictive.
[05:28:32.100 --> 05:28:37.380]   And I find that when programming is the best, it's almost equivalent exactly to that.
[05:28:37.380 --> 05:28:39.340]   You also have to solve a problem.
[05:28:39.340 --> 05:28:40.900]   You're not just communicating a solution.
[05:28:40.900 --> 05:28:43.120]   You have to actually figure out what are you trying to say.
[05:28:43.120 --> 05:28:45.280]   But even writing has that.
[05:28:45.280 --> 05:28:50.360]   Half the time when I start writing a blog post, I don't know exactly which arguments I'm going
[05:28:50.360 --> 05:28:50.740]   to use.
[05:28:50.740 --> 05:28:52.880]   They develop as part of the writing process.
[05:28:52.880 --> 05:28:55.920]   And that's how writing software happens too.
[05:28:55.920 --> 05:28:58.740]   You know roughly the kind of problem you're trying to solve.
[05:28:58.740 --> 05:29:01.360]   You don't know exactly how you're going to solve it.
[05:29:01.360 --> 05:29:03.960]   And as you start typing, the solution emerges.
[05:29:03.960 --> 05:29:08.520]   And actually, as far as I understand, you and Jason are working on a new book.
[05:29:08.520 --> 05:29:11.500]   It's in the early days of that kind of topic.
[05:29:11.500 --> 05:29:17.440]   I think he said it's some, he tweeted that it's going to be titled something like, we don't
[05:29:17.440 --> 05:29:20.700]   know what we're doing up front or something like that, that kind of topic.
[05:29:20.700 --> 05:29:22.100]   And you figure out along the way.
[05:29:22.100 --> 05:29:23.420]   That's a big part of it.
[05:29:23.420 --> 05:29:29.500]   Trying to give more people the permission to trust their instincts and their own gut and
[05:29:29.500 --> 05:29:37.700]   realizing that developing that supercomputer in your stomach is actually the work of a career.
[05:29:37.700 --> 05:29:48.040]   And that you should not discard those feelings in preference to over, or not even complicated,
[05:29:48.040 --> 05:29:50.160]   to analytics, to intellectualism.
[05:29:50.160 --> 05:29:56.080]   Very often when we look at the big decisions we've had to make, they've come from the gut.
[05:29:56.180 --> 05:29:59.240]   Where you cannot fully articulate, like, why do I think this is the right thing?
[05:29:59.240 --> 05:30:02.620]   Well, because I've been in this business for 20 years and I've seen a bunch of things and
[05:30:02.620 --> 05:30:06.960]   I've talked to a bunch of people and that is percolating into this being the right answer.
[05:30:08.300 --> 05:30:13.020]   A lot of people are very skeptical about that in business or unable to trust it because it feels
[05:30:13.020 --> 05:30:14.320]   like they can't rationalize.
[05:30:14.320 --> 05:30:15.260]   Why are we doing something?
[05:30:15.260 --> 05:30:17.080]   Well, because I feel like it, damn it.
[05:30:17.080 --> 05:30:23.820]   That's a great privilege of being a bootstrapped independent founder who don't owe their business
[05:30:23.820 --> 05:30:25.760]   to someone else and doesn't have to produce a return.
[05:30:25.760 --> 05:30:29.860]   Because I feel like a lot of the bullshit really creeps in when you're trying to rationalize to
[05:30:29.860 --> 05:30:34.260]   other people why you do the things you do and why you take the decisions that you do.
[05:30:34.540 --> 05:30:39.420]   If you don't have anyone to answer to, you are free to follow your gut.
[05:30:39.420 --> 05:30:44.640]   And that's a hell of enjoyable way to work.
[05:30:44.640 --> 05:30:48.420]   And it's also in very often the correct way to work.
[05:30:48.420 --> 05:30:53.740]   Your gut knows a lot, like you can't articulate it, but it's spot on more times than not.
[05:30:53.740 --> 05:30:54.160]   Yeah.
[05:30:54.160 --> 05:30:56.560]   Having to make a plan can be a paralyzing thing.
[05:30:56.560 --> 05:30:59.580]   I've often, I mean, I suppose there's different kinds of brains.
[05:30:59.580 --> 05:31:03.680]   First of all, I can't wait to read that book if it materializes.
[05:31:03.680 --> 05:31:13.680]   I often feel like in the more interesting things I do in my life, I really don't know what I'm doing up front.
[05:31:13.680 --> 05:31:20.300]   And I think there's a lot of people around me that care for me, that really want me to know what I'm doing.
[05:31:20.300 --> 05:31:21.780]   They're like, what's the plan?
[05:31:21.780 --> 05:31:23.820]   What's the, why are you doing this crazy thing?
[05:31:24.520 --> 05:31:28.040]   And I, if I, if I had to wait until I have a plan, I'm not going to do it.
[05:31:28.040 --> 05:31:31.500]   People are, they have different brains on this kind of stuff.
[05:31:31.500 --> 05:31:35.220]   Some people really are planners and it maybe energizes them.
[05:31:35.520 --> 05:31:45.540]   But I think most creative pursuits, most really interesting, most novel pursuits are like, you kind of have to just take the leap and then just figure out as you go.
[05:31:45.960 --> 05:31:52.500]   My favorite essay in Rework is the last one and it's entitled, Inspiration is Perishable.
[05:31:52.500 --> 05:32:01.940]   And I think that captures a lot of it, that if you take the time to do a detailed plan, you may very well have lost the inspiration by the time you're done.
[05:32:02.080 --> 05:32:11.960]   If you follow the inspiration in that moment and trust your gut, trust your own competence that you will figure it out, you're going to get so much more back.
[05:32:11.960 --> 05:32:17.400]   You're going to go on the adventure you otherwise wouldn't have, whether that's just a business decision or a life decision.
[05:32:17.400 --> 05:32:20.900]   You have to seize that inspiration.
[05:32:20.900 --> 05:32:29.920]   There's a great set of children's books written by this Japanese author about chasing an idea and trying to get a hold of it.
[05:32:29.920 --> 05:32:37.480]   And it's beautifully illustrated as an idea, something that's floating around, as something you have to catch and latch onto.
[05:32:37.480 --> 05:32:40.820]   That I really feel captures this notion that inspiration is perishable.
[05:32:40.820 --> 05:32:41.520]   It'll disappear.
[05:32:41.520 --> 05:32:46.940]   If you just put it back on the shelf and say like, well, I got to be diligent about this.
[05:32:46.940 --> 05:32:52.100]   Sometimes I got to line up a plan, you may run out and then there's no, there's no steam to keep going.
[05:32:52.100 --> 05:32:55.400]   I have to ask you about open source.
[05:32:55.400 --> 05:33:00.680]   What does it take to run a successful open source project?
[05:33:00.680 --> 05:33:02.600]   You've spoken about that.
[05:33:02.600 --> 05:33:05.320]   It's a misconception that open source is democratic.
[05:33:05.320 --> 05:33:07.920]   It's actually meritocratic.
[05:33:07.920 --> 05:33:10.480]   That's a beautiful way to put it.
[05:33:10.480 --> 05:33:15.200]   So there's often is a kind of a benevolent dictator at top.
[05:33:16.220 --> 05:33:16.660]   Often.
[05:33:16.660 --> 05:33:18.900]   So can you just speak to that?
[05:33:18.900 --> 05:33:25.140]   Having run successful open source projects yourself and being a benevolent dictator yourself.
[05:33:25.140 --> 05:33:29.600]   Which is going to be a bit of a biased piece of evidence here.
[05:33:29.600 --> 05:33:32.880]   But why monarchy is best?
[05:33:32.880 --> 05:33:36.900]   You should definitely have dictators and they should control everything, especially when the dictator is me.
[05:33:37.280 --> 05:33:46.900]   Now, well, I think I learned very early on that a quick way to burn out in open source is to treat it as a business.
[05:33:47.040 --> 05:33:55.440]   As though you're users or customers, as though they have claims of legitimacy on your time and your attention and your direction.
[05:33:55.960 --> 05:33:59.840]   Because I faced this almost immediately with Ruby on Rails.
[05:33:59.840 --> 05:34:06.040]   As soon as it was released, there were a million people who had all sorts of opinions about where I ought to take it.
[05:34:06.040 --> 05:34:08.900]   And not just opinions, but actually demands.
[05:34:09.140 --> 05:34:14.000]   Unless you implement an Oracle database adapter, this is always going to be a toy.
[05:34:14.000 --> 05:34:25.420]   It was actually more or less that exact demand that prompted me to have a slide at one of the early Rails conferences that just said, fuck you.
[05:34:25.980 --> 05:34:27.060]   Yeah, I saw that.
[05:34:27.060 --> 05:34:29.040]   I'm not going to do what you tell me to.
[05:34:29.040 --> 05:34:31.540]   I'm here as a bringer of gift.
[05:34:31.540 --> 05:34:37.900]   I am sharing code that I wrote on my own time, on my own volition.
[05:34:37.900 --> 05:34:40.520]   And you don't have to say thank you.
[05:34:40.520 --> 05:34:42.000]   I mean, be nice if you did.
[05:34:42.000 --> 05:34:44.780]   You can take the code and do whatever you want with it.
[05:34:44.780 --> 05:34:46.780]   You can contribute back if you want.
[05:34:46.780 --> 05:34:50.480]   But you can't tell me what to do or where to go or how to act.
[05:34:50.480 --> 05:34:52.320]   I'm not a vendor.
[05:34:52.660 --> 05:35:03.840]   This is a fundamental misconception that users of open source occasionally step into because they're used to buying software from companies who really care about their business.
[05:35:03.840 --> 05:35:06.580]   I care about people using my software.
[05:35:06.580 --> 05:35:07.260]   I think it's great.
[05:35:07.260 --> 05:35:10.600]   But we don't have a transactional relationship.
[05:35:10.600 --> 05:35:15.960]   I don't get something back when you tell me what to do except grief.
[05:35:15.960 --> 05:35:18.240]   And I don't want it so you can keep it.
[05:35:18.540 --> 05:35:25.120]   So my open source philosophy from the start has been, I got to do this primarily for me.
[05:35:25.120 --> 05:35:28.700]   I love when other people find use in my open source.
[05:35:28.700 --> 05:35:30.020]   It's not my primary motivation.
[05:35:30.020 --> 05:35:32.340]   I'm not primarily doing it for other people.
[05:35:32.340 --> 05:35:34.780]   I'm primarily doing it for me and my own objectives.
[05:35:35.740 --> 05:35:43.060]   Because as Adam Smith said, it's not for the benevolence of the butcher that we expect our daily meat.
[05:35:43.060 --> 05:35:45.780]   It's for his self-interest.
[05:35:45.780 --> 05:35:56.340]   And I actually find that to be a beautiful thought that our comments increase in value when we all pursue our self-interest, certainly in the realm of open source.
[05:35:56.660 --> 05:36:04.580]   This is also why I reject this notion that open source is in some sort of crisis, that there's a funding crisis, that we have to spend more.
[05:36:04.580 --> 05:36:05.320]   No, we don't.
[05:36:05.320 --> 05:36:06.900]   Open source has never been doing better.
[05:36:06.900 --> 05:36:11.760]   Open source has never controlled more domains in software than it has right now.
[05:36:11.760 --> 05:36:13.640]   There is no crisis.
[05:36:14.040 --> 05:36:29.700]   There's a misconception from some people making open source and from a lot of people using open source that open source is primarily like commercial software, something you buy and something where you can then make demands as a customer and that the customer is always right.
[05:36:29.700 --> 05:36:31.420]   Customer is not always right.
[05:36:31.420 --> 05:36:34.540]   Not even in business, but certainly not in open source.
[05:36:34.540 --> 05:36:39.060]   In open source, the customer as it is, is a receiver of gifts.
[05:36:39.060 --> 05:36:42.100]   We are having a gift exchange.
[05:36:42.100 --> 05:36:43.980]   I show up and give you my code.
[05:36:43.980 --> 05:36:45.820]   If you like it, you can use it.
[05:36:45.820 --> 05:36:52.580]   And if you have some code that fits in with where I'm going with this, I would love to get those gifts back.
[05:36:52.580 --> 05:36:54.460]   And we can keep trading like that.
[05:36:54.460 --> 05:36:55.520]   I give you more gifts.
[05:36:55.520 --> 05:36:56.720]   You give me some of your gifts.
[05:36:56.720 --> 05:37:02.320]   Together, we pool all the gifts such that someone showing up brand new, just get a mountain of gifts.
[05:37:02.320 --> 05:37:10.220]   This is the magic thing of open source is it increases the total sum value of what's in the comments when we all pursue our own self-interest.
[05:37:10.220 --> 05:37:13.140]   So I'm building things for Rails that I need.
[05:37:13.140 --> 05:37:14.080]   And you know what?
[05:37:14.080 --> 05:37:15.320]   You want me to do that.
[05:37:15.320 --> 05:37:20.280]   You do not want me to build things that I don't need on behalf of other people because I'll do a crap job.
[05:37:20.820 --> 05:37:27.980]   I build much better software when I can evaluate the quality of that software by my own use.
[05:37:27.980 --> 05:37:30.560]   I need this feature.
[05:37:30.560 --> 05:37:32.500]   I'm going to build a good version of that feature.
[05:37:32.500 --> 05:37:34.640]   And I'm going to build just enough just for me.
[05:37:34.640 --> 05:37:35.880]   So I'm not going to bloat it.
[05:37:35.880 --> 05:37:38.380]   I'm not trying to attract a customer here.
[05:37:38.380 --> 05:37:40.120]   I'm not trying to see some angle.
[05:37:40.120 --> 05:37:42.320]   I'm just building what I need.
[05:37:42.860 --> 05:37:53.560]   And if you go into open source with that mentality that you're building for you and everything else is a bonus, I think you have all the ingredients to go to distance.
[05:37:53.560 --> 05:37:59.560]   I think the people who burn out in open source is when they go in thinking, I'm making all these gifts.
[05:37:59.780 --> 05:38:02.560]   I don't really need them myself, but I'm like hoping someone else does.
[05:38:02.560 --> 05:38:04.280]   And maybe they'll also give me some money.
[05:38:04.280 --> 05:38:06.300]   That's a losing proposition.
[05:38:06.300 --> 05:38:08.060]   It never basically works.
[05:38:08.060 --> 05:38:11.020]   If you want money for your software, you should just sell it.
[05:38:11.020 --> 05:38:17.100]   We have a perfectly fine model of commercial software that people can make that kind and then they can sell it.
[05:38:17.100 --> 05:38:21.100]   But I find a lot of confusion.
[05:38:21.100 --> 05:38:22.520]   Let's just call it that politely.
[05:38:22.520 --> 05:38:25.980]   In open source contributors who want to have their cake needed to.
[05:38:25.980 --> 05:38:29.020]   They like the mode of working with open source.
[05:38:29.020 --> 05:38:34.460]   They maybe even like the status that comes from open source, but they also would like to earn a living from making that open source.
[05:38:34.460 --> 05:38:46.700]   And therefore, they occasionally end up with the kind of grievances that someone who feels underappreciated at work will develop when others aren't doing enough to recognize their great gifts.
[05:38:46.700 --> 05:38:48.860]   And then they might walk away.
[05:38:48.860 --> 05:38:57.640]   I wish I had one of the I wish I had more insight into their mind state of the individual people that are running these projects.
[05:38:57.640 --> 05:39:03.960]   Like if they're feeling sad or they need more money or they're like, it's just such a dark box.
[05:39:04.080 --> 05:39:04.800]   It can be.
[05:39:04.800 --> 05:39:11.240]   I mean, of course, there's some communication, but I just sadly see too often they just kind of walk away.
[05:39:11.240 --> 05:39:11.780]   Right.
[05:39:11.780 --> 05:39:15.820]   And I think that's actually also part of the beauty of open source.
[05:39:15.820 --> 05:39:19.460]   You are not obligated to do this code forever.
[05:39:19.460 --> 05:39:22.620]   You're obligated to do this for as long as you want to do it.
[05:39:22.860 --> 05:39:24.260]   That's basically your own obligation.
[05:39:24.260 --> 05:39:28.380]   But there is, I know, okay, you might criticize this and push back.
[05:39:28.380 --> 05:39:32.340]   You did write a blog post on forever until the end of the internet with to that list.
[05:39:32.340 --> 05:39:38.020]   There is a beautiful aspect and you found a good balance there.
[05:39:38.020 --> 05:39:40.320]   But I don't know.
[05:39:40.320 --> 05:39:43.240]   You're bringing so much joy to people with this thing you created.
[05:39:44.240 --> 05:39:48.900]   It's not an obligation, but there's a real beauty to taking care of this thing you've created.
[05:39:48.900 --> 05:39:49.220]   There is.
[05:39:49.220 --> 05:39:50.180]   And not forgetting.
[05:39:50.180 --> 05:39:55.280]   I think what the open source creator is not seeing enough.
[05:39:55.280 --> 05:40:01.420]   I mean, there's like how many lives you're making better.
[05:40:01.420 --> 05:40:04.940]   There's certain pieces of software that I just quietly use a lot.
[05:40:04.940 --> 05:40:05.380]   Yes.
[05:40:05.880 --> 05:40:08.560]   And like they bring my life joy.
[05:40:08.560 --> 05:40:10.680]   And I wish I could communicate that well.
[05:40:10.680 --> 05:40:13.500]   There's ways to donate, but it's inefficient.
[05:40:13.500 --> 05:40:15.460]   It's usually hard to donate.
[05:40:15.460 --> 05:40:16.460]   It is.
[05:40:16.460 --> 05:40:20.380]   There's some ways for some people that made it easier.
[05:40:20.380 --> 05:40:22.200]   GitHub donations is one way of doing it.
[05:40:22.200 --> 05:40:26.100]   I donate to a few people, even though I don't love the paradigm.
[05:40:26.100 --> 05:40:28.300]   I also accept that we can have multiple paradigms.
[05:40:28.300 --> 05:40:33.960]   I accept that I can do open source for one set of motivations and other people can do open source for other motivations.
[05:40:33.960 --> 05:40:43.420]   We don't all have to do it the same way, but I do want to counter the misconception that open source is somehow in a crisis unless we all start paying for open source.
[05:40:43.420 --> 05:40:45.020]   That model already exists.
[05:40:45.020 --> 05:40:46.240]   It's commercial software.
[05:40:46.240 --> 05:40:52.220]   It works very well, and plenty of great companies have been built off the back of it, and the expectations are very clear.
[05:40:52.220 --> 05:40:55.320]   I pay you this amount, and I get this software.
[05:40:55.320 --> 05:40:59.380]   Open source, once you start mixing money into it, gets real muddy real fast.
[05:40:59.640 --> 05:41:14.920]   And a lot of it is just from those misaligned expectations, that if you feel like you're starving artists as an open source developer, and you are owed X amount of money because your software is popular, you're delusional.
[05:41:15.160 --> 05:41:17.100]   And you need to knock that off.
[05:41:17.100 --> 05:41:21.320]   Just get back on track where you realize that you're putting gifts into the world.
[05:41:21.320 --> 05:41:25.760]   And if you get something back in terms of monetary compensation, okay, that's a bonus.
[05:41:26.040 --> 05:41:30.460]   But if you need that money back in terms of monetary compensation, you should just charge for software.
[05:41:30.460 --> 05:41:34.380]   Or go work for a software company that will employ you to do open source.
[05:41:34.380 --> 05:41:35.160]   There's tons of that.
[05:41:35.160 --> 05:41:40.360]   That is probably actually the primary mode that open source software is being developed in the world today.
[05:41:40.360 --> 05:41:45.860]   Commercial companies making open source that they need themselves and then contributing it back.
[05:41:46.400 --> 05:41:49.280]   So I'm glad you brought up, sort of like drew some hard lines here.
[05:41:49.280 --> 05:41:59.500]   It's a good moment to bring up what I think is the, maybe one of the greatest open source projects ever, WordPress.
[05:41:59.500 --> 05:42:11.980]   And you spoke up in October 24 about some of the stuff that's been going on with WordPress's founder, Matt Mullenweg,
[05:42:12.240 --> 05:42:15.540]   in a blog post, Open Source Royalty and Mad Kings.
[05:42:15.540 --> 05:42:23.440]   It's a really good blog post on sort of just the idea of Benevolent Dictators for Life, this model for open source projects.
[05:42:23.440 --> 05:42:34.040]   And then the basic implication was that Matt, as the BDFL of WordPress, has lost his way a bit with his battle with WP Engine.
[05:42:34.040 --> 05:42:38.220]   So I should also say that I really love WordPress.
[05:42:38.220 --> 05:42:39.420]   It brings me joy.
[05:42:39.640 --> 05:42:44.440]   I think it's a really, it's a beacon of what open source could be.
[05:42:44.440 --> 05:42:47.980]   I think it's made the internet better.
[05:42:47.980 --> 05:42:51.460]   A lot, a lot of people to create wonderful websites.
[05:42:51.460 --> 05:43:01.780]   And I also think, now you might disagree with this, but from everything I've seen, WP Engine just gives me bad vibes.
[05:43:03.320 --> 05:43:06.380]   I think they're not a good, the good guy in this.
[05:43:06.380 --> 05:43:07.940]   I don't like it.
[05:43:07.940 --> 05:43:09.620]   I understand the frustration.
[05:43:09.620 --> 05:43:13.700]   I understand all of it, but I don't think that excuses the behavior.
[05:43:13.700 --> 05:43:25.600]   There is a bit of a, see, this kind of counter to a little bit what you said, which is when you have an open source project of that size, there is a bit of a, like when you're the king.
[05:43:27.600 --> 05:43:33.060]   I, for a project of a kingdom that large, there's a bit of responsibility.
[05:43:33.060 --> 05:43:51.800]   Anyway, could you speak to your, maybe to your empathy of Matt and to your criticism and what, and maybe paint a path of how he and WordPress can be winning again.
[05:43:52.520 --> 05:43:58.400]   First, I'd echo what you said about what a wonderful thing it is that WordPress exists.
[05:43:58.400 --> 05:44:06.660]   There are not many projects in the open source world or in the world at large that has had as big of an impact on the internet as WordPress has.
[05:44:06.660 --> 05:44:11.100]   He deserves a ton of accolades for that work.
[05:44:11.720 --> 05:44:15.080]   So, that was my engagement, essentially, my premise.
[05:44:15.080 --> 05:44:15.880]   Do you know what?
[05:44:15.880 --> 05:44:23.280]   I have tremendous respect for what Matt has built with WordPress, what that entire ecosystem has built around itself.
[05:44:23.280 --> 05:44:24.860]   It's a true marvel.
[05:44:24.860 --> 05:44:31.360]   But there's some principles that are larger than my personal sympathies to the characters involved.
[05:44:31.360 --> 05:44:32.540]   I agree.
[05:44:33.140 --> 05:44:39.960]   The Silver Lake private equity company that's involved with WP Engine is not my natural ally.
[05:44:39.960 --> 05:44:48.120]   I'm not the natural ally of private equity doing some game with WP Engine.
[05:44:48.120 --> 05:44:51.360]   That's not my interest in the case.
[05:44:51.360 --> 05:44:55.220]   My interest is essentially a set of principles.
[05:44:55.220 --> 05:45:10.320]   And the principles are if you release something as open source, people are free to use it as they see fit and they are free to donate code or resources or money back to the community as they see fit.
[05:45:10.320 --> 05:45:32.520]   You may disagree about whether they've done enough, whether they should do more, but you can't show up after you've given the gift of free software to the world and then say, now that you've used that gift, you actually owe me a huge slide of your business because you got too successful using the thing I gave you for free.
[05:45:32.520 --> 05:45:34.520]   You don't get to take a gift back.
[05:45:34.520 --> 05:45:37.240]   That's why we have open source licenses.
[05:45:37.840 --> 05:45:42.540]   They stipulate exactly what the obligations are on both sides of the equation.
[05:45:42.540 --> 05:45:48.140]   The users of open source don't get to demand what the makers of open source do and how they act.
[05:45:48.140 --> 05:45:56.980]   And the makers of open source don't get to suddenly show up with a ransom note to the users and say, actually, you owe me for all sorts of use.
[05:45:56.980 --> 05:46:02.000]   I'm 100% allergic to that kind of interaction.
[05:46:02.000 --> 05:46:09.500]   And I think Matt, unfortunately, for whatever reason, got so wrapped up in what he was owed.
[05:46:09.500 --> 05:46:14.600]   That he failed to realize what he was destroying.
[05:46:14.600 --> 05:46:18.800]   WordPress and automatic already makes a ton of money.
[05:46:18.800 --> 05:46:20.560]   This is part of the wonder of WordPress.
[05:46:20.560 --> 05:46:24.840]   This is a project that generates hundreds of millions of dollars.
[05:46:25.560 --> 05:46:28.960]   And Matt didn't feel like he was getting enough of that.
[05:46:28.960 --> 05:46:31.920]   That's not a good argument, bro.
[05:46:31.920 --> 05:46:42.940]   You can't just violate the spirit and the letter of these open source licenses and just start showing up with demand letters, even to characters that are not particularly sympathetic.
[05:46:43.420 --> 05:46:48.040]   This goes to the root of my interpretation of open source in general.
[05:46:48.040 --> 05:46:57.780]   The GPL is a particular license that actually demands code from people who use it under certain circumstances.
[05:46:57.780 --> 05:46:59.540]   I've never liked the GPL.
[05:46:59.540 --> 05:47:02.640]   I don't want your shitty code if you don't want to give it to me.
[05:47:02.640 --> 05:47:04.940]   What am I going to do with that?
[05:47:04.940 --> 05:47:06.860]   Some code dump that you've...
[05:47:06.860 --> 05:47:11.000]   I'm not on board with that part of Stallman's vision at all.
[05:47:11.000 --> 05:47:12.820]   I love the MIT license.
[05:47:12.820 --> 05:47:17.160]   To me, that is the perfect license because it is mercifully short.
[05:47:17.160 --> 05:47:20.680]   I think it's two paragraphs, three paragraphs, really short.
[05:47:20.680 --> 05:47:23.760]   And it basically says, here's some software.
[05:47:23.760 --> 05:47:25.780]   It comes with no warranty.
[05:47:25.780 --> 05:47:27.780]   You can't sue me.
[05:47:27.780 --> 05:47:31.160]   You can't demand anything, but you can do whatever the hell you want with it.
[05:47:31.160 --> 05:47:32.400]   Have a nice life.
[05:47:32.400 --> 05:47:36.640]   That's a perfect open source interaction, in my opinion.
[05:47:36.640 --> 05:47:39.760]   And that license needs to be upheld.
[05:47:39.760 --> 05:47:42.220]   These licenses in general, even the GPL,
[05:47:42.220 --> 05:47:45.340]   even if I don't like it, we have to abide by them.
[05:47:45.340 --> 05:47:50.360]   Because if we just set aside those licenses when we, in a moment's notice, feel like something
[05:47:50.360 --> 05:47:52.320]   slightly unfair, we've lost everything.
[05:47:52.320 --> 05:47:57.680]   We've lost the entire framework that allowed open source to prosper and allowed open source
[05:47:57.680 --> 05:48:00.760]   to become such an integral part of commerce, too.
[05:48:00.760 --> 05:48:07.020]   I mean, back when open source was initially finding its feet, it was at war with commercial
[05:48:07.020 --> 05:48:07.480]   software.
[05:48:07.800 --> 05:48:10.900]   Stallman is at war with commercial software and always has been.
[05:48:10.900 --> 05:48:15.600]   Bill Gates was in return at war with open source for the longest time.
[05:48:16.860 --> 05:48:21.460]   The open source licenses and the clarity that they provide allowed us to end that war.
[05:48:21.920 --> 05:48:25.840]   Today, commercial software and open source software can peacefully coexist.
[05:48:25.840 --> 05:48:27.560]   I make commercial software.
[05:48:27.560 --> 05:48:28.420]   I sell Basecamp.
[05:48:28.420 --> 05:48:29.100]   I sell Hay.
[05:48:29.100 --> 05:48:32.560]   And then I also make a bunch of open source software that I give away for free as gifts.
[05:48:33.980 --> 05:48:37.980]   That can't happen if we start violating these contracts.
[05:48:37.980 --> 05:48:42.980]   No commercial company is going to go, let me base my next project off this piece of open
[05:48:42.980 --> 05:48:49.100]   source if I'm also running the liability that some mad maker is going to show up seven years
[05:48:49.100 --> 05:48:52.000]   in and demand I give them $50 million.
[05:48:53.000 --> 05:48:58.600]   That's not an environment conducive to commerce, collaboration, or anything else.
[05:48:58.600 --> 05:48:59.800]   And it's just basically wrong.
[05:48:59.800 --> 05:49:04.380]   I think there's one analysis that's all about kind of the practical outcomes of this, which
[05:49:04.380 --> 05:49:05.040]   I think are bad.
[05:49:05.040 --> 05:49:08.940]   There's also an argument that's simply about ethics.
[05:49:08.940 --> 05:49:10.440]   This is not right.
[05:49:10.440 --> 05:49:13.280]   You can't just show up afterwards and demand something.
[05:49:13.280 --> 05:49:17.580]   This is not too dissimilar, in my opinion, to the whole Apple thing we talked about earlier.
[05:49:17.580 --> 05:49:21.980]   Apple just showing up and feeling like they're entitled to 30% of everyone's business.
[05:49:22.120 --> 05:49:25.460]   No, that's not right.
[05:49:25.460 --> 05:49:26.660]   That's not fair.
[05:49:26.660 --> 05:49:36.940]   So I think Matt, unfortunately, kind of steered himself blind on the indignity he thought was
[05:49:36.940 --> 05:49:41.720]   being perpetrated against him because there was all this money being made by VP Engine making
[05:49:41.720 --> 05:49:45.920]   a good product and not giving quite enough back, in Matt's opinion.
[05:49:45.920 --> 05:49:48.600]   Tough, tough cookie.
[05:49:48.600 --> 05:49:51.680]   I think there, maybe I'm reading too much into it.
[05:49:51.680 --> 05:49:55.760]   But there might be some personal stuff too, which they weren't not only not giving enough,
[05:49:55.760 --> 05:50:00.000]   but probably implicitly promising that they will give.
[05:50:01.480 --> 05:50:06.760]   And then taking advantage of him in that way in his mind, just like interpersonal interaction.
[05:50:06.760 --> 05:50:10.420]   And then you get like interpersonally frustrated.
[05:50:10.420 --> 05:50:11.280]   I get that.
[05:50:11.280 --> 05:50:13.500]   You forget like the bigger picture ethics of it.
[05:50:13.500 --> 05:50:17.360]   It's like when a guy keeps saying, you know, promising he'll do something.
[05:50:17.360 --> 05:50:17.580]   Sure.
[05:50:18.280 --> 05:50:24.520]   And then you realize you wake up one day, like a year or two later, wait a minute, I was being
[05:50:24.520 --> 05:50:25.760]   lied to this whole time.
[05:50:25.760 --> 05:50:28.160]   And then that, I don't even know if it's about money.
[05:50:28.960 --> 05:50:30.080]   I'd get Matt too.
[05:50:30.080 --> 05:50:32.440]   It's totally fine to get Matt when people disappoint you.
[05:50:32.440 --> 05:50:42.040]   That's not justification for upending decades of open source licensees and the essential de facto
[05:50:42.040 --> 05:50:43.700]   case law we've established around it.
[05:50:43.700 --> 05:50:48.640]   This is why I chose to even weigh in on this because I like WordPress.
[05:50:48.760 --> 05:50:49.560]   I don't use WordPress.
[05:50:49.560 --> 05:50:50.780]   I'm not a part of that community.
[05:50:50.780 --> 05:50:54.220]   I don't actually have a dog in this fight.
[05:50:54.220 --> 05:50:58.520]   I'm biased, if anything, towards Matt, just as a fellow BDFL.
[05:50:58.520 --> 05:51:01.440]   I would like to see him do well with this.
[05:51:01.440 --> 05:51:05.580]   But I also think there's some principles at stake here that ring much louder.
[05:51:05.580 --> 05:51:11.580]   I don't want Rails to suddenly be tainted by the fact that it's open source and whether
[05:51:11.580 --> 05:51:15.900]   companies can rely on it and build businesses on it because, wait, maybe one day I'm going
[05:51:15.900 --> 05:51:19.720]   to turn Matt and I'm going to turn Matt King and I'm going to show up with a demand ransom
[05:51:19.720 --> 05:51:20.100]   letter.
[05:51:20.100 --> 05:51:21.220]   No, screw that.
[05:51:21.220 --> 05:51:24.600]   We have way more to protect here.
[05:51:24.600 --> 05:51:30.420]   There's way more at stake than your personal beef with someone or your perceived grievance
[05:51:30.420 --> 05:51:31.340]   over what you're owed.
[05:51:31.340 --> 05:51:32.380]   What would you recommend?
[05:51:32.380 --> 05:51:36.880]   What do you think you should do, can do to walk it back to heal?
[05:51:36.880 --> 05:51:40.680]   Decide.
[05:51:40.680 --> 05:51:43.320]   This is the curious thing.
[05:51:43.320 --> 05:51:45.320]   He could decide to give this up.
[05:51:45.320 --> 05:51:50.480]   That's very, very difficult for driven, ambitious people to do, to accept that they're wrong
[05:51:50.480 --> 05:51:52.720]   and to give up and lay down their sword.
[05:51:52.720 --> 05:51:56.920]   So I had a hope earlier on in this that that was possible.
[05:51:56.920 --> 05:52:00.300]   I haven't seen any evidence that Matt is interested in that.
[05:52:00.300 --> 05:52:02.420]   And I find that deeply regretful.
[05:52:02.420 --> 05:52:04.540]   But that's his prerogative.
[05:52:04.540 --> 05:52:09.560]   I continue to speak out when he's violating the spirit and ethics of open source.
[05:52:09.560 --> 05:52:14.920]   But I wish he would just accept that this was a really bad idea.
[05:52:14.920 --> 05:52:16.540]   He just he made a bad bet.
[05:52:16.540 --> 05:52:22.240]   And I thought I think he thought he'd just get away with it, that they just pay up and that
[05:52:22.240 --> 05:52:23.280]   he could put pressure.
[05:52:24.220 --> 05:52:42.300]   I mean, I know that temptation when you sit as the head of a very important project, you know that that comes with a great degree of power and you really need a great degree of discipline to rein that in and not exercise that power at every step where you feel aggrieved.
[05:52:42.380 --> 05:52:47.960]   I felt aggrieved a million times over in the 20 plus years of Ruby and Rails.
[05:52:47.960 --> 05:52:55.360]   I've really tried very hard not to let those sometimes petty, sometimes substantial grievances over time.
[05:52:55.360 --> 05:53:02.460]   Seab in to the foundation of the ecosystem and risk ruining everything.
[05:53:02.460 --> 05:53:06.700]   As the king of the Rails kingdom, has the power gotten to your head over the years?
[05:53:06.700 --> 05:53:07.980]   I'm sure it has.
[05:53:07.980 --> 05:53:09.540]   I mean, who wouldn't?
[05:53:09.540 --> 05:53:11.520]   Do you pace around in your chamber?
[05:53:11.520 --> 05:53:13.240]   I do.
[05:53:13.240 --> 05:53:14.800]   Occasionally.
[05:53:14.800 --> 05:53:19.980]   And I do marvel at both what's been built, what's been possible.
[05:53:19.980 --> 05:53:24.160]   Over a million applications have been made with Ruby on Rails by one estimate that I've seen.
[05:53:24.160 --> 05:53:31.200]   Businesses like Shopify and GitHub and a million others have been built on top of something that I started.
[05:53:31.200 --> 05:53:32.820]   That's very gratifying.
[05:53:32.820 --> 05:53:38.960]   But you really have to be careful not to smell your own exhaust too much.
[05:53:38.960 --> 05:53:46.920]   And you have to be just as careful not to listen too much to the haters and not to listen too much to the super fans either.
[05:53:46.920 --> 05:53:56.360]   That you assess the value and the sort of principles of what you're working towards on its own merits.
[05:53:56.360 --> 05:54:06.320]   I try to block that out and then just go, well, I'm working on Rails because I love to write Ruby.
[05:54:06.320 --> 05:54:10.560]   I love to use Ruby to make web applications.
[05:54:11.040 --> 05:54:19.480]   That's my North Star and I'll continue to do that and I'll continue to share all of the open source gifts that I uncover along the ways.
[05:54:19.480 --> 05:54:21.560]   And that's it.
[05:54:21.560 --> 05:54:22.600]   That's enough too.
[05:54:22.600 --> 05:54:24.620]   I don't have to get all of it out of it.
[05:54:24.620 --> 05:54:32.760]   This is sometimes just as with the guy who thought I'd given up on being Jira or something instead of doing Basecamp.
[05:54:33.060 --> 05:54:36.720]   There are people over the years who've asked, like, why didn't you charge for Rails?
[05:54:36.720 --> 05:54:39.460]   Like, don't you know how much money have been made of Rails?
[05:54:39.460 --> 05:54:43.840]   If we just look at something like Shopify, it's worth billions of dollars.
[05:54:43.840 --> 05:54:44.720]   I'm not a billionaire.
[05:54:44.720 --> 05:54:46.280]   And so freaking what?
[05:54:46.280 --> 05:54:48.200]   I got more than enough.
[05:54:48.200 --> 05:54:50.040]   I got plenty of my share.
[05:54:50.520 --> 05:55:01.300]   I will say, though, I'm also introspective enough to realize that if it hadn't panned out as well as it did for me on my own business, maybe I would have been more tempted.
[05:55:01.300 --> 05:55:15.180]   Maybe if you see other people build huge, successful companies off the back of your work and you really don't have a pot to piss in, you might be tempted to get a little upset about that.
[05:55:15.180 --> 05:55:25.420]   I've seen that in the Rails world as well, where there are people who contributed substantial bodies of work and then got really miffed when they didn't feel like they got enough back.
[05:55:25.420 --> 05:55:30.920]   I was fortunate enough that the business that Jason and I built with Ruby on Rails was as successful as it was.
[05:55:30.920 --> 05:55:35.700]   And I made the money I needed to make that I didn't need to chase the rest of it.
[05:55:36.160 --> 05:55:45.800]   But we should also just make explicit that many people in your position chase the money.
[05:55:45.800 --> 05:55:47.940]   It's not that difficult to chase.
[05:55:47.940 --> 05:55:49.720]   Basically, you turned away money.
[05:55:49.720 --> 05:55:52.740]   You made a lot of decisions that just turn away money.
[05:55:52.740 --> 05:55:53.820]   Maybe.
[05:55:53.820 --> 05:55:57.760]   I also think of this example with Matt.
[05:55:57.760 --> 05:56:00.660]   He probably thought there was easy money for the taking.
[05:56:00.660 --> 05:56:02.080]   And it wasn't so easy, was it?
[05:56:02.080 --> 05:56:07.100]   It looked like low-hanging dollar bills and they turned out to be some really sour grapes.
[05:56:07.100 --> 05:56:23.080]   It turned out he turned, he probably destroyed vast sums of money by undermining the whole WordPress trust and the ecosystem and putting question marks in the heads of folks who would choose to use WordPress or something else going forward.
[05:56:23.860 --> 05:56:27.540]   So, I often think when people think like, oh, you left money on the table.
[05:56:27.540 --> 05:56:28.960]   First of all, so what?
[05:56:28.960 --> 05:56:30.100]   I don't have to have all the money.
[05:56:30.100 --> 05:56:32.680]   But second of all, maybe the money wasn't on the table at all.
[05:56:32.680 --> 05:56:42.480]   And maybe the cost, even if you got the money, maybe the cost in other ways, as we've talked about, would outweigh all the money that you could have possibly gotten.
[05:56:42.880 --> 05:56:49.500]   Meaning, like, I think you said that the thing that makes you happy is flow and tranquility.
[05:56:49.500 --> 05:56:50.740]   Those two things.
[05:56:50.740 --> 05:56:50.980]   Yes.
[05:56:50.980 --> 05:56:52.740]   Beautifully, really beautifully put.
[05:56:52.740 --> 05:57:09.120]   And, you know, gaining money might assign to you responsibility of running a larger thing that takes away the flow that you gain from being, from fundamentally, for you, what flow means is programming.
[05:57:09.560 --> 05:57:16.960]   And then tranquility is like, I think you also have a beautiful post of like, nirvana is an empty schedule.
[05:57:16.960 --> 05:57:26.040]   When I look at an upcoming week and I see that I have no scheduled meetings at all, which is quite common, or maybe I just have one thing for one hour on one day.
[05:57:26.340 --> 05:57:29.980]   I think to myself, you know what, this could very easily have been very different.
[05:57:29.980 --> 05:57:33.400]   We could have been running a company of hundreds of people or thousands of people.
[05:57:33.400 --> 05:57:41.860]   And my entire calendar would have been packed, solid, with little Tetris blocks of other people's demands on my attention and time.
[05:57:41.860 --> 05:57:43.840]   And I would have been miserable as fuck.
[05:57:43.840 --> 05:57:44.260]   Yep.
[05:57:44.720 --> 05:57:50.340]   And I look at that and go like, what more can I ask for?
[05:57:50.340 --> 05:57:53.740]   Which is a really nice state of being, I'd actually say.
[05:57:53.740 --> 05:57:55.680]   I didn't have this always.
[05:57:55.940 --> 05:58:02.060]   I did have, early on in my career, some sense of, like, I need a little more, a little more security.
[05:58:02.060 --> 05:58:13.320]   And I remember this really interesting study where a bunch of researchers asked people who had made certain amounts of money, how much money would it take for you to feel secure?
[05:58:13.760 --> 05:58:17.080]   They'd ask people who had a million dollars net worth, how much money do you need?
[05:58:17.080 --> 05:58:19.060]   Probably need two million.
[05:58:19.060 --> 05:58:20.680]   Two million, then it'd be good.
[05:58:20.680 --> 05:58:22.920]   Then they asked people with a net worth of five million.
[05:58:22.920 --> 05:58:23.620]   How much do you need?
[05:58:23.620 --> 05:58:24.860]   Ten.
[05:58:24.860 --> 05:58:25.820]   I need ten.
[05:58:25.820 --> 05:58:27.460]   Ask people with ten million.
[05:58:27.460 --> 05:58:27.960]   What do you need?
[05:58:27.960 --> 05:58:28.260]   Twenty.
[05:58:28.260 --> 05:58:31.440]   Every single time, people would need double of what they did.
[05:58:31.440 --> 05:58:35.500]   I did that for a couple of doublings until I realized, you know what, this is silly.
[05:58:35.500 --> 05:58:39.760]   I am already where I wished I would be and a million times over.
[05:58:39.760 --> 05:58:43.460]   So what less is there to pursue?
[05:58:43.660 --> 05:58:47.800]   Now, that doesn't mean that if more money is coming my way, I'm going to say no to it.
[05:58:47.800 --> 05:58:48.460]   Of course not.
[05:58:48.460 --> 05:58:52.380]   But it does mean that I'm free to set other things higher.
[05:58:52.380 --> 05:59:00.960]   And I also do think you realize, as Jim Carrey would say, I wish everyone would get all the money that they wished for and they'd realize it wasn't the answer.
[05:59:00.960 --> 05:59:07.940]   That money solves a whole host of problems and anxieties, and then it creates a bunch of new ones.
[05:59:07.940 --> 05:59:13.560]   And then it also doesn't touch a huge swath of the human experience at all.
[05:59:13.560 --> 05:59:19.160]   The world is full of miserable, anxious, hurt, rich people.
[05:59:19.160 --> 05:59:23.100]   It's also full of miserable, anxious, poor people.
[05:59:23.100 --> 05:59:26.020]   And I'd rather be a miserable, anxious, rich person than a poor person.
[05:59:26.020 --> 05:59:29.400]   But it isn't this magic wand that make everything go away.
[05:59:29.400 --> 05:59:36.040]   And that's, again, one of those insights, just like having children, that you cannot communicate in words.
[05:59:36.200 --> 05:59:42.140]   I've never been able to persuade a person who's not wealthy that wealth wasn't going to solve all their problems.
[05:59:42.680 --> 05:59:49.920]   One quote you've returned to often that I enjoy a lot is the Coco Chanel quote of the best things in life are free.
[05:59:49.920 --> 05:59:54.100]   And the second best things are very, very expensive.
[05:59:54.700 --> 06:00:06.180]   And I guess the task is to focus on surrounding yourself with the best things in life, like family and all of this, and not caring about the other stuff.
[06:00:06.380 --> 06:00:08.980]   I would easily say you can care about the other stuff.
[06:00:08.980 --> 06:00:11.420]   Just know the order of priority.
[06:00:11.420 --> 06:00:26.120]   If you are blessed with a partner that you love, some children that you adore, you've already won the greatest prize that most humans are able to achieve.
[06:00:26.600 --> 06:00:34.800]   Most humans in this world, if they are of marital age and they have children, if you ask them what's the most important thing, they would all say that.
[06:00:34.800 --> 06:00:35.900]   They would all say that.
[06:00:35.900 --> 06:00:37.560]   No matter whether they're rich or poor.
[06:00:37.560 --> 06:00:42.520]   It's easy to lose sight of that when you're chasing the second best things.
[06:00:42.520 --> 06:00:43.300]   Because you know what?
[06:00:43.300 --> 06:00:44.100]   They're also very nice.
[06:00:44.100 --> 06:00:47.380]   I really like that Pagani Sonda.
[06:00:47.380 --> 06:00:55.460]   It was a very expensive car, and I would have no chance of acquiring it if I hadn't become rather successful in business.
[06:00:55.860 --> 06:00:57.320]   So I don't want to dismiss it either.
[06:00:57.320 --> 06:01:00.320]   It's great fun to have money.
[06:01:00.320 --> 06:01:08.260]   It's just not as fun for quite as long or as deep as you think it is.
[06:01:08.260 --> 06:01:23.200]   And these other things, having an occupation and a pursuit that you enjoy, being able to carry burdens with a stiff of a lip and with, again, a sense of meaning, is incredible.
[06:01:23.740 --> 06:01:33.280]   To have family, to have friends, to have hobbies, to have all these things that are actually available to most people around the world.
[06:01:33.280 --> 06:01:34.600]   That's winning.
[06:01:35.200 --> 06:01:38.580]   And it doesn't mean you have to discount your ambitions.
[06:01:38.580 --> 06:01:40.720]   It doesn't mean you can't reach for more.
[06:01:40.720 --> 06:01:53.820]   But it does mean it's pretty dumb if you don't realize that it's not going to complete you in some hocus pocus woo sense to make more.
[06:01:54.160 --> 06:01:55.300]   It really isn't.
[06:01:55.300 --> 06:02:02.300]   What gives you hope about the future of this whole thing we have going on here, human civilization?
[06:02:04.400 --> 06:02:12.380]   I find it easier to be optimistic than pessimistic because I don't know either way.
[06:02:12.380 --> 06:02:17.000]   So if I get to choose, why not just choose to believe it's going to pan out?
[06:02:17.000 --> 06:02:17.600]   Yeah.
[06:02:17.860 --> 06:02:21.720]   Like, we suffer more in our imagination than we do in reality.
[06:02:21.720 --> 06:02:24.100]   That's one of the quotes out of stoicism.
[06:02:24.100 --> 06:02:34.900]   And I also think we have a tendency, a lot of humans have a tendency, to be pessimistic in advance for things they don't know how it's going to pan out.
[06:02:34.900 --> 06:02:41.080]   Climate change, for example, is making a lot of people very anxious and very pessimistic about the future.
[06:02:41.400 --> 06:02:42.280]   You know nothing.
[06:02:42.280 --> 06:02:46.560]   Forty years ago, we thought the problem was that the planet was going to be too cool.
[06:02:46.560 --> 06:02:53.720]   I happen to believe that it's probably correct that the planet is getting too hot and that CO2 has something to do with it.
[06:02:53.720 --> 06:03:01.760]   Whether we have the right measures to fix it in time, if that's even possible or not, is completely up in the air.
[06:03:01.760 --> 06:03:02.700]   And we don't know.
[06:03:02.700 --> 06:03:07.900]   If you convince yourself with such certainty that the world is going to turn to shit, it is.
[06:03:07.900 --> 06:03:10.580]   Right up here, in your head, today.
[06:03:10.580 --> 06:03:15.960]   Hey, climate change might wipe out this entire species in 200 years.
[06:03:15.960 --> 06:03:17.860]   It's not next year.
[06:03:17.860 --> 06:03:20.420]   It's not 10 years from now.
[06:03:20.420 --> 06:03:24.380]   Life might become more unpleasant and there might be more negative effects and so on.
[06:03:24.380 --> 06:03:25.040]   Yes, okay.
[06:03:25.040 --> 06:03:28.160]   But then deal with that hardship when it arrives.
[06:03:28.160 --> 06:03:30.380]   Don't take that in advance.
[06:03:30.380 --> 06:03:35.520]   How are you helping Earth by just walking around being depressed?
[06:03:36.440 --> 06:03:40.240]   I think our whole conversation today is also an indication.
[06:03:40.240 --> 06:03:42.040]   It's just two humans talking.
[06:03:42.040 --> 06:03:43.920]   There's billions of us.
[06:03:43.920 --> 06:03:49.200]   And there is something about us that wants to solve problems and build cool stuff.
[06:03:49.200 --> 06:03:49.460]   Yes.
[06:03:49.460 --> 06:03:53.620]   And so we're going to build our way out of whatever shit we get ourselves into.
[06:03:53.620 --> 06:03:55.200]   This is what humans do.
[06:03:55.200 --> 06:04:03.960]   We create problems for ourselves and come up, figure out how to build rocket ships to get out of those problems.
[06:04:03.960 --> 06:04:07.480]   And sometimes the rocket ships create other problems like nuclear warheads.
[06:04:07.480 --> 06:04:13.820]   And then we'll, I'm sure, I hope, figure out ways how to avoid those problems.
[06:04:13.820 --> 06:04:15.160]   And then there'll be nanobots.
[06:04:15.160 --> 06:04:19.780]   And then the aliens will come and there'll be a massive war between the nanobots and the aliens.
[06:04:19.780 --> 06:04:22.880]   And that will bring all of us humans together.
[06:04:24.340 --> 06:04:34.360]   The funny thing, just to pick up one of the points you mentioned, the atom bomb, for example, when that was first invented, a lot of people thought we have essentially ended life on Earth, right?
[06:04:35.800 --> 06:04:51.720]   Or maybe we prevented World War III from happening in the past 80 years because assured mutual annihilation kept the superpowers from attacking each other, at least head on, and kept their fighting to proxy wars.
[06:04:51.720 --> 06:04:52.500]   You know what?
[06:04:52.500 --> 06:04:57.620]   Proxy wars are not great, but they're probably better than World War III with nuclear weapons.
[06:04:57.620 --> 06:05:04.040]   So it's quite difficult in the moment to tell what's actually benefit and what's not.
[06:05:04.040 --> 06:05:06.020]   And I think we should be a bit more humble.
[06:05:06.020 --> 06:05:11.780]   I've certainly become more humble over time of thinking I know which way it's going to turn.
[06:05:11.780 --> 06:05:22.000]   I think the pandemic was a huge moment for a lot of people where there was so much certainty about whether this intervention worked or that intervention didn't work.
[06:05:22.000 --> 06:05:24.740]   And most people were wrong.
[06:05:24.740 --> 06:05:34.200]   Certainly, a lot of very smart people, very qualified people got that just utterly and catastrophizingly wrong.
[06:05:34.820 --> 06:05:39.040]   So just a little intellectual humility, I think back upon that and go like, you know what?
[06:05:39.040 --> 06:05:41.920]   I'm not a PhD in virology.
[06:05:41.920 --> 06:05:47.540]   And I don't claim that like I somehow saw how it all was going to play out.
[06:05:47.540 --> 06:05:50.420]   But the people who were really experts in it, they got a bunch of it wrong.
[06:05:50.420 --> 06:05:51.620]   Nobody knows anything.
[06:05:51.620 --> 06:05:54.380]   I keep reminding myself of that every day.
[06:05:54.380 --> 06:05:55.800]   No one knows anything.
[06:05:55.800 --> 06:05:59.560]   We can't predict the economy a month out.
[06:05:59.560 --> 06:06:01.200]   We can't predict world affairs a month out.
[06:06:01.200 --> 06:06:02.660]   The world is just too complicated.
[06:06:02.660 --> 06:06:14.620]   Yeah, when I watched the Netflix documentary, Chimp Empire, and how, you know, there's a hierarchy of chimps, all of that looks eerily similar to us humans.
[06:06:14.620 --> 06:06:16.340]   We're recent descendants.
[06:06:16.340 --> 06:06:22.860]   So these experts, some of the chimps got a PhD, others don't.
[06:06:22.860 --> 06:06:24.880]   Others are really muscular.
[06:06:24.880 --> 06:06:27.400]   Others are the beta male kind.
[06:06:27.400 --> 06:06:28.860]   They're sucking up to the alpha.
[06:06:29.060 --> 06:06:33.980]   There's a lot of interesting dynamics going on that really maps cleanly to the geopolitics of the day.
[06:06:33.980 --> 06:06:38.120]   They don't have nuclear weapons, but the nature of their behavior is similar to ours.
[06:06:38.120 --> 06:06:42.460]   So I think, I think we barely know what's going on.
[06:06:42.460 --> 06:06:44.800]   But I do think there's like a basic
[06:06:44.800 --> 06:06:49.840]   will to cooperate.
[06:06:50.660 --> 06:06:56.460]   The basic compassion that underlies are just the human spirit that's there.
[06:06:56.460 --> 06:06:59.220]   And maybe that is just me being optimistic.
[06:06:59.220 --> 06:07:02.560]   But if that is indeed there, then we're going to be okay.
[06:07:02.560 --> 06:07:04.400]   The capacity is certainly there.
[06:07:04.400 --> 06:07:08.240]   Whether we choose that capacity or not, who knows and in what situation.
[06:07:08.240 --> 06:07:17.440]   I think accepting that we all have the capacity for both ways, for both incredible generosity and kindness and also cruelty.
[06:07:17.940 --> 06:07:26.280]   I think Jung with his whole theory of the shadow was really spot on that we all have that capacity in us.
[06:07:26.280 --> 06:07:32.760]   And accepting that it's our job to attempt to cultivate the better parts of our human nature
[06:07:32.760 --> 06:07:39.740]   is weighed against our propensity to sometime be the worst of ourselves.
[06:07:40.740 --> 06:07:42.780]   I'm excited to find out what's going to happen.
[06:07:42.780 --> 06:07:44.380]   It's so awesome to be human.
[06:07:44.380 --> 06:07:45.280]   I don't want to die.
[06:07:45.280 --> 06:07:48.720]   I kind of want to be alive for a while to see all the cool shit we do.
[06:07:48.720 --> 06:07:55.140]   And one of the cool things I want to see is all the software you create and all the things you tweet.
[06:07:55.140 --> 06:07:58.300]   All the trouble you get yourself into on Twitter.
[06:07:58.300 --> 06:08:01.120]   David, I'm a huge fan.
[06:08:01.120 --> 06:08:03.760]   Like I said, thank you for everything you've done for the world.
[06:08:04.220 --> 06:08:09.060]   For the millions of developers you've inspired and one of whom is me.
[06:08:09.060 --> 06:08:11.160]   And thank you for this awesome conversation, brother.
[06:08:11.160 --> 06:08:12.680]   Thanks so much for having me.
[06:08:12.680 --> 06:08:15.700]   Thanks for listening to this conversation with DHH.
[06:08:15.700 --> 06:08:22.080]   To support this podcast, please check out our sponsors in the description and consider subscribing to this channel.
[06:08:22.720 --> 06:08:27.600]   And now, let me leave you with some words from Rework by DHH and Jason Freed.
[06:08:27.600 --> 06:08:31.000]   What you do is what matters.
[06:08:31.000 --> 06:08:34.380]   Not what you think or say or plan.
[06:08:34.380 --> 06:08:36.580]   Thank you for listening.
[06:08:36.580 --> 06:08:38.820]   And hope to see you next time.
[06:08:38.820 --> 06:08:38.920]   Bye.
[06:08:38.920 --> 06:08:39.920]   Bye.
[06:08:39.920 --> 06:08:40.920]   Bye.
[06:08:40.920 --> 06:08:41.920]   Bye.
[06:08:41.920 --> 06:08:42.920]   Bye.
[06:08:42.920 --> 06:09:12.900]   Thank you.

