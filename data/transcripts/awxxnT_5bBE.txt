
[00:00:00.000 --> 00:00:11.000]   Okay, cool. So let's see here. So let me find -- actually, the paper is not pulled up. So let me load Zotero again. This is actually the code.
[00:00:11.000 --> 00:00:22.000]   So let me get rid of that. Okay. All right. Awesome. So the paper that I'm going to go over is this gene PT paper.
[00:00:22.000 --> 00:00:34.000]   So basically, the concept that -- the concept is basically to use the embedding -- GPT embedding.
[00:00:34.000 --> 00:00:40.000]   So actually -- so I haven't tried it yet, but presumably you could do this with any embedding.
[00:00:40.000 --> 00:00:51.000]   And so what they do conceptually, there's a good diagram here, is that first they just take -- there's like a database of gene to description.
[00:00:51.000 --> 00:00:54.000]   So you can give it a gene. You get back a description of that gene.
[00:00:54.000 --> 00:01:05.000]   And so you just put that into the embedding model. They used Ada2, but they -- you could do this with other ones.
[00:01:05.000 --> 00:01:11.000]   And in fact, they did try it with some others. And then you get back a vector.
[00:01:11.000 --> 00:01:17.000]   And then first of all, you can do certain clustering and other things just from there.
[00:01:17.000 --> 00:01:34.000]   But -- so there's also a technology called single cell sequencing, which means that they -- instead of -- so normally what happens is you have a cluster of --
[00:01:34.000 --> 00:01:50.000]   you have a sample from a person or whatever animal or plant. You take that sample, and then you like sort of just -- you know, conceptually speaking, you just stick it in a blender, find all the RNA.
[00:01:50.000 --> 00:02:05.000]   And then that gives you a -- or DNA, depending on what you're doing. You can -- DNA or RNA, and it gives you like the expression level of the gene or the genes itself so you can get for that whole sample, right?
[00:02:05.000 --> 00:02:16.000]   So there's different types of cells. If it's genes, then all the genes should be the same, unless you're looking at like certain epigenetic factors like chromatin and other things.
[00:02:16.000 --> 00:02:25.000]   So what I'm saying is that -- and I'm -- like I don't know a lot about this. I'm just talking about my very high level understanding here.
[00:02:25.000 --> 00:02:51.000]   Or RNA, which is -- so just to brief summary, genes are sort of like a program to make RNA. RNA, there's like a -- there's like a whole machinery in the cell that takes snippets of the DNA, and it uses that to replicate RNA, which then folds into proteins.
[00:02:51.000 --> 00:03:04.000]   And those proteins do various things. Some of them are -- so like proteins are just these long sequences of RNA that like spontaneously fold up into various shapes.
[00:03:04.000 --> 00:03:27.000]   And these -- sometimes these like perform functions in the cell like, you know, building structures in the cell, or they can be, you know, sort of -- they can like sort of be -- have functions like the molecules can bind to other molecules and used for signaling,
[00:03:27.000 --> 00:03:47.000]   or they can actually bind to the DNA itself and cause it to amplify or suppress the expression of a gene. So there's like this super nonlinear, highly complex, you know, sequence of things that interact with each other within the cell and then also these proteins
[00:03:47.000 --> 00:04:03.000]   can be like sort of end up on the surface of the cell and then other -- when cells bump against it, or, you know, other things bump against it, then they can, you know, you're signaling to those other things. So like that's -- okay, that's RJ's very, very poorly done genetics 101.
[00:04:03.000 --> 00:04:08.000]   So, anyway, you have these cells.
[00:04:08.000 --> 00:04:22.000]   There's a technology now that has become common in the last couple years, in which you can take each individual cell and look at the expression level of genes in that individual cell.
[00:04:22.000 --> 00:04:48.000]   So, you know, sort of you can imagine just like kind of like separating out the cells and then, you know, sort of like, you know, sticking each cell individually in a blender and looking at counting the, you know, sort of instance of RNA sequences in genes in that RNA expression of genes in that individual cell.
[00:04:48.000 --> 00:05:04.000]   So that's what -- so what we're looking at here -- so first of all, does anyone want to ask a question? That was really, you know, spontaneously bad explanation, but if anyone wants to understand that better, I'd be happy to do my best.
[00:05:04.000 --> 00:05:06.000]   Okay. Okay, good.
[00:05:06.000 --> 00:05:14.000]   I'll just -- my quick feedback is A is a lot more intuitive than B. B looks like gene attention.
[00:05:14.000 --> 00:05:21.000]   Yeah, so, okay, so here, let me, let me go over this diagram then. So what happens is you take one of these.
[00:05:21.000 --> 00:05:24.000]   So you have a, you have a cell.
[00:05:24.000 --> 00:05:39.000]   And then that cell, it's gone through a set of cells, N cells, and they've gone through this sequencing thing so that each -- so you have a, a expression level for each gene for each cell, right, so that's what this matrix is.
[00:05:39.000 --> 00:05:59.000]   So then, and then what you do is you take the embeddings from each of -- from, from GPT or wherever, in this case GPT, and you just weight them by the expression level in that particular cell.
[00:05:59.000 --> 00:06:03.000]   Right, so, so like I have all these genes.
[00:06:03.000 --> 00:06:11.000]   These are my embeddings for each gene so like each, each row is a gene.
[00:06:11.000 --> 00:06:17.000]   And then I just weight that for each cell by that gene, and then I sum them up.
[00:06:17.000 --> 00:06:34.000]   So now I have a -- for each cell I have like a single embedding that corresponds to that cell, which is just the weighted sum of all of the embeddings for each gene weighted by the expression level.
[00:06:34.000 --> 00:06:40.000]   Does that make sense? That's the core concept here so I want to make sure that came across clearly.
[00:06:40.000 --> 00:06:41.000]   Yeah.
[00:06:41.000 --> 00:06:44.000]   Okay. And then there's a second.
[00:06:44.000 --> 00:07:04.000]   There's a second mechanism that they also tried so C is just another way of doing this, where they just even simpler, they just take the, they, they look at the thousand highest expressed genes, and then they just put their name into a, into a string.
[00:07:04.000 --> 00:07:19.000]   And, you know, it starts with like cell one or in reality it's like a slightly longer prompt. And it just says, like, here's the, you know, here's like all the thousand most expressed genes in this cell.
[00:07:19.000 --> 00:07:33.000]   And then they stick each one of those into the embedding model and out comes a, you know, sort of n embedding embeddings. Yeah, n embeddings for all those cells.
[00:07:33.000 --> 00:07:51.000]   That cleared the mechanism. So this is like really, really, really simple in the sense that the high level mechanisms very straightforward. Of course there is the really complex transformer underneath that is doing all the textual embedding, which is, but
[00:07:51.000 --> 00:07:59.000]   but something that we most well many, many people in the paper club should understand pretty well.
[00:07:59.000 --> 00:08:02.000]   Okay, good. So, so then.
[00:08:02.000 --> 00:08:06.000]   So then, like, skipping over the related work.
[00:08:06.000 --> 00:08:23.000]   So, they, so basically, without going into too much detail they, I think that I've, you know, been pretty clear about what they do, they have like these 30,000 genes they do a bunch of duplication.
[00:08:23.000 --> 00:08:38.000]   And this is because what I mean a big part of this, getting this to work is actually just figuring out how to, like, all the different papers have different names for genes and there's, there's sort of like a whole bunch of databases and they all use
[00:08:38.000 --> 00:08:46.000]   slightly different, you know, sort of stuff so there is this one ensemble database which is this right here.
[00:08:46.000 --> 00:09:02.000]   And this ensemble database actually is like has a, the goal of it is to take all the different names for a gene and just give it one ID. And so they use this to sort of unify everything.
[00:09:02.000 --> 00:09:08.000]   And then. Okay, so then they have some different applications.
[00:09:08.000 --> 00:09:12.000]   They have this, you know, sort of like.
[00:09:12.000 --> 00:09:16.000]   Functionality class prediction, meaning.
[00:09:16.000 --> 00:09:22.000]   So like what is the impact of what is the function of this cell.
[00:09:22.000 --> 00:09:28.000]   And sort of like gene gene interaction.
[00:09:28.000 --> 00:09:33.000]   Sort of like other unsupervised stuff.
[00:09:33.000 --> 00:09:51.000]   And then like, like looking at different cell states and so they have data sets that are labeled or partly labeled for all these things so they can just use the embedding to test for, like, you test its accuracy and all these different things.
[00:09:51.000 --> 00:09:56.000]   Okay, so then, and then they have this, the results here.
[00:09:56.000 --> 00:10:10.000]   So if you look at, you know, so you have this confusion. Oh, okay yeah this confusion matrix. And you can see it you know like it kind of gets a lot of stuff right it looks like this protein coding one, which I think is one of the main things that you
[00:10:10.000 --> 00:10:28.000]   actually care about for RNA expression is, you know, sort of has a lot of errors and then this, or sorry, like it thinks that a lot of things are protein coding, when they're not, and it's processing that I don't know what this process transcript
[00:10:28.000 --> 00:10:32.000]   means but like that one goes, gets along wrong a lot.
[00:10:32.000 --> 00:10:35.000]   But, so like these.
[00:10:35.000 --> 00:10:54.000]   Oops. So like you can see that like, it seems to beat the competition pretty well this gene former is, is a model that you know that's a little bit older and then this scgpt has gotten a lot of, a lot of attention recently it's a.
[00:10:54.000 --> 00:11:11.000]   So it's like a BERT, so similar to a BERT model, or no sorry this one gene former is a BERT model GPT is like a GPT model, and they, and they, you know, do pretty good at, at, you know, sort of they beat these models.
[00:11:11.000 --> 00:11:23.000]   And I've actually used their, I'll show you guys, because we probably will run out of time. I have, I've gone through the notebooks that the authors provide which were pretty good they're a little old so they were broken but I kind of fix them.
[00:11:23.000 --> 00:11:26.000]   So, but, and this was actually the.
[00:11:26.000 --> 00:11:32.000]   This was similar to the result I got. So these results do seem pretty valid.
[00:11:32.000 --> 00:11:44.000]   But like so maybe some of these other things are harder protein protein interaction, you know so your ROC curve is like, not so great.
[00:11:44.000 --> 00:11:59.000]   So a lot of these other ones are, you know, there be, but in any event they're winning. Right, so like I, this is to me I think this is like the headline is it's just pretty incredible that you have these specialized models that were designed
[00:11:59.000 --> 00:12:18.000]   specifically to code for, you know, genetic, the relationship between genetic information, and that, like, instead we just take text that is a description of the gene that, you know, sort of briefly summarizes our knowledge about that gene, and then
[00:12:18.000 --> 00:12:25.000]   turn it into embedding and it does dramatic pretty dramatically better than these specialized models.
[00:12:25.000 --> 00:12:42.000]   And, I mean, I think if you think about it's not super surprising because, you know, like the language has so much nuance nuanced information in it that if you use a good model then you might be able to capture all that nuance better.
[00:12:42.000 --> 00:12:51.000]   And, but, you know, like, in any event, like it's pretty incredible how much how well they beat them.
[00:12:51.000 --> 00:13:07.000]   And so this was like, so I didn't go through this part, really, in detail but like they basically were trying to prove okay yeah we're actually capturing underlying biology well there, you know, this sort of have these clusters of genes that make sense.
[00:13:07.000 --> 00:13:23.000]   I think I think has a question. Yeah. Okay. Sorry to interrupt. One question. So, could you like, I didn't know you had a chance to look at this but like how, how, how exactly are they going from the vector representation of a gene to a protein
[00:13:23.000 --> 00:13:31.000]   protein interaction prediction, how does that exactly how do you go from, from that to predicting an interaction.
[00:13:31.000 --> 00:13:44.000]   So, let me actually, that's a good segue here, I will I think that is this one. So if you look, so let's see protein.
[00:13:44.000 --> 00:13:48.000]   So, you asked about protein protein or gene gene.
[00:13:48.000 --> 00:13:58.000]   I mean, honestly, I either of them whichever is simpler I guess we can start with. Yeah, so this one is the gene gene interaction. So they have these.
[00:13:58.000 --> 00:14:02.000]   So let's see.
[00:14:02.000 --> 00:14:05.000]   Let's see.
[00:14:05.000 --> 00:14:07.000]   Where's the meat of this.
[00:14:07.000 --> 00:14:21.000]   Yeah, so okay right what they do is they just, they create a embedding of the two. They take the two gene embeddings, and they, and they sum them.
[00:14:21.000 --> 00:14:36.000]   So they've now you have like these two genes that you have two genes you sum them together. And then you use that so let's see what do they do here, they,
[00:14:36.000 --> 00:14:44.000]   they fit. In this case logistic regression I, I actually tried also
[00:14:44.000 --> 00:14:58.000]   light GBM and it doesn't make a huge difference but it's a lot faster. It does slightly beat the, the logistic regression but it doesn't matter.
[00:14:58.000 --> 00:15:03.000]   So, let's see, they, they sum the two genes together.
[00:15:03.000 --> 00:15:09.000]   So here like row of label is just like zero or one, I imagine like for whether it's.
[00:15:09.000 --> 00:15:12.000]   Yeah, that's right. That's right.
[00:15:12.000 --> 00:15:24.000]   Okay, does that make sense. Yeah, so yeah you're trading in logistic regression against the sum of the two genes. Yeah, I'm trying to predict like yeah whether they interact or not, whether Yeah, okay.
[00:15:24.000 --> 00:15:25.000]   That's right. Yes.
[00:15:25.000 --> 00:15:27.000]   Is that clear.
[00:15:27.000 --> 00:15:31.000]   Yeah, I think that answers my question. Thank you. Okay, awesome.
[00:15:31.000 --> 00:15:41.000]   Yeah, so it's actually, I was surprised that actually brings brings up a good point of how useful embeddings actually are right like I wouldn't have.
[00:15:41.000 --> 00:15:55.000]   I had the same question in my mind is like, so it's like it's kind of obvious how to cluster genes and whatever whatever, but I wouldn't have thought to do what they did to predict the gene gene interaction.
[00:15:55.000 --> 00:16:14.000]   So, it seems like there are lots of uses of these embeddings, like there's been a lot, a lot of work, I think previously using much less capable embeddings to do these kinds of analysis so I think this is like sort of standard hat for bioinformatics
[00:16:14.000 --> 00:16:18.000]   and then you just throw a much better embedding model and you get much better results.
[00:16:18.000 --> 00:16:20.000]   So, um, yeah.
[00:16:20.000 --> 00:16:32.000]   They actually go. Yeah, sorry I think what's really interesting here is that like normally when people have tried to do this in the past they like they try to assume like like this like ground up approach, where they either use the sequence itself or
[00:16:32.000 --> 00:16:45.000]   like some gene expression protein expression something, and they try to like sort of predict these interactions using that. Yeah, again, like very surprising that like, like just using text from the internet, or like text from any like standard description
[00:16:45.000 --> 00:16:52.000]   you can get like even like similar, like, and in this case it's like you're saying it's better right like it's very surprising that you can get like better results.
[00:16:52.000 --> 00:17:06.000]   I think, like yeah one thing that might be happening I guess is that it's possible that a lot of like that a lot of those descriptions itself contain information about what the, what other genes interact with the gene.
[00:17:06.000 --> 00:17:18.000]   Right. So, yeah, I guess that could be a confounding factor but yeah like across like millions of or I don't know I don't know what their what their set what the size of the data set was but like across even like 10s of thousands of examples, it would.
[00:17:18.000 --> 00:17:32.000]   Yeah, it's really it's, it's a really cool approach, I think. Yeah. So I mean, I think you're exactly right there is like information in those descriptions I've looked at some of them about the, the like the interactions and like so it'll say like this is, you
[00:17:32.000 --> 00:17:44.000]   know, express commonly in cancer or whatever. Right. So it says, there's like so a lot of semantic content in those descriptions. And so that like, it's not surprising.
[00:17:44.000 --> 00:17:57.000]   After, like, in retrospect, after they've kind of tried it, it's not surprising to me that it works it's just kind of like it's pretty amazing how, like, how you like that it works so well to me.
[00:17:57.000 --> 00:18:13.000]   And the other thing that this brings up is it. Okay, but what else can we stick in the description right like you could you, I think they have left a lot on the table here on like okay, what if we start to put more complex descriptions that talk
[00:18:13.000 --> 00:18:33.000]   about, like more explicitly about gene interactions and like there's, if you go to, like, if you go to the watch my caught the human genome browser and other things there's like all this rich rich information about every, you know, every gene in the genome
[00:18:33.000 --> 00:18:46.000]   that we know about. And so that like what what other information can you add to these descriptions to create like a really nice embedding that has like multiple purposes and so forth.
[00:18:46.000 --> 00:18:49.000]   So yeah, um, so let's see.
[00:18:49.000 --> 00:19:06.000]   I think they did. So, like, um, they did do some, they like tried, they say llama seven be. I don't know what they did for the, this is not an embedding model obviously I don't, unless they use some llama seven be embedding.
[00:19:06.000 --> 00:19:22.000]   They presumably are just using the class token as the for the embedding, I don't know that it's because it hasn't been trained on contrastive text I'm not, it's not clear to me that that's actually a great comparison.
[00:19:22.000 --> 00:19:33.000]   But, you know, maybe some of that like something from the open MTB whatever that is a massive text embedding leaderboard. Right.
[00:19:33.000 --> 00:19:43.000]   Something from there might do better so I was going to try actually try that and see how it did. But interestingly, so while we're here I actually did try.
[00:19:43.000 --> 00:19:51.000]   You know, I so like if you look here at this aorta data one. I actually tried.
[00:19:51.000 --> 00:20:03.000]   Where is it here. Yeah, so I tried this also the embedding three small which is supposed to be a replacement for Ada, and, you know, is pretty dramatically cheaper.
[00:20:03.000 --> 00:20:19.000]   But if you look at the, the results.
[00:20:19.000 --> 00:20:36.000]   I think, presumably, this was a distillation or something and they lost probably gene and from like scientific literature or gene codings or I don't know what they lost in this but it, this, this model does way worse.
[00:20:36.000 --> 00:20:52.000]   So I found that to be quite interesting too and so I definitely think that I'm going to spend some time and go through a bunch of models and just try the same try to do the same metrics on a whole bunch of models and see what we can see about that because
[00:20:52.000 --> 00:21:03.000]   they didn't really, I don't think they did a great job in the paper of exploring embedding models are different embedding models.
[00:21:03.000 --> 00:21:08.000]   Not to criticize the paper it's awesome paper but that that thing came short.
[00:21:08.000 --> 00:21:18.000]   And then, um, yeah so so then there's like actually this is what I'm reproducing this line here is what I'm reproducing right now.
[00:21:18.000 --> 00:21:35.000]   And they have, you know, this like SCGPT model. And then this is the two weighted and sentence versions of the thing and you can see mostly like this either SCGPT or this weighted model wins.
[00:21:35.000 --> 00:21:51.000]   It occasionally looks like for aorta actually, which it like everything does kind of poorly on for phenotype that this sentence wins for some reason, but not by a ton so.
[00:21:51.000 --> 00:21:58.000]   Okay, so is there, let me see if there's anything else interesting.
[00:21:58.000 --> 00:22:10.000]   There was a few, there's maybe one other table that I wanted to discuss briefly.
[00:22:10.000 --> 00:22:14.000]   Where is it in the bottom here I think.
[00:22:14.000 --> 00:22:28.000]   Yeah, here, this table here. So, I found it. Another thing that they tried was this ensemble of the three SCGPT plus the, the WNS model.
[00:22:28.000 --> 00:22:50.000]   And, you know, sometimes it looks like the ensemble doesn't hardly ever win, like it wins these two but but or no I guess it wins three out of six so that's fine, but, um, but it looks like, even when it loses it's, it tends to be close to the max right so that's not surprising
[00:22:50.000 --> 00:22:53.000]   for an ensemble model.
[00:22:53.000 --> 00:23:11.000]   Like the losing like it last year but so it does seem like maybe it's worth doing an ensemble of different models and that the point that they make was in here is that like, it seems like SCGPT is giving you like a slightly different.
[00:23:11.000 --> 00:23:26.000]   You know, it's like complimentary, the result is complimentary here. So I thought that's, that's basically all I did they have some cool visualizations that are you maps, but that's that's basically all I all I really looked at.
[00:23:26.000 --> 00:23:32.000]   Maybe I can stop here I can go over my notebooks too but they're pretty straightforward.
[00:23:32.000 --> 00:23:47.000]   So does anyone want to comment ask question something we're like half hour and so plenty of time to talk or we can try, we can go over something else entirely.
[00:23:47.000 --> 00:23:58.000]   Well, we'll just one question on this like, can we, apart from annotating can we like generate.
[00:23:58.000 --> 00:24:02.000]   I mean it's embedding so no.
[00:24:02.000 --> 00:24:12.000]   But, but I feel that maybe. So I've been talking about this with my buddy that I mentioned the beginning.
[00:24:12.000 --> 00:24:19.000]   The, like, I think that there's a lot of opportunity here. So,
[00:24:19.000 --> 00:24:38.000]   or like there's for most papers, you know, the great thing about medical research biomedical research is oftentimes that they publish the data from, especially if it comes from an academic lab you have a paper, and you have a really nice unique data set.
[00:24:38.000 --> 00:24:57.000]   Right, so there's I think there's a, and I know that there are models that do this to some extent, where you like train on both the, you know, sort of the gene or sequence level data and the, and the text of the model and then so that maybe like you get a model
[00:24:57.000 --> 00:25:03.000]   for which you can put in a cell and get a description back or something like that.
[00:25:03.000 --> 00:25:19.000]   Or the reverse, maybe you put in description and get out like a genome that matches that, or like a gene level expression information or sequence that kind of models what you what you think it should.
[00:25:19.000 --> 00:25:31.000]   I think those are like, I think those are something that we hope to work up to. And I know that there, there's already a lot of work being put into Eric Schmidt thing.
[00:25:31.000 --> 00:25:50.000]   I think I suspect, probably those guys are probably doing a lot of that. So, I think our focus is like sort of build up these like basic capabilities and then put it yeah eventually to be able to generate your like either gene level or for for training
[00:25:50.000 --> 00:26:07.000]   kinds of things or sequence level for maybe even designing like designing genes for for like specific purposes, according to like whatever the scientific literature says you should do.
[00:26:07.000 --> 00:26:14.000]   So yeah, definitely not from this, I don't think but but I think it's possible. Yeah.
[00:26:14.000 --> 00:26:16.000]   Yeah.
[00:26:16.000 --> 00:26:27.000]   Yeah. And the other, the other really interesting thing that and this will be the next thing that we try that I should mention is that this is actually be right now it's trained.
[00:26:27.000 --> 00:26:44.000]   This technique actually probably we have to test this but there's like an order of magnitude more data on bulk what's called bulk data where you like I said in the beginning you kind of like you have a sample that's you know reasonably large piece of tissue
[00:26:44.000 --> 00:26:56.000]   that has lots and lots of different types of cells, and you get the gene level expression data on those that whole sample all mixed up together.
[00:26:56.000 --> 00:27:12.000]   And so that there's actually an opportunity here to apply exactly the same technique to that and use it for like the classification of that sample like say did like what were the changes either classification or other things where like what was the change
[00:27:12.000 --> 00:27:27.000]   in gene expression between when I applied gave this drug, or like diet for diagnosis like is, is this cell like exhibit this or this sample exhibit this gene, or this.
[00:27:27.000 --> 00:27:41.000]   Sorry, exhibit a disease because you know the RNA is being expressed to counteract the disease or whatever. So like, so there's like a really cool opportunity that, which is what we're probably going to start working on.
[00:27:41.000 --> 00:27:51.000]   You know, like later this week or something or next week. And so, you know, maybe in the watch my caught the AI in action.
[00:27:51.000 --> 00:27:59.000]   I'll try to, if we have some cool results and I'll, I'll try to, you know, sort of do an AI in action on it.
[00:27:59.000 --> 00:28:01.000]   Awesome.
[00:28:01.000 --> 00:28:07.000]   Cool. All right, well let me. It seems like it seems like I've kind of run out of steam.
[00:28:07.000 --> 00:28:17.000]   Is there, I am so I'm happy to talk more if people have questions but you know I want to give other people an opportunity to go over stuff too.
[00:28:17.000 --> 00:28:22.000]   Yeah, well I guess it will open the floor to like it you know any other papers that people want to explore.
[00:28:22.000 --> 00:28:36.000]   I was also had I had in my mind like clearing up the, the voting list that we had on Slido, where like you know obviously some stuff gets stale, and we might want to just refresh it and make a new Slido.
[00:28:36.000 --> 00:28:43.000]   Yeah. Yeah. Like what do people want to cover, or what have people read recently.
[00:28:43.000 --> 00:28:49.000]   Open, open up the floor.
[00:28:49.000 --> 00:28:53.000]   Did Modern BERT come with the actual paper, or was it just like a blog post?
[00:28:53.000 --> 00:29:05.000]   Yes it did. Modern BERT very very full fledged. I was actually literally just adding Modern BERT to the AI engineering reading list like right, right, right before this.
[00:29:05.000 --> 00:29:14.000]   I would love to honestly just get hands on with it like, yeah, it seems like a good paper.
[00:29:14.000 --> 00:29:18.000]   What do you like about it.
[00:29:18.000 --> 00:29:26.000]   Oh Sebastian says, cooperation among LLM agents. What is this.
[00:29:26.000 --> 00:29:43.000]   It's a paper that's suggesting like a benchmark for evaluating like a organization of LLM agents.
[00:29:43.000 --> 00:29:51.000]   I also want to hear about Modern BERT too, but I don't know if anybody's ready to present that.
[00:29:51.000 --> 00:30:09.000]   I don't think we're ready. We don't have to do it today, we can do it next week. But yeah, I mean, I guess, I guess, I'd be down for a Modern BERT slash LLM agent cooperation thing next week.
[00:30:09.000 --> 00:30:23.000]   I was kind of, I don't think I was too interested in like going over cultural evolution or cooperation. I just wanted to like have, like if we don't have anything else to cover, I'll just go, I'll just run through it quickly.
[00:30:23.000 --> 00:30:35.000]   Sure. Yeah, I mean nothing for today I was going to end it early, but if you if you like I'm still trying to understand this donor game that's on the, on the, on the paper, but if you already have it in your head and yeah, by all means.
[00:30:35.000 --> 00:30:59.000]   Yeah, I can go through it. So, I mean, so, this is related to a paper I've been talking about recently with multi agent steganography, where they're hiding messages, it's a kind of game, but more sort of safety oriented.
[00:30:59.000 --> 00:31:01.000]   You got it.
[00:31:01.000 --> 00:31:10.000]   Yeah. So, just.
[00:31:10.000 --> 00:31:13.000]   Okay.
[00:31:13.000 --> 00:31:15.000]   Thanks.
[00:31:15.000 --> 00:31:23.000]   Yeah, nice. Okay, I'll share my screen.
[00:31:23.000 --> 00:31:27.000]   I'm not.
[00:31:27.000 --> 00:31:36.000]   I also have a Jupyter notebook but I'm not going to open, open that up instead I'm just going to open up the GitHub repo for it.
[00:31:36.000 --> 00:31:46.000]   I own GitHub repo I don't think they actually published a GitHub repo, but okay. So, in general, like to set the base of this paper.
[00:31:46.000 --> 00:31:57.000]   They're trying to explore, like, how agents are in the hypothetical scenario that you're building an organization that consists of multiple agents interacting with each other.
[00:31:57.000 --> 00:32:10.000]   And they want these agents to pursue, like the collective interest of all the agents put together, instead of a single agent, just looking out for itself and trying to maximize rewards for itself.
[00:32:10.000 --> 00:32:27.000]   And they posit that by, by having, by having the positive that, like the game of the donors game is a representation of, like, collective benefit of an organization.
[00:32:27.000 --> 00:32:36.000]   And so what the donors game is is a game that is covered in game theory, which suggests.
[00:32:36.000 --> 00:32:45.000]   Just kind of draw it out. So you have, like, three players, you have a player one, you have player two, you have player three, and there's three, there is.
[00:32:45.000 --> 00:32:56.000]   The idea is that if the whole of the three players will benefit from donations between each of the agents.
[00:32:56.000 --> 00:33:05.000]   So, one donated three, three donated two, back and forth, and then over the course of, like, at the limit of, like, X amount of donations.
[00:33:05.000 --> 00:33:18.000]   If, if there was a lot of donations between the different agents, one will end up with more, like, sum of money than had none of them donated in the first place.
[00:33:18.000 --> 00:33:37.000]   Yeah. And a key, a key principle of this is that it has to be a positive sum game, meaning that there is an increase in, like, the total pool of wealth/resources in the collective, in the organization.
[00:33:37.000 --> 00:33:51.000]   So, what they do in the paper is that whenever one donates to three, let's say one donates a two quantity of something, then that gets multiplied by two when three receives it.
[00:33:51.000 --> 00:33:58.000]   So, three ends up receiving four, even though one only lost two. So, this is just a representation of positive sum.
[00:33:58.000 --> 00:34:17.000]   And so, if you just continue cycling this over and over and over again, assuming that everybody's, like, completely, everybody, everybody just continues to donate to each other and nobody just hoards the information and decides to, decides to just keep the money,
[00:34:17.000 --> 00:34:33.000]   then you eventually have, like, three with, assuming that ten start, one starts with ten, everybody, assuming that everybody starts with ten, he loses, he loses two, which leads to, which leads to three.
[00:34:33.000 --> 00:34:53.000]   So, he goes from ten, three goes from ten to fourteen, and then three donates also two to the second agent, and then two gets fourteen, two goes from ten to fourteen, and then two donates two back to ten,
[00:34:53.000 --> 00:35:04.000]   reciprocating the, reciprocating the original, the original donation, resulting in ten, which went, which went from ten to eight, going to basically twelve, right?
[00:35:04.000 --> 00:35:15.000]   So, that's the idea behind the donor's game. Like, if everybody donates in this system, then every single player is going to result in having a greater sum than if they just didn't donate at all.
[00:35:15.000 --> 00:35:29.000]   And so, that is what they're basically trying to illustrate with agents and trying to see, like, which, they explore which models are, perform best in this, in this, in this game.
[00:35:29.000 --> 00:35:45.000]   And they end up finding, I think, that, and here's, here's a design, but just to not get sidetracked, they point out that, okay, here's the, here's the results of the models.
[00:35:45.000 --> 00:36:02.000]   Cloud 3.5 Sawnit performs the best, and something that was interesting is that GPT 4.0 didn't perform very well, and as far, as far as what I gathered from the paper is that GPT 4.0 was, like, too, too careful with its donations.
[00:36:02.000 --> 00:36:12.000]   Like, GPT 4.0 was, would refuse to donate, was, like, too skeptical of donating whenever it would, it would be his turn.
[00:36:12.000 --> 00:36:17.000]   So, yeah, he just wouldn't donate.
[00:36:17.000 --> 00:36:24.000]   Cloud 3.5 Sawnit understood the premise of the game, and so just was more liberal with donations.
[00:36:24.000 --> 00:36:34.000]   And, again, something I didn't point out is that if, for example, 3 just decides to keep all the money, then this game completely just falls apart.
[00:36:34.000 --> 00:36:46.000]   1, at the worst case, will just end up losing money, and then 2 won't get anything, and then maybe 2 donates to 1, and so the, the, the ultimate, like, loser is going to be 2.
[00:36:46.000 --> 00:36:49.000]   So, that, that's what you got to take into account.
[00:36:49.000 --> 00:37:04.000]   So, 1 is that it's a positive sum, 2 that you can actually see the reputation of the players. So, you can see, for example, if 3 donated to 2, or if 3 decided not to donate to 2, and based off that information, you inform whether or not you should actually carry on donating.
[00:37:04.000 --> 00:37:31.000]   So, that is the idea of the paper, and I didn't prepare to present this, but I just want to have kind of your, the crowd's take on whether you guys think this is, like, an accurate, a good benchmark to judge models on for, for basically organization, organization-wide agent clusters.
[00:37:31.000 --> 00:37:35.000]   Well, just, any thoughts on that?
[00:37:35.000 --> 00:37:39.000]   Any thoughts on the, the whole thing?
[00:37:39.000 --> 00:37:58.000]   Donor's game as a benchmark, basically, for, couple of questions. Donor's game as a benchmark for, like, agent, agent organizations, and 2 is, what is 2? Oh, yeah, agent organizations in general.
[00:37:58.000 --> 00:38:14.000]   Yeah, I like it. I want to, I want to let other people respond before I jump in, but anyone, anyone have takes on this? It's a nice paper. I never, I can't believe I haven't heard of it.
[00:38:14.000 --> 00:38:32.000]   Oh, yeah. I would like to see some, like, more models. I think the whole, like, PVP, 333 thing has been tried in crypto. I've seen it, like, play out, and I think more often than not, it ends up with, like, the whole, like, somebody, it's like a game of chicken, right?
[00:38:32.000 --> 00:38:57.000]   Like, whoever pulls out first, keeps the money first, like, wins, essentially. But, but it's super interesting to me, but I would, it would be cool to see other, like, maybe some of the open source models or, like, see how, how it plays out, because I, I do think, as people, like, bring more agents online, or as agents become useful, this would be, like, an important thing to, like, figure out how to, how to incentivize them all to, you know, play nice.
[00:38:57.000 --> 00:39:26.000]   Yeah, you mentioned the game of chicken, and they did kind of address that towards the, they tried to prevent people from gaming, prevent the agents from gaming the system. Somewhere in the paper, they discuss how they actually don't disclose when the round is going to end, because ideally, if you know when the round is going to end, you just wait till that round and just, like, keep everything. So that's an interesting, interesting, just, policy that they added.
[00:39:26.000 --> 00:39:45.000]   Oh, yeah, and here are some, some, here are some of the results. I forgot to cover this, but some of the results of, like, me running, me running this locally on GVD4, and total money per round. This is basically just one of the metrics that they were using to, to evaluate, determine the effectiveness of the paper.
[00:39:45.000 --> 00:40:14.000]   Well, the effective, collaboration. Basically, this is, like, the overarching metric behind it. Like, if, the more, the more the organization donated, the more the, the virtual cycle would take over. And you can kind of see a trend where the generation one, oh, and another thing is that over the course of, so, so the idea is you start with, like, a set of, you start with a set of agents.
[00:40:14.000 --> 00:40:17.000]   And I'm not sure if I'm sharing.
[00:40:17.000 --> 00:40:20.000]   Yeah, we can see.
[00:40:20.000 --> 00:40:46.000]   Okay, so over the course of, you start with, they started with 12 agents, and what would happen is, like, you would run a donor's game, a donor's game iteration, and then towards the end of the donor's game iteration, you would have the top six, the top half, be able to descend, they're basically going to be the parents for the, for the next generation.
[00:40:46.000 --> 00:41:08.000]   So you're going to give the, the, the original strategies of the top six performing onto the next generation, and so on and so forth. And so that's what these different Gs represent in the legend. And so you can see some, like, upwards trend in, like, accumulated money. Then I did, like, average donation percentage.
[00:41:08.000 --> 00:41:22.000]   Were there, were the, was this, like, an evolutionary algorithm? Meaning, like, you combine, so, so, like, when you, the next generation is some sort of combination of the strategies of the previous generation?
[00:41:22.000 --> 00:41:24.000]   Yes, exactly. That's what it is.
[00:41:24.000 --> 00:41:25.000]   I see.
[00:41:25.000 --> 00:41:46.000]   And you can actually see the prompts. I love what they did with the, the way they illustrated the prompts, it was very clear. So in the, where's the evolution prompt? Okay, so a system prompt, that one's passed. This one just, like, describes the game. Donation prompt.
[00:41:46.000 --> 00:42:04.000]   This just determines how you should donate. And it also includes, like, the trace, the reputation trace of who you're donating to. And this was also something that was interesting, how they did the donation trace. And then the strategy prompt. Yeah, okay, so this is, this is basically what you're looking at for generation.
[00:42:04.000 --> 00:42:23.000]   If the, if it's a first generation, it just generates some strategy. If it is any subsequent generation, it is going to, it is going to just inherit the top strategies of the previous game. So, as described here.
[00:42:23.000 --> 00:42:33.000]   Okay, so it's, it's basically, that's really cool that's using the LLM to kind of merge this or like sort of combined strategies from the previous generation.
[00:42:33.000 --> 00:42:52.000]   Nice. Yeah. And I think I'm thinking of expanding this to like be more direct, like a lineage where the top, the top donator is going to have like three children, the second top donator has two children, the third top donator has one children, just like replicates.
[00:42:52.000 --> 00:42:59.000]   What is it called? Natural selection.
[00:42:59.000 --> 00:43:20.000]   So, I don't really understand, like, what is the, so I was just poking around online that I don't understand the difference between the donation game and prisoners dilemma except that I read that the donation game is a version in which you have a growing, it's a positive some, which is what you said as well.
[00:43:20.000 --> 00:43:30.000]   So, why does that matter. Like, what's the distinction here between prisoners dilemma and the donation game. Remind me what the prisoners dilemma is about.
[00:43:30.000 --> 00:43:44.000]   Oh, okay.
[00:43:44.000 --> 00:44:00.000]   It's like, oh, well, you know, you know, like, if you don't, if you don't sell the other guy out, then, you know, you're gonna, he's going to sell you out and you're going to go, you're going to go to jail for like five years, but if you, you know, and if you sell,
[00:44:00.000 --> 00:44:11.000]   if you each sell each other out. Then, you know, each of you gets three if, if you sell the other person out and they don't sell you out.
[00:44:11.000 --> 00:44:21.000]   And if neither sells each other out and you only get one right so like there's been a lot it's been probably the most studied game. And if you.
[00:44:21.000 --> 00:44:39.000]   And, and so there's like this iterated prisoners drama which is like this, where you go over, if you play over and over again for an infinite amount of time then there are strategies for which you can induce cooperation by the other by your opponent.
[00:44:39.000 --> 00:44:56.000]   And, and so, um, so like yeah super, super well studied game. And this is I think related game, but I guess you don't since you don't understand, you might have trouble distinguishing the two since you haven't encountered it before.
[00:44:56.000 --> 00:45:15.000]   I think it, I think, I think they both, they both represent like a similar dynamic where you want to, you want what's beneficial for like you to like as the sum of all parties involved, rather than the reward for a single one.
[00:45:15.000 --> 00:45:32.000]   I'm actually, you could, you could potentially do the same thing for prisoners dilemma I just don't know how, how the information transfers between prisoners between the prisoners game.
[00:45:32.000 --> 00:45:45.000]   I think that the setup, it sounds to me like the setup is the same it's just that you have a growing like you have this positive some game right so that that's in that that changes that dynamics but I don't understand how so I.
[00:45:45.000 --> 00:45:51.000]   Okay, yeah. Anyway, um, maybe I'll, I'll look into that and put it in the chat later.
[00:45:51.000 --> 00:45:56.000]   Yeah.
[00:45:56.000 --> 00:46:11.000]   Okay, I'm just gonna go through the rest. I don't think this graphic was actually very interesting. Oh, what happened here is on the third generation, some of the LLMs, and instance, and agent, and bear in mind this is a.
[00:46:11.000 --> 00:46:18.000]   What was this for, like, the run that I did was.
[00:46:18.000 --> 00:46:35.000]   So it's four generations, six rounds for each generation and four players, and one of the players on the reason you see like a big spike here is that one of the players here decided to just donate more than all of his money.
[00:46:35.000 --> 00:46:43.000]   I basically told them to do like a percentage between zero and one, and they just decided to do 1.3.
[00:46:43.000 --> 00:46:53.000]   So I just donated everything, which led to a massive spike in like the overall game pool here.
[00:46:53.000 --> 00:46:58.000]   Then, LLMs are terrible at numbers. Yeah.
[00:46:58.000 --> 00:47:01.000]   Yeah.
[00:47:01.000 --> 00:47:24.000]   It would be nice if you could do like constraint generation constraint, constraint decoding within like the boundaries of like something or something that would have been better but it is what it is and then maximum wallet amount for generations and this is basically the lucky guy who received the entire wallet from somebody else.
[00:47:24.000 --> 00:47:32.000]   Yeah, I'm probably gonna do another run of this with that actually is like a perfect.
[00:47:32.000 --> 00:47:43.000]   That is in line with what they did on the paper which was like 12 generations, or like 12 rounds each generation for six generations with hopefully or something like that.
[00:47:43.000 --> 00:47:44.000]   Yeah.
[00:47:44.000 --> 00:47:50.000]   I'm curious, have you shared this with the authors been that they didn't produce any code for the paper.
[00:47:50.000 --> 00:47:56.000]   I did. They like my Twitter posts and that's all I got.
[00:47:56.000 --> 00:47:57.000]   Yeah.
[00:47:57.000 --> 00:48:04.000]   Yeah, this is fire. The fact that you put it in code is fine. It's really cool to see it in code.
[00:48:04.000 --> 00:48:10.000]   Yeah, it's pretty easy to run to, like, it's just a Jupyter notebook.
[00:48:10.000 --> 00:48:22.000]   It's basically completely enclosed since it's just like a simulated environment. So you can go ahead and try it yourself.
[00:48:22.000 --> 00:48:41.000]   It's just this.
[00:48:41.000 --> 00:48:44.000]   That's all I have.
[00:48:44.000 --> 00:48:53.000]   No book or get up or whatever.
[00:48:53.000 --> 00:48:56.000]   Yeah, that the tweet as well to please retweet or something.
[00:48:56.000 --> 00:48:58.000]   The what, oh the tweet.
[00:48:58.000 --> 00:49:01.000]   Yeah, I'll retweet it.
[00:49:01.000 --> 00:49:05.000]   Yeah, I'll take it.
[00:49:05.000 --> 00:49:09.000]   Wow.
[00:49:09.000 --> 00:49:17.000]   Oh, okay. The description was like AI generated and he just, and it was just, it just wrote like three sentences.
[00:49:17.000 --> 00:49:25.000]   There was a super nice, you know, it's rare to have a reimplementation of a paper. That's always hard.
[00:49:25.000 --> 00:49:27.000]   Awesome.
[00:49:27.000 --> 00:49:29.000]   Great timing.
[00:49:29.000 --> 00:49:33.000]   Yeah, no comments like, well that's very smart.
[00:49:33.000 --> 00:49:39.000]   Yeah, I was about to say the classic like you know you should try it on one right.
[00:49:39.000 --> 00:49:46.000]   So, oh, what, what, you should try it on one because obviously you know this is a test of intelligence right.
[00:49:46.000 --> 00:49:50.000]   Yeah, I'll take funding for that though.
[00:49:50.000 --> 00:49:56.000]   Yeah, it's gonna get expensive. But yeah, for sure.
[00:49:56.000 --> 00:50:06.000]   Just a thought, like, it is not like purely oh one, I can kind of show that in the, in the code.
[00:50:06.000 --> 00:50:14.000]   It does have a, it does think through whether or not it should donate for example.
[00:50:14.000 --> 00:50:25.000]   This is right at the beginning.
[00:50:25.000 --> 00:50:31.000]   Yeah, so here are thoughts. This is just basically a chain of thought.
[00:50:31.000 --> 00:50:40.000]   Yeah, maybe running this on something like QWQ or DeepSeek will be like less expensive than 0.1 but like still interesting results.
[00:50:40.000 --> 00:50:42.000]   I have to try and run it.
[00:50:42.000 --> 00:50:48.000]   Yeah, I was thinking of using open source, but it actually wasn't too expensive with 4.0 mini.
[00:50:48.000 --> 00:50:54.000]   Nice.
[00:50:54.000 --> 00:51:02.000]   I have no clue what the implications mean that 4.0 like was super stingy, but that's crazy to see.
[00:51:02.000 --> 00:51:04.000]   What?
[00:51:04.000 --> 00:51:12.000]   I have no clue what that means, what that implies that 4.0 was the stingiest of the models right like open AI training on the models.
[00:51:12.000 --> 00:51:15.000]   Yeah, I, no idea.
[00:51:15.000 --> 00:51:19.000]   Did you use 4.0 or 4.0 mini?
[00:51:19.000 --> 00:51:20.000]   I use 4.0 mini.
[00:51:20.000 --> 00:51:30.000]   Oh, I see. So maybe, maybe there's a model class thing there too, right? Because I think the comparison to 4.0 would be Haiku.
[00:51:30.000 --> 00:51:35.000]   Yeah, yeah, yeah.
[00:51:35.000 --> 00:51:43.000]   Oh, that is interesting, right? Because they didn't, wait, is that true? 4.0 is equivalent to Haiku?
[00:51:43.000 --> 00:51:47.000]   I mean, I don't know if it's equivalent, but I think there's similar class.
[00:51:47.000 --> 00:51:51.000]   They're like in the same cost class. Let's put it that way.
[00:51:51.000 --> 00:51:53.000]   So you're saying there's not a fair comparison?
[00:51:53.000 --> 00:51:56.000]   No, no, no. You said you use 4.0 mini.
[00:51:56.000 --> 00:51:57.000]   Yeah.
[00:51:57.000 --> 00:52:01.000]   That is noticeably different than 4.0.
[00:52:01.000 --> 00:52:05.000]   I haven't done that analysis. I wouldn't be able to tell you.
[00:52:05.000 --> 00:52:06.000]   Yeah.
[00:52:06.000 --> 00:52:15.000]   Oh, okay. So the fact that it's like growing in, like the pot of money is growing over time.
[00:52:15.000 --> 00:52:22.000]   I'm not sure if my graphic is a good comparison to this, if that's what you're thinking.
[00:52:22.000 --> 00:52:26.000]   No, no, no. We're just talking about model choice.
[00:52:26.000 --> 00:52:28.000]   You said you use mini, so.
[00:52:28.000 --> 00:52:31.000]   Yeah.
[00:52:31.000 --> 00:52:39.000]   Okay, well, very, very cool. That was actually like very productive. Really well done.
[00:52:39.000 --> 00:52:41.000]   Thank you.
[00:52:41.000 --> 00:52:44.000]   I guess we'll do Modern BERT next week.
[00:52:44.000 --> 00:52:46.000]   Yes, that would be sick.
[00:52:46.000 --> 00:52:48.000]   Yeah, Modern BERT would be awesome.
[00:52:48.000 --> 00:52:52.000]   Awesome. Okay, well, happy new year to everyone.
[00:52:52.000 --> 00:53:01.000]   We have continued our unbroken streak of paper clubs. This is very hard to keep up, but we're through it. We're through the tough part.
[00:53:01.000 --> 00:53:04.000]   Oh yeah, and by the way, you posted the X post in there.
[00:53:04.000 --> 00:53:08.000]   I see it.
[00:53:08.000 --> 00:53:09.000]   All right.
[00:53:09.000 --> 00:53:10.000]   Awesome.
[00:53:10.000 --> 00:53:12.000]   Cool. See you guys. Happy New Year.
[00:53:12.000 --> 00:53:13.000]   Happy New Year.

