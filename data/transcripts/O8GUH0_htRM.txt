
[00:00:00.000 --> 00:00:04.760]   I just got access to the Code Interpreter plugin about 48 hours ago and have been running
[00:00:04.760 --> 00:00:10.000]   experiments on it non-stop since then. I've come up with about 18 examples to show you guys its
[00:00:10.000 --> 00:00:15.300]   power. Most of them I reckon haven't been seen before. I predict many industries will have to
[00:00:15.300 --> 00:00:19.900]   update overnight when it's released more widely and at the end of the video please let me know
[00:00:19.900 --> 00:00:24.520]   what you think and what other experiments that we can try. First though what about this one,
[00:00:24.520 --> 00:00:29.820]   a 3D surface plot. Just quickly the way it works is you click this little button to the left of
[00:00:29.820 --> 00:00:35.100]   the text box and then you can upload many different file types like CSV files, word files,
[00:00:35.100 --> 00:00:40.380]   images and even short videos. Then it will automatically analyze the file type without
[00:00:40.380 --> 00:00:45.660]   you pressing anything and then of course you give it a prompt. And as with all of ChatGPT
[00:00:45.660 --> 00:00:51.420]   it becomes a conversation. So the first 3D surface plot was decent but it was too small.
[00:00:51.420 --> 00:00:55.800]   So I simply said in natural language can you make it four times bigger, thank you. And of
[00:00:55.800 --> 00:00:59.640]   course you have seen the amazing end result even with the lighting. Look at these
[00:00:59.640 --> 00:01:05.120]   shadows there. I believe this is based on a real contour map of a volcano in New Zealand and I
[00:01:05.120 --> 00:01:10.600]   could do a whole video just on this but I have 17 other examples to get to but this one was truly
[00:01:10.600 --> 00:01:16.260]   amazing. Did you know for example it can generate QR codes? I said create a QR code that I can scan
[00:01:16.260 --> 00:01:21.900]   with my phone to reach the following URL and lo and behold it creates it and yes it does work.
[00:01:21.900 --> 00:01:27.300]   Maybe I'm easily impressed but I think that's pretty amazing. And what about a 3D scatter plot?
[00:01:27.300 --> 00:01:29.460]   This is truly remarkable.
[00:01:29.460 --> 00:01:37.620]   I uploaded the data from Gapminder and it created this chart based on the median age of over 100
[00:01:37.620 --> 00:01:47.500]   countries from 1950 I think projected to 2100. And I asked highlight the UK. This is indeed the UK's
[00:01:47.500 --> 00:01:52.800]   median age through those years in red. But I know what you might be thinking that is amazing that
[00:01:52.800 --> 00:01:57.560]   it's 3D and interactive but the blue kind of merges and it's hard to see what's going on.
[00:01:57.560 --> 00:01:59.280]   I engaged in a conversation and I was able to see that the 3D scatter plot was really good.
[00:01:59.280 --> 00:02:05.160]   And look what it created. It picked out the 30 most populous countries and separated them off
[00:02:05.160 --> 00:02:11.880]   with separate colors. Look at that. That is gorgeous. Now you might have the critique that
[00:02:11.880 --> 00:02:18.660]   the median age is in descending order in the y-axis going from 20 down to 60. So in a sense
[00:02:18.660 --> 00:02:24.060]   the median age is actually rising not falling but nevertheless that's easily amendable and that is
[00:02:24.060 --> 00:02:29.100]   truly an incredible diagram. And look just for fun I'm going to go into the data. Look at this. I'm
[00:02:29.100 --> 00:02:34.620]   traveling into the data. This is so wild. I don't know how helpful it is but I think that's just
[00:02:34.620 --> 00:02:43.740]   beautiful and crazy. There are so many industries, data analytics, accounting, consultancy that this
[00:02:43.740 --> 00:02:48.540]   will affect. By the way it got all of this done in about a minute. I see a lot of people online
[00:02:48.540 --> 00:02:53.760]   talking about five seconds later. It is no way done in five seconds. You have to wait 30 seconds,
[00:02:53.760 --> 00:02:58.920]   a minute, sometimes much longer. Before I move on I want to give you a killer tip that it took
[00:02:58.920 --> 00:03:04.620]   me quite a while to work out. So when you get access try to remember this. Say output the
[00:03:04.620 --> 00:03:11.100]   visualization as a downloadable file. If you don't add that phrase as a downloadable file what will
[00:03:11.100 --> 00:03:17.220]   happen is it often gets stuck at this stage of the code. It'll either say fig.show or plot.show
[00:03:17.220 --> 00:03:22.320]   and then just stop. I found that I encountered this problem far less often if I said output a
[00:03:22.320 --> 00:03:28.740]   downloadable file. Next did you know that Code Interpreter can do optical character recognition? I screenshotted
[00:03:28.740 --> 00:03:35.760]   this text from a New York Times article I think it was and I asked OCR the text in this image and
[00:03:35.760 --> 00:03:41.940]   write a poem in Danish about it. Now I don't want to exaggerate it often gets OCR wrong. I don't want
[00:03:41.940 --> 00:03:48.060]   to get your hopes up. It fails more often than it succeeds but when it works it can do it. Understood
[00:03:48.060 --> 00:03:53.640]   the text and then did a poem in Danish about the text. Now I'm going to need a Danish speaker to
[00:03:53.640 --> 00:03:58.560]   tell me if that was a good poem but either way it could do it. How about this one? It can do
[00:03:58.560 --> 00:04:09.300]   it. I uploaded a CSV file on life expectancy data from the entire world and I just said can you pick
[00:04:09.300 --> 00:04:15.540]   out the US, UK and India and create a time series with range slider and selectors. Again that killer
[00:04:15.540 --> 00:04:21.420]   phrase output a downloadable file and here is what it came up with. Notice how the life expectancy
[00:04:21.420 --> 00:04:28.380]   for all three countries rises during the 20th century and look how I can select down here
[00:04:28.380 --> 00:04:35.340]   interactively a range of the data and even by clicking up here a 10-year interval or 50-year
[00:04:35.340 --> 00:04:40.440]   interval. But here's the crazy thing I did nothing. I just uploaded the file. There were hundreds of
[00:04:40.440 --> 00:04:45.540]   countries in there. You can see here all the steps that it did and if you click on the arrow you get
[00:04:45.540 --> 00:04:50.880]   to see the actual code but then it goes through shows its explanation and eventually gives you
[00:04:50.880 --> 00:04:55.200]   a link that you can simply click and get the file downloaded. And if you weren't that impressed
[00:04:55.200 --> 00:04:58.200]   already here's where it gets fairly game-changing. You can
[00:04:58.200 --> 00:05:03.840]   edit to do the data analytics not just the visualizations. For example I said find five
[00:05:03.840 --> 00:05:09.420]   unexpected non-obvious insights from this data and offer plausible explanations for them. This was
[00:05:09.420 --> 00:05:14.820]   back to the median age data. For the most interesting observation provide a compelling and clear
[00:05:14.820 --> 00:05:21.180]   visualization. Now ignore the first diagram which wasn't that good because of the x-axis but look at
[00:05:21.180 --> 00:05:28.020]   the insights. This is data analytics. You can see here that the original file was called median age years and it was just a
[00:05:28.020 --> 00:05:34.860]   table of data no analysis whatsoever. But look what GPT-4 picked out. Insight one the global median age
[00:05:34.860 --> 00:05:40.020]   has been steadily increasing over time. It calculated the global median age. That wasn't
[00:05:40.020 --> 00:05:44.940]   included in the data. It was just country data and it says it's gone from around 22 years to
[00:05:44.940 --> 00:05:51.300]   over 38 years in 2023 and it's projected to continue rising to approximately 44 years by
[00:05:51.300 --> 00:05:57.840]   2100. And then it offers a cogent explanation. This trend is likely due to a combination of increasing
[00:05:57.840 --> 00:06:03.540]   life expectancy and decreasing fertility rates worldwide. As medical technology improves more
[00:06:03.540 --> 00:06:08.040]   people are living longer, birth rates are declining particularly in developed regions. It's picked this
[00:06:08.040 --> 00:06:12.300]   all out and then it moves on to the next insight. The countries that have seen the most significant
[00:06:12.300 --> 00:06:17.700]   increases in median age are these ones and again it gives an explanation as to why their
[00:06:17.700 --> 00:06:22.500]   median age might have risen more than any other. For example Albania has seen significant
[00:06:22.500 --> 00:06:27.660]   emigration of younger people which could also lead to an older median age. Is it me or
[00:06:27.660 --> 00:06:33.300]   is that kind of crazy that it crunched all the data, visualized it but then also gave really
[00:06:33.300 --> 00:06:39.060]   interesting analyses of the data. Now you can read the other analyses but each of them are really
[00:06:39.060 --> 00:06:44.340]   interesting and the final visualization which I asked for is brilliant I think. Notice how the
[00:06:44.340 --> 00:06:50.340]   graph goes from green to red when you get to the future projection. I didn't ask it to do that. Now
[00:06:50.340 --> 00:06:55.260]   obviously in this video I'm going to focus on the flashy visuals and the cool little tricks it can
[00:06:55.260 --> 00:06:57.480]   do but in terms of data analytics.
[00:06:57.480 --> 00:07:02.340]   That is what is going to change jobs, change industries and remember this is code interpreter
[00:07:02.340 --> 00:07:08.220]   alpha version 1. Look at the difference between mid Journey version 1 and now mid Journey version 5
[00:07:08.220 --> 00:07:13.980]   a year later. How about basic video editing? Now there is a limit to what it can do but it can do
[00:07:13.980 --> 00:07:20.580]   some basic video editing if you ask it. For example I uploaded a short file and asked it to rotate the
[00:07:20.580 --> 00:07:27.300]   file 180 degrees and it was able to do it. Now I'm not saying that is massively useful but it was able
[00:07:27.300 --> 00:07:33.900]   to do it. Here is a similar example. I uploaded an image file and then said can you zoom out from the
[00:07:33.900 --> 00:07:39.780]   center of the image. Now initially it did zoom in but then I clarified that I wanted it to zoom out
[00:07:39.780 --> 00:07:45.300]   from the center. Just to be cheeky I also asked can you make it black and white. Oh and I also
[00:07:45.300 --> 00:07:51.120]   asked to add music but it couldn't add music. Anyway here is the end result. By the way it
[00:07:51.120 --> 00:07:57.120]   gave it to me as an mp4 file and look it zooms out from the center and it's made the image
[00:07:57.120 --> 00:08:02.220]   black and white. Now because I got access so recently I honestly haven't explored the limits
[00:08:02.220 --> 00:08:06.720]   of what kind of video editing I can do with ChatGPT code interpreter but I will let you know
[00:08:06.720 --> 00:08:12.720]   when I can. Now back to visualizations. I gave it a hypothetical scenario that sounds kind of
[00:08:12.720 --> 00:08:19.620]   realistic. I sent 231 CVs, got 32 responses, 12 phone interviews, three follow-up face-to-face
[00:08:19.620 --> 00:08:26.940]   interviews and one job offer which I rejected. I output a downloadable Sankey diagram of this data. I
[00:08:26.940 --> 00:08:32.400]   did then get it to change the coloring slightly but I think that's a pretty cool Sankey diagram.
[00:08:32.400 --> 00:08:39.960]   Look sent CVs 231 and then receive responses and you can go down 32 phone interviews, 12
[00:08:39.960 --> 00:08:45.660]   face-to-face interviews and three job offers and one rejected offer. Obviously I could have tweaked
[00:08:45.660 --> 00:08:51.240]   that for hours, make it more visual, make it more interactive, maybe make a gif of it but for two
[00:08:51.240 --> 00:08:56.760]   minutes work I think that's a pretty interesting and incredible output. Next and here is one that
[00:08:56.760 --> 00:09:02.100]   you might say is a little bit concerning and it's about steganography. Now I will admit I
[00:09:02.100 --> 00:09:06.300]   am not at all an expert in fact I know virtually nothing about it. Essentially what it involves
[00:09:06.300 --> 00:09:12.240]   though is hiding a message inside an image or inside some code and GPT-4 was more than willing
[00:09:12.240 --> 00:09:17.880]   to play along and it encoded a secret message into an image. There is the image by the way
[00:09:17.880 --> 00:09:22.200]   and if you looked at that you'd think that's totally normal that's just a silly little image
[00:09:22.200 --> 00:09:26.580]   right? Well apparently here's what it can do. To a casual observer it looks like a simple image with
[00:09:26.580 --> 00:09:32.100]   some shapes but it actually contains the hidden message "Hello World" then it provided a python
[00:09:32.100 --> 00:09:38.040]   function which can be used to decode the message from the image. Now obviously this is just a silly
[00:09:38.040 --> 00:09:43.200]   example that is totally harmless but am I being crazy in thinking this is a somewhat concerning
[00:09:43.200 --> 00:09:48.540]   ability for future language models to possess especially when they reach the level of an AGI.
[00:09:48.540 --> 00:09:54.900]   Often OpenAI talk about future versions of GPT doing scientific research and finding things that
[00:09:54.900 --> 00:09:56.400]   humans wouldn't have discovered. But let me explain that a little bit more. First of all,
[00:09:56.400 --> 00:10:02.400]   let me pose the scenario that it gets better than any human expert at steganography. But anyway enough
[00:10:02.400 --> 00:10:08.580]   from me I'll let the experts weigh in on that one. Next, did you know that GPT-4 with code interpreter
[00:10:08.580 --> 00:10:14.280]   can do text to speech? Just before anyone comments though why did I write "Proceed without further
[00:10:14.280 --> 00:10:20.520]   question"? Because GPT-4 with code interpreter has a tendency to always ask clarifying questions
[00:10:20.520 --> 00:10:26.220]   and if you have access to only 25 messages every three hours you don't want to use up half or more
[00:10:26.220 --> 00:10:31.320]   of them on clarifying what it wants to do or saying "yes please do that". But I found writing
[00:10:31.320 --> 00:10:36.240]   "proceed without further question" means it gets straight to it and essentially you get double the
[00:10:36.240 --> 00:10:41.760]   number of prompts for your money. Anyway as you can see I asked "turn this entire prompt starting
[00:10:41.760 --> 00:10:47.100]   from the beginning into a text to speech file". Now quite a few times it denied it had the ability
[00:10:47.100 --> 00:10:52.200]   to do this but eventually I got it to work. It was actually when I finally gave it this
[00:10:52.200 --> 00:10:56.040]   prompt and it worked. I say it worked but it didn't quite work as
[00:10:56.040 --> 00:10:59.820]   intended. Check it out. Here is the text to speech that it came up with.
[00:10:59.820 --> 00:11:04.860]   "You are ChatGPT, a large language model trained by OpenAI. When you send a message containing
[00:11:04.860 --> 00:11:09.540]   Python code to Python it will be executed in a stateful Jupyter notebook environment. Python
[00:11:09.540 --> 00:11:15.720]   will respond with the output of the execution or timeout after 120.0 seconds. Internet access for
[00:11:15.720 --> 00:11:20.280]   this session is disabled. Do not make external web requests or API calls as they will fail."
[00:11:20.280 --> 00:11:25.860]   Now thank you Stephen Hawking for that message. The only thing is it had nothing to do with my original prompt. Now anyway when
[00:11:25.860 --> 00:11:31.020]   you get access to Code Interpreter play about with text to speech because it is able to do it even if
[00:11:31.020 --> 00:11:36.300]   it denies it. Time for a fun one. I asked "create a tree map of the letters in the following quote"
[00:11:36.300 --> 00:11:41.340]   and I'm not going to read it out because I am not good at tongue twisters. Anyway I said "give each
[00:11:41.340 --> 00:11:46.680]   part of the tree map a different color and output a downloadable file. Proceed without further
[00:11:46.680 --> 00:11:52.020]   question". And here is the output and I checked it for the letter P and it was correct that there
[00:11:52.020 --> 00:11:55.680]   were 36 instances of the letter P in the output. And look how
[00:11:55.680 --> 00:12:00.720]   it's proportional with the number of instances of the letter and the size of each rectangle. I think
[00:12:00.720 --> 00:12:06.540]   that is pretty insane. Okay back to something more serious. I uploaded this file which is an image of
[00:12:06.540 --> 00:12:11.940]   a math problem. Quite a hard one as well. And you guessed it I said "solve the math problem in this
[00:12:11.940 --> 00:12:18.120]   image". It then extracted the text from the image presumably using OCR and then proceeded to solve it.
[00:12:18.120 --> 00:12:23.520]   And I'm going to get onto this in a second. It is better at math than Wolfram Alpha. I know that's a
[00:12:23.520 --> 00:12:29.220]   claim but it's far less buggy. I found Wolfram Alpha crashing very frequently. Anyway here are
[00:12:29.220 --> 00:12:34.860]   the two solutions and isn't that incredible. From a photo essentially it then extracts out the math
[00:12:34.860 --> 00:12:39.840]   problem including the two square roots and then solves it. This is all within the same window of
[00:12:39.840 --> 00:12:46.440]   ChatGPT. No need for any other apps or extensions. Next it can do radial bar plots which I think are
[00:12:46.440 --> 00:12:50.580]   really quite beautiful. I'm not saying this is the best one ever and I'm sure you could tweak
[00:12:50.580 --> 00:12:53.340]   it to make it more clear and beautiful. But look at that.
[00:12:53.340 --> 00:13:00.120]   The life expectancy in the US climbing from 1800 and then it goes clockwise reaching a projected
[00:13:00.120 --> 00:13:06.540]   almost 90 by 2100. Again I'm sure you could do a far better job than me in extracting out a more
[00:13:06.540 --> 00:13:11.880]   beautiful diagram. But aren't radial bar plots just beautiful to look at. Speaking of cool diagrams
[00:13:11.880 --> 00:13:17.040]   how about this. I didn't even specify which visualization to do. I uploaded the same life
[00:13:17.040 --> 00:13:22.620]   expectancy data and I just said "what are the most advanced and technical visualizations you can do
[00:13:22.620 --> 00:13:23.160]   with this data".
[00:13:23.160 --> 00:13:27.960]   Proceed to do them. Now honestly it picks some visualizations that I don't think are the most
[00:13:27.960 --> 00:13:33.720]   advanced but nevertheless it was creative. Here is what it did. It does frequently make the mistake
[00:13:33.720 --> 00:13:38.460]   of cluttering the axes and having far too many labels so that you can't see anything.
[00:13:38.460 --> 00:13:43.440]   So scrub that one out. Not great. But what about the next few. Remember it just did this on its
[00:13:43.440 --> 00:13:48.180]   own. This is a heat map and you can see some really interesting things from this data. Like
[00:13:48.180 --> 00:13:52.980]   India starting with a much lower life expectancy than anyone else but gradually
[00:13:52.980 --> 00:13:58.920]   rising but still falling behind the others even in 2100. And look at China. Look how the life
[00:13:58.920 --> 00:14:04.800]   expectancy drops in the 60s and 70s. I think we all know what happened there. Compare that to the
[00:14:04.800 --> 00:14:11.580]   US which is a gradual continual ascent. Actually aside from 2020 look how the shade gets a little
[00:14:11.580 --> 00:14:17.280]   darker in 2020. Obviously you guys can probably work out what happened around then but then the
[00:14:17.280 --> 00:14:22.800]   projections are for it to go up toward 90 by 2100. That's a beautiful and clear heat
[00:14:22.800 --> 00:14:27.600]   map that I didn't even ask for it to do. Let's look at the next one. Box plot. Do you remember
[00:14:27.600 --> 00:14:31.740]   those from school? You get the upper end of the data, the highest one, the lowest one,
[00:14:31.740 --> 00:14:37.740]   the median, the first quartile and third quartile. And it's a great way of statistically representing
[00:14:37.740 --> 00:14:43.380]   a set of data and it's done it for every 50th year starting in 1900. Obviously a
[00:14:43.380 --> 00:14:47.460]   slightly less beautiful diagram than some of the ones you've seen today. But for the
[00:14:47.460 --> 00:14:52.620]   statisticians in the audience you will know that this is a very useful metric for a
[00:14:52.620 --> 00:14:57.840]   lot of data. The individual points above and below are typically when there are outliers in the data.
[00:14:57.840 --> 00:15:04.320]   I would estimate that all of these visualizations only took around two, two and a half minutes. So
[00:15:04.320 --> 00:15:10.020]   definitely not the 10 seconds as I said that you often see on Twitter. I mean have you ever seen GPT-4
[00:15:10.020 --> 00:15:14.820]   give an answer in less than 10 seconds? Speaking of useful I think many professionals will find the
[00:15:14.820 --> 00:15:20.460]   next thing that I'm about to showcase the most useful of all. Any insights that GPT-4 finds,
[00:15:20.460 --> 00:15:22.440]   trends, medians, analyses,
[00:15:22.440 --> 00:15:28.080]   whatever. You can ask it to add to the original file and then download it. Do you remember that
[00:15:28.080 --> 00:15:34.680]   the original file was called Median Age Years? Well notice this file name Median Age Years with
[00:15:34.680 --> 00:15:40.920]   insights. It has created a downloadable new file with the insights included and look at some of the
[00:15:40.920 --> 00:15:48.780]   insights that I mean. You have the change from 1950 to 2100 and here is the average median age
[00:15:48.780 --> 00:15:52.260]   throughout the period and the change from 2023
[00:15:52.260 --> 00:15:58.860]   to 2100. Notice that the original file didn't have those columns. They were added by GPT-4 with code
[00:15:58.860 --> 00:16:04.080]   interpreter. And now how about data progression video files. I was honestly shocked when I saw
[00:16:04.080 --> 00:16:10.860]   that it could do this but I asked can you make a 256 by 256 mp4 that gradually reveals the lines
[00:16:10.860 --> 00:16:16.080]   as they progress on the x-axis. This was about the median age over time. Here is what it did.
[00:16:16.080 --> 00:16:22.080]   And look at how the data and the chart progresses as time moves along. I was
[00:16:22.080 --> 00:16:28.260]   really shocked to see this. And the line in red which is going to be labeled at the end is the
[00:16:28.260 --> 00:16:34.200]   global median age. And remember it calculated that. That wasn't in the original file. Now I'm
[00:16:34.200 --> 00:16:39.720]   not sure why it picked out these four countries. Maybe because they represent extremes. But either
[00:16:39.720 --> 00:16:46.380]   way I think the result is phenomenal. And I'm genuinely impressed that it did this even though
[00:16:46.380 --> 00:16:51.780]   I know the final result could be improved dramatically. For example far higher resolution and
[00:16:51.780 --> 00:16:56.580]   maybe the global median age labeled from the start. And actually now that it's got to the end
[00:16:56.580 --> 00:17:01.980]   I can see why it did pick out these countries. Because niger did have the lowest median age in
[00:17:01.980 --> 00:17:08.880]   2100 and it looks like Puerto Rico had the highest and the fastest aging one was Albania. Next and
[00:17:08.880 --> 00:17:14.100]   this is going to shock quite a few people. What about image editing. I created this image in mid
[00:17:14.100 --> 00:17:21.600]   journey version 5 and then here's what I asked. I said use OpenCV to select the foreground of this image. And look what it did.
[00:17:21.600 --> 00:17:27.600]   It picked out the foreground. No blue sky. Now I know it's not perfect but it's nevertheless
[00:17:27.600 --> 00:17:34.020]   impressive all within the window of ChatGPT. This does actually make me wonder if OpenAI and
[00:17:34.020 --> 00:17:40.860]   ChatGPT is eventually not now but in a few years going to swallow all other apps. Or maybe Google's
[00:17:40.860 --> 00:17:47.040]   Gemini. But either way one interface one website one app doing the job of all others. And by the
[00:17:47.040 --> 00:17:51.420]   way of course ChatGPT is now available on iOS. But imagine you have one app.
[00:17:51.420 --> 00:17:57.600]   And it can do image editing, text to speech, video editing, everything data analysis. Not at GPT-4
[00:17:57.600 --> 00:18:03.720]   levels but GPT-6 or GPT-7 levels. If you can get every piece of information, service and application
[00:18:03.720 --> 00:18:08.700]   in one interface. A bit like now people being addicted to their smartphones. Won't people be
[00:18:08.700 --> 00:18:13.500]   addicted to this one interface. Again that's not going to happen now but I'm just posing it as a
[00:18:13.500 --> 00:18:17.340]   question to think over. For the moment though before anyone gets too carried away it does
[00:18:17.340 --> 00:18:21.240]   still hallucinate quite a lot. So I uploaded this image and I asked it questions about it.
[00:18:21.240 --> 00:18:26.760]   And it answered and I was like wow it can do image recognition. It said this image appears to be a
[00:18:26.760 --> 00:18:32.160]   digital painting of a humanoid figure at a desk with a rather complex background. I was initially
[00:18:32.160 --> 00:18:36.960]   amazed until I realized that it probably got that from the file name. Because when I asked it
[00:18:36.960 --> 00:18:43.140]   questions it got it wrong. So I said what is on the desk. I look back there's this weird kind of
[00:18:43.140 --> 00:18:48.900]   microphone and a bit of paper and not much else a keyboard. And look what it said. There are multiple
[00:18:48.900 --> 00:18:51.060]   floating holographic displays. Okay.
[00:18:51.060 --> 00:18:57.720]   A mouse. Not really. A desk lamp. I can't see that. And then tools and devices. Now correct me
[00:18:57.720 --> 00:19:01.740]   if I'm wrong but I think most of those are incorrect. Now obviously I need to do far more
[00:19:01.740 --> 00:19:06.420]   experiments to see if it actually can recognize any particular images. And maybe I'm putting it
[00:19:06.420 --> 00:19:11.160]   down too harshly. But at the moment it does seem to hallucinate if you ask it about too
[00:19:11.160 --> 00:19:15.180]   much of the detail of an image. Next you remember how one of the key weaknesses of
[00:19:15.180 --> 00:19:20.880]   GPT-4 is that it can't really count things. Especially not characters, words etc. And even more so
[00:19:20.880 --> 00:19:25.680]   it can't do division. And some of you might be thinking well with Wolfram Alpha it can do those
[00:19:25.680 --> 00:19:31.560]   things. Not quite. Here is an example of the Code Interpreter plugin essentially eating Wolfram Alpha
[00:19:31.560 --> 00:19:36.600]   obviating it making it not obvious what the utility of it is if you've got Code Interpreter.
[00:19:36.600 --> 00:19:41.820]   I asked divide the number of the letter E's in this prompt by the number of the letter T's.
[00:19:41.820 --> 00:19:46.140]   Now you might think Code Interpreter can improve things by doing the character counting. But it
[00:19:46.140 --> 00:19:50.700]   can also do the division. Notice how it counted the characters correctly compared to
[00:19:50.700 --> 00:19:55.440]   Wolfram Alpha and of course got the division correct as well. So if it can do advanced
[00:19:55.440 --> 00:20:01.140]   quadratics and do division and character counting etc. It does beg the question what would we use
[00:20:01.140 --> 00:20:05.640]   Wolfram Alpha for that we can't use Code Interpreter for. I honestly might not know
[00:20:05.640 --> 00:20:09.780]   something that you guys know so do let me know in the comments. It also got this math question
[00:20:09.780 --> 00:20:14.760]   correct. And notice you get these beautiful math visuals that you don't get with the base version
[00:20:14.760 --> 00:20:20.520]   of GPT-4. You get something more like this where the visuals aren't as clear. And notice the base version
[00:20:20.520 --> 00:20:25.320]   of GPT-4 gets the question wrong. It can't do division but with Code Interpreter it gets the
[00:20:25.320 --> 00:20:29.580]   question right. Next one is a quick one. Pie chart. Nothing too special but I think it is
[00:20:29.580 --> 00:20:35.220]   a fairly beautiful visualization. It doesn't seem to matter how big the CSV file is that you upload.
[00:20:35.220 --> 00:20:40.980]   This next example was really quite fascinating. It was a word puzzle. I have tried this particular
[00:20:40.980 --> 00:20:45.180]   word puzzle on GPT-4 dozens of times. The reason I picked this puzzle,
[00:20:45.180 --> 00:20:50.340]   it's called a word ladder, is because it really struggles with the puzzle if the number of steps
[00:20:50.340 --> 00:20:55.680]   required is more than a certain number. Usually about five or six steps. It gave me a really
[00:20:55.680 --> 00:21:00.720]   interesting border of the limits of GPT-4's planning abilities with language. Anyway,
[00:21:00.720 --> 00:21:05.940]   it always gets it wrong. Here is a demonstration with the base model of GPT-4. You might say,
[00:21:05.940 --> 00:21:12.240]   why is this wrong? But look at how it's changed from C's to Sags which is more than one letter
[00:21:12.240 --> 00:21:17.160]   change. And that's typical of the kind of errors it makes. What about with Code Interpreter? Well,
[00:21:17.160 --> 00:21:20.160]   you can probably guess the ending given that I featured it in the video.
[00:21:20.160 --> 00:21:26.880]   But it gets it right. I believe it draws upon a hard-coded word set. And this does point towards
[00:21:26.880 --> 00:21:31.740]   the kind of puzzles that I think GPT-4 with Code Interpreter will be able to solve. Things like
[00:21:31.740 --> 00:21:37.860]   crosswords and Sudokus. Okay, not exactly world changing but nevertheless I think quite fascinating.
[00:21:37.860 --> 00:21:43.080]   And how about Venn diagrams? The reason I picked this example is that I had to go through about 10
[00:21:43.080 --> 00:21:48.660]   steps to get it to create this rather basic three-way Venn diagram. This represents the overlap
[00:21:48.660 --> 00:21:49.980]   between dogs, AI, and AI. And that's why I picked this example. And I think it's a really good
[00:21:49.980 --> 00:21:55.080]   example. And apparently all of them are loyal companions. Well, we will see about that. But
[00:21:55.080 --> 00:21:59.220]   anyway, it took quite a few steps to get it right which is pretty annoying. But here's the really
[00:21:59.220 --> 00:22:05.100]   interesting thing. Once I got it set up in the way that I like, all I had to do was say, use the
[00:22:05.100 --> 00:22:11.700]   format above to create a new three-way Venn diagram. This time for mangoes, movie heroes, and
[00:22:11.700 --> 00:22:17.460]   marmosets. Try to make each entry funny and use different colors. Proceed without further questions.
[00:22:17.460 --> 00:22:19.800]   So it may have been a struggle to set
[00:22:19.800 --> 00:22:26.460]   up the format initially but once done it was so easy to iterate a new three-way Venn diagram.
[00:22:26.460 --> 00:22:31.440]   And actually it was better than the original. Apparently all three are adored by fans worldwide.
[00:22:31.440 --> 00:22:37.680]   Apparently only marmosets and movie heroes can climb up trees really fast and mangoes and marmosets
[00:22:37.680 --> 00:22:44.100]   can hang upside down. That's crazy. One or two prompts iterating on a design already agreed upon.
[00:22:44.100 --> 00:22:48.900]   This is honestly what is likely to happen in the future with people spending hours to find the
[00:22:48.900 --> 00:22:49.620]   perfect data-based Venn diagram. And I think that's a really good example of how to create a three-way
[00:22:49.620 --> 00:22:51.060]   Venn diagram. So you can create a three-way Venn diagram with a single piece of data visualization or
[00:22:51.060 --> 00:22:57.120]   piece of data analysis and then just hitting copy paste for all their other files. Perfect it once
[00:22:57.120 --> 00:23:02.400]   and then it does the rest for you. A quick couple of bonus ones before I finish. You can just ask
[00:23:02.400 --> 00:23:08.100]   it to come up with a visualization giving it no direction at all. It came up with a distribution
[00:23:08.100 --> 00:23:13.320]   of prime numbers up to 10,000. Thing is I believe there's a slight mistake at the beginning because
[00:23:13.320 --> 00:23:19.440]   I think there's only 25 in the first 100 and 21 in the next 100. So you probably do want to still
[00:23:19.440 --> 00:23:23.820]   check the outputs that Code Interpreter gives you. And that's another reason it's not going to
[00:23:23.820 --> 00:23:29.160]   instantly replace all data analysis and data visualization. It's not perfect and it's not
[00:23:29.160 --> 00:23:33.120]   fully reliable but you've got to look ahead to where things are going. I'm going to end
[00:23:33.120 --> 00:23:41.580]   where I started with this insane 3D surface map of a volcano. If this is what GPT-4 can
[00:23:41.580 --> 00:23:49.260]   do now with the alpha version of Code Interpreter what will GPT-5 or 6 do with version
[00:23:49.260 --> 00:23:55.260]   7 or 20 of Code Interpreter? I was about to speculate about that but then I got distracted
[00:23:55.260 --> 00:24:03.600]   with trying to get inside this volcano. It is kind of fun. Look I'm going above and into the volcano.
[00:24:03.600 --> 00:24:07.920]   Let me know what you will try when you get access. I know they're rolling it out steadily and I know
[00:24:07.920 --> 00:24:12.600]   that some people have had access to it for about three weeks. So hopefully if you want to experiment
[00:24:12.600 --> 00:24:17.700]   with it you will be able to soon. In the meantime do let me know if you have any ideas that you want
[00:24:17.700 --> 00:24:19.080]   me to experiment with. And thank you so much for watching. I'll see you in the next video. Bye bye.
[00:24:19.080 --> 00:24:21.840]   Thank you so much for watching all the way to the end.

