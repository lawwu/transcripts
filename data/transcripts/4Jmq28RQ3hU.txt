
[00:00:00.640 --> 00:00:08.400]   Okay so I had an idea. I thought maybe what we could do is actually put together a few videos
[00:00:08.400 --> 00:00:15.520]   and what we'll do in the next few videos is build out a full Q&A project. And this is something
[00:00:15.520 --> 00:00:21.360]   that I've actually been wanting to do for quite a while now and I think it will actually be really
[00:00:21.360 --> 00:00:25.360]   cool. I was thinking through it this morning and I thought okay today we're going to start it.
[00:00:26.320 --> 00:00:32.880]   So what you can see on the screen right now is the github repo for this project which is
[00:00:32.880 --> 00:00:39.360]   completely empty almost. There's a readme, a gitignore and this one architecture drawing that I
[00:00:39.360 --> 00:00:46.480]   set up literally you can see four minutes ago. So I'm going to show you that and I'm going to
[00:00:46.480 --> 00:00:50.880]   explain what we're actually going to go through and I think we're going to cover a lot of different
[00:00:53.040 --> 00:00:58.320]   things. So I think that is one of the reasons why I think this is such a cool project.
[00:00:58.320 --> 00:01:06.800]   So at the moment this is like the basic architecture of what we would need to build
[00:01:06.800 --> 00:01:19.200]   a Q&A model and the end goal is to have a front end which looks kind of like this.
[00:01:20.320 --> 00:01:27.200]   So we'll have like a search bar here and we'll have some visual up here. It's going to be a
[00:01:27.200 --> 00:01:31.600]   little bit better than the sigma and I'm going to show you what I already have and maybe we
[00:01:31.600 --> 00:01:35.120]   can use that or maybe we'll do something different I don't know. And what we're going to be able to
[00:01:35.120 --> 00:01:44.720]   do is ask a question here and we're going to be able to answer the question based on
[00:01:45.760 --> 00:01:51.600]   stoic philosophy books. So I haven't really read any of these, I've read like little bits
[00:01:51.600 --> 00:01:59.040]   but they're pretty interesting and I think quite unique. So as far as I know there's
[00:01:59.040 --> 00:02:05.280]   definitely not anything like this out there at the moment where you ask a question and you get
[00:02:05.280 --> 00:02:12.400]   the answer back from some ancient stoic philosophy book. And there's only really two books that I've
[00:02:12.400 --> 00:02:24.800]   thought of so far which is Meditations by Marcus Aurelius and Letters from a Stoic by Seneca.
[00:02:24.800 --> 00:02:34.960]   And the good thing with both of these is that we can find both of them online for free so we can
[00:02:34.960 --> 00:02:41.360]   use Python requests to get these. So I'll just kind of put a little list here of what I think
[00:02:41.360 --> 00:02:49.280]   we're going to need. So the first one is actually extracting and downloading this data so we'll be
[00:02:49.280 --> 00:02:57.840]   using requests for that. And then once we have actually got that data we need to pre-process it
[00:02:57.840 --> 00:03:05.760]   and when we're pre-processing it I think that will just be a case of using Regex
[00:03:05.760 --> 00:03:13.120]   more than anything else but I'm not sure yet so let's see. So after we pre-process it and
[00:03:13.120 --> 00:03:19.040]   that's when we get into this stuff over here. So this whole sort of stack that you can see
[00:03:19.040 --> 00:03:28.960]   without the API. So this is a typical, it's called a reader or retriever
[00:03:31.600 --> 00:03:39.360]   reader and what we do is we use this up here, this is our database, it's a document store,
[00:03:39.360 --> 00:03:46.080]   Elasticsearch document store and what we're going to do is feed all of these.
[00:03:46.080 --> 00:03:53.440]   Sorry it's getting a little bit messy with the color so let me change it.
[00:03:58.400 --> 00:04:01.840]   So what we're going to do is take these and we're going to feed them
[00:04:01.840 --> 00:04:10.880]   into our document store and once we have that what we want to do is build this retriever reader
[00:04:10.880 --> 00:04:21.680]   stack and it will allow us to query the retriever down here and what the retriever will do
[00:04:21.680 --> 00:04:27.680]   is send that query to Elasticsearch here which is what you can see happening there.
[00:04:28.080 --> 00:04:36.640]   And returning from that we'll get so many different contexts. So all of the text from
[00:04:36.640 --> 00:04:43.360]   meditations and letters from Stoic, we'll split them up by maybe paragraph and saw them in here
[00:04:43.360 --> 00:04:47.920]   and what these contexts will be are the most relevant paragraphs.
[00:04:51.360 --> 00:04:58.880]   And once we've done that, this retriever will pass on the context to our reader model down here
[00:04:58.880 --> 00:05:07.360]   and what the reader model will do is say it's given a long sentence like this or paragraph,
[00:05:07.360 --> 00:05:13.840]   it will say okay the actual answer that you want is actually only these three words here and it
[00:05:13.840 --> 00:05:19.840]   will return those three words and what we want to do is return those three words in our answer
[00:05:20.880 --> 00:05:28.720]   back to our API. But alongside the answer we're also going to include the full context here
[00:05:28.720 --> 00:05:38.240]   as well. So we get a few things back and I think that that's like going to be the more
[00:05:38.240 --> 00:05:42.560]   machine learning side of it but obviously we need to support all the machine learning side
[00:05:42.560 --> 00:05:49.280]   and I mean the very first part of that that you can obviously see here is the
[00:05:49.280 --> 00:05:54.080]   API. So let me so let me write down so we have the the ML part
[00:05:54.080 --> 00:05:58.720]   and for that we're going to be using something called haystack.
[00:05:58.720 --> 00:06:07.440]   And once we get out of that part we move on,
[00:06:07.440 --> 00:06:14.080]   I'm just going to use a different color here, move on to our API.
[00:06:15.280 --> 00:06:20.000]   The API we'll just we'll use probably fast API to set that up.
[00:06:20.000 --> 00:06:26.400]   Then once we set that up we go on to our front end part
[00:06:26.400 --> 00:06:35.600]   and the front end I don't I'm not a front end developer I just mainly use Python but I do know
[00:06:35.600 --> 00:06:45.200]   Angular a little bit. So what we're going to do is build all of this part using Angular.
[00:06:45.200 --> 00:06:58.320]   So this will be our Angular front end and that's essentially everything we'll be covering but
[00:06:58.320 --> 00:07:03.440]   there's you know there's quite a lot in here. In particular as well what I've missed
[00:07:04.240 --> 00:07:12.400]   is alongside you know we have our reader model down here but what I want to try and do is rather
[00:07:12.400 --> 00:07:21.440]   than just taking the reader model from Hugging Face Transformers as we normally would, I want to
[00:07:21.440 --> 00:07:30.800]   actually try training it and for that we need to use something called MLM which is mass language
[00:07:30.800 --> 00:07:39.760]   modeling. So we would need to train a BERT model using MLM or fine-tune the BERT model I should say
[00:07:39.760 --> 00:07:49.040]   on the data from our books up here and then we'd also want to train it so that it performs Q&A
[00:07:49.040 --> 00:07:55.680]   and for that we need to use the squad data set, probably squad anyway.
[00:07:58.000 --> 00:08:04.000]   So you know there's quite a lot that I think we would have to do to build this
[00:08:04.000 --> 00:08:12.160]   and I think it'd be pretty interesting. So that is what we're going to be covering in
[00:08:12.160 --> 00:08:21.280]   sort of the next few videos and the one other final little thing. Okay so over here we have
[00:08:21.840 --> 00:08:28.080]   the Marcus Aurelius Sit-Man and I thought maybe something like this would be cool. I don't know
[00:08:28.080 --> 00:08:36.480]   this is something I drew ages ago and this is Marcus Aurelius and I think something like this,
[00:08:36.480 --> 00:08:40.640]   maybe this or something like it would be pretty cool to just have in the middle of the web page
[00:08:40.640 --> 00:08:48.240]   and underneath we have a search bar and keep it pretty simple. So I think that's everything really
[00:08:48.800 --> 00:08:55.440]   for the plan and I think the first thing we're going to do in the next video is actually
[00:08:55.440 --> 00:09:03.040]   sell requests and download that data and maybe pre-process it as well or they might be two videos.
[00:09:03.040 --> 00:09:11.040]   So that's everything for this video. I hope that you're as excited about this as I am because I'm
[00:09:11.040 --> 00:09:14.480]   really looking forward to actually building all of this. I think it'll be super cool and
[00:09:15.280 --> 00:09:23.520]   I mean ideally at the end it's one it's going to look cool and two we're going to learn like a huge
[00:09:23.520 --> 00:09:27.440]   amount of stuff if you even put all this together there's so many different things that you need to
[00:09:27.440 --> 00:09:34.160]   know in order to make everything work. So it should be really cool and I'm looking forward
[00:09:34.160 --> 00:09:41.040]   to getting started with it. So I will see you in the next video where we'll actually download the
[00:09:41.040 --> 00:09:42.900]   the data and pre-process it.
[00:09:42.900 --> 00:09:52.900]   [BLANK_AUDIO]

