
[00:00:00.000 --> 00:00:04.000]   Hello, hello.
[00:00:04.000 --> 00:00:18.000]   Hey, Scott, good to see you.
[00:00:18.000 --> 00:00:22.000]   Hey, good to see you. How are things?
[00:00:22.000 --> 00:00:24.000]   Busy, busy, busy. But good.
[00:00:24.000 --> 00:00:30.000]   I've been playing with Purser's new CLI Agent plus GPT-5 today.
[00:00:30.000 --> 00:00:32.000]   Oh, yeah.
[00:00:32.000 --> 00:00:36.000]   So far, it seems pretty solid.
[00:00:36.000 --> 00:00:38.000]   Really?
[00:00:38.000 --> 00:00:40.000]   Plus, they're subsidizing it right now, right?
[00:00:40.000 --> 00:00:42.000]   So it's free at the moment.
[00:00:42.000 --> 00:00:52.000]   But it seems to be doing as good or better than AMP code, which I had been using, which is paper token, which is so it adds up a lot.
[00:00:52.000 --> 00:00:58.000]   So it's not as steerable, I think.
[00:00:58.000 --> 00:01:04.000]   Like, they don't have the nice, like, app mentioned feature working in their CLI and other things, but it seems to be doing pretty good.
[00:01:04.000 --> 00:01:18.000]   We'll see how it does when they actually start counting tokens and how the costs measure up.
[00:01:18.000 --> 00:01:20.000]   Yeah.
[00:01:20.000 --> 00:01:22.000]   I saw.
[00:01:22.000 --> 00:01:26.000]   Did I see it in the latent space discord?
[00:01:26.000 --> 00:01:28.000]   Oh, I saw somebody.
[00:01:28.000 --> 00:01:36.000]   I think it was Kieran Klassen from every created a sub agent that uses the cursor CLI for cloud code.
[00:01:36.000 --> 00:01:44.000]   So you can actually use GPT-5 in cloud code.
[00:01:44.000 --> 00:01:49.000]   I'm sure Anthropic loves that.
[00:01:49.000 --> 00:02:02.000]   If anyone tried Zen MCP, I found that really useful for using O3 before this, and you can use GPT-5 via the API as well.
[00:02:02.000 --> 00:02:06.000]   I just haven't had a chance to see what that's like.
[00:02:06.000 --> 00:02:33.000]   Well, I'm excited for this presentation, Scott, because I think, you know, as Manuel is talking about, none of the tools, the coding tools and the models, like their boats are small and constantly being one ups.
[00:02:33.000 --> 00:02:38.000]   But where we will have enduring gains is where we learn how to use them all better.
[00:02:38.000 --> 00:02:42.000]   And so that's I hope what you're going to be teaching us today.
[00:02:42.000 --> 00:02:48.000]   Yeah, I hope I hope that's what you all I hope that comes through.
[00:02:48.000 --> 00:03:02.000]   I mean, it is very fluid and, you know, it's actually something Manuel and I have talked about a few times of just like, you know, while these techniques might not like you pick up these techniques based on the limitations of the models at the time.
[00:03:02.000 --> 00:03:15.000]   And even if you don't necessarily need them anymore, you can you have that tool in your toolbox for, you know, when some kind of situation arises.
[00:03:15.000 --> 00:03:27.000]   So at the very least, if we're already moved on from document based by coding systems into sub agents and GPT-5, hopefully there's a nugget in here.
[00:03:27.000 --> 00:03:41.000]   I personally find using like I've been using coding agents now, particularly amp a lot, and I find the document based workflow is still high value, especially for more complex things.
[00:03:41.000 --> 00:03:44.000]   So, you know, we're in an existing system.
[00:03:44.000 --> 00:03:45.000]   We're not vibe coding something from scratch.
[00:03:45.000 --> 00:03:58.000]   There are, you know, substantial, you're changing your refactoring your things like that, like, use the agent to build a document, review it, critique it, fix it, then have the agent build it.
[00:03:58.000 --> 00:04:04.000]   But like that document still is sort of a key grounding loop.
[00:04:04.000 --> 00:04:05.000]   Yeah.
[00:04:05.000 --> 00:04:16.000]   Yeah, my systems kind of I'll walk through what I talked about in the post, and then we kind of like where I've gone, but it's definitely changed, changed a bit and gotten a little.
[00:04:16.000 --> 00:04:34.000]   A little bit, a little bit less systematic as different things have come up.
[00:04:34.000 --> 00:04:35.000]   So, I think that's a good thing.
[00:04:35.000 --> 00:04:35.000]   I think that's a good thing.
[00:04:35.000 --> 00:04:36.000]   I think that's a good thing.
[00:04:36.000 --> 00:04:37.000]   I think that's a good thing.
[00:04:37.000 --> 00:04:38.000]   I think that's a good thing.
[00:04:38.000 --> 00:04:39.000]   I think that's a good thing.
[00:04:39.000 --> 00:04:40.000]   I think that's a good thing.
[00:04:40.000 --> 00:04:41.000]   I think that's a good thing.
[00:04:41.000 --> 00:04:42.000]   I think that's a good thing.
[00:04:42.000 --> 00:04:43.000]   I think that's a good thing.
[00:04:43.000 --> 00:04:44.000]   I think that's a good thing.
[00:04:44.000 --> 00:04:45.000]   I think that's a good thing.
[00:04:45.000 --> 00:04:46.000]   I think that's a good thing.
[00:04:46.000 --> 00:04:47.000]   I think that's a good thing.
[00:04:47.000 --> 00:04:48.000]   I think that's a good thing.
[00:04:48.000 --> 00:04:49.000]   I think that's a good thing.
[00:04:49.000 --> 00:04:50.000]   I think that's a good thing.
[00:04:50.000 --> 00:04:51.000]   I think that's a good thing.
[00:04:51.000 --> 00:04:52.000]   I think that's a good thing.
[00:04:52.000 --> 00:04:53.000]   I think that's a good thing.
[00:04:53.000 --> 00:04:54.000]   I think that's a good thing.
[00:04:54.000 --> 00:04:55.000]   I think that's a good thing.
[00:04:55.000 --> 00:04:56.000]   I think that's a good thing.
[00:04:56.000 --> 00:04:57.000]   I think that's a good thing.
[00:04:57.000 --> 00:04:58.000]   I think that's a good thing.
[00:04:58.000 --> 00:04:59.000]   I think that's a good thing.
[00:04:59.000 --> 00:05:00.000]   I think that's a good thing.
[00:05:00.000 --> 00:05:01.000]   I think that's a good thing.
[00:05:01.000 --> 00:05:02.000]   I think that's a good thing.
[00:05:02.000 --> 00:05:03.000]   I think that's a good thing.
[00:05:03.000 --> 00:05:04.000]   I think that's a good thing.
[00:05:04.000 --> 00:05:05.000]   I think that's a good thing.
[00:05:05.000 --> 00:05:06.000]   I think that's a good thing.
[00:05:06.000 --> 00:05:07.000]   I think that's a good thing.
[00:05:07.000 --> 00:05:09.000]   So, I think that's a good thing.
[00:05:09.000 --> 00:05:10.000]   I think that's a good thing.
[00:05:10.000 --> 00:05:11.000]   I think that's a good thing.
[00:05:11.000 --> 00:05:12.000]   I think that's a good thing.
[00:05:12.000 --> 00:05:13.000]   I think that's a good thing.
[00:05:13.000 --> 00:05:14.000]   I think that's a good thing.
[00:05:14.000 --> 00:05:15.000]   I think that's a good thing.
[00:05:15.000 --> 00:05:16.000]   I think that's a good thing.
[00:05:16.000 --> 00:05:42.000]   All right.
[00:05:42.000 --> 00:05:43.000]   Yeah, why don't you go ahead?
[00:05:43.000 --> 00:05:44.000]   I'll go off camera.
[00:05:44.000 --> 00:05:46.000]   Do you want me to watch the comments or you got it?
[00:05:46.000 --> 00:05:49.000]   Let's see.
[00:05:49.000 --> 00:05:52.000]   Yeah, pop in if I seem to miss anything.
[00:05:52.000 --> 00:05:57.000]   I guess we can jump in.
[00:06:13.000 --> 00:06:25.000]   We'll have that for text size.
[00:06:25.000 --> 00:06:26.000]   Looks readable here.
[00:06:26.000 --> 00:06:27.000]   All right.
[00:06:27.000 --> 00:06:28.000]   Cool.
[00:06:28.000 --> 00:06:29.000]   Yeah.
[00:06:29.000 --> 00:06:30.000]   Thanks, everybody.
[00:06:30.000 --> 00:06:32.000]   And thanks for letting me come share.
[00:06:32.000 --> 00:06:42.000]   Yeah, so this is a, you know, going to be talking about document based vibe coding systems.
[00:06:42.000 --> 00:06:59.000]   This all kind of came about as I was working on, we actually kind of been trying to challenge myself working with agents to use programming languages and tooling that I don't know so I won't jump in and like edit the code.
[00:06:59.000 --> 00:07:07.000]   And so this was for an app that was built in Tori using Rust and TypeScript in both languages.
[00:07:07.000 --> 00:07:12.000]   I don't really, I absolutely don't know anything about Rust, but I haven't really touched TypeScript.
[00:07:12.000 --> 00:07:25.000]   And so basically had had one of the, one of the reasoning models create and an architecture file.
[00:07:25.000 --> 00:07:31.000]   and, you know, like K-Ball and I were talking about in the beginning.
[00:07:31.000 --> 00:07:37.000]   It was, you know, build out, build out a, an architecture doc, refine it, ask questions.
[00:07:37.000 --> 00:07:40.000]   My primary language, Ruby.
[00:07:40.000 --> 00:07:51.000]   Um, a lot of those stuff that I'm building is in Ruby, but, um, you know, it's, it's hard to, it's hard to have like really strong opinions about AI generated code.
[00:07:51.000 --> 00:07:58.000]   And, uh, when you do, you end up, you know, not really liking what it, uh, gives you.
[00:07:58.000 --> 00:08:06.000]   So, um, but yeah, so this, I mean, basically kept it at a, kept it, kept it at a really high level.
[00:08:06.000 --> 00:08:08.000]   Um, kept it at a really high level.
[00:08:08.000 --> 00:08:10.000]   Just like, what are these, what are these pieces?
[00:08:10.000 --> 00:08:21.000]   Um, I didn't really know the libraries or anything, but, um, you know, it gave me a architecture diagram, all this stuff.
[00:08:21.000 --> 00:08:32.000]   And then what I set up with cloud code was basically here is the, here's the architecture file.
[00:08:32.000 --> 00:08:39.000]   Um, we're going to work together where you're going to tell me what you plan to do.
[00:08:39.000 --> 00:08:41.000]   And, um, then you're going to do it.
[00:08:41.000 --> 00:08:49.000]   Then you're going to tell me what you did and, um, and then tell me what in the app to actually change.
[00:08:49.000 --> 00:08:52.000]   Um, we're going to work through stories.
[00:08:52.000 --> 00:09:08.000]   So I had it go through the architecture diagram, figure out, um, you know, three, three project phases, break that down into roughly, uh, you know, I think I said 15 minute, uh, actually, let's see if it's in here.
[00:09:08.000 --> 00:09:09.000]   Um, yeah.
[00:09:09.000 --> 00:09:14.000]   Uh, it came back with some of these phases around like estimated timeline, six to eight weeks with dedicated development.
[00:09:14.000 --> 00:09:17.000]   Um, which obviously wasn't true.
[00:09:17.000 --> 00:09:23.000]   Um, and, uh, let's see here.
[00:09:23.000 --> 00:09:24.000]   Uh, let's see here.
[00:09:24.000 --> 00:09:26.000]   And also kind of peeking at the chat.
[00:09:26.000 --> 00:09:30.000]   Um, sorry.
[00:09:30.000 --> 00:09:37.000]   And, um, yeah, basically broke things out into stories, create a project plan documents for those.
[00:09:37.000 --> 00:09:38.000]   It came up with three.
[00:09:38.000 --> 00:09:44.000]   And as you can see, if you can see some of the texts on the left here, there's a bunch of other plan files that I've used.
[00:09:44.000 --> 00:09:53.000]   Um, and then as we were going through, if there are anything that you, anything that you run into that, you need to, that we don't want to keep going over.
[00:09:53.000 --> 00:10:01.000]   Or like we end up, you know, bug fixing store that in the technical considerations, markdown file and, um, you know, load that.
[00:10:01.000 --> 00:10:10.000]   And so since we were doing like, you know, three phases of like 40 user stories each, we were going to, uh, start and stop sessions all the time.
[00:10:10.000 --> 00:10:18.000]   Um, you know, if it, you have to compress context, uh, it forgets all of the roles and process you set up.
[00:10:18.000 --> 00:10:22.000]   And, um, you know, you end up getting a whole bunch of junk in your context.
[00:10:22.000 --> 00:10:32.000]   So my process was very much, uh, you do a story and, uh, and kill it, make a commit, push it up.
[00:10:32.000 --> 00:10:39.000]   Um, Oh, interesting.
[00:10:39.000 --> 00:10:50.000]   Um, but yeah, and then I can, I can jump over to the pair programming dot markdown and, um, or actually, sorry.
[00:10:50.000 --> 00:10:55.000]   Um, but yeah.
[00:10:55.000 --> 00:11:03.000]   And then when I would start a session, I would basically say, read cloud dot markdown, follow the steps for quick start a new session.
[00:11:03.000 --> 00:11:07.000]   And, um, and then tell me the, tell me the plan for the next story.
[00:11:07.000 --> 00:11:11.000]   And it would, you know, read all these files and, uh, and go through.
[00:11:11.000 --> 00:11:17.000]   And so pair programming dot markdown is, um, you know, pick up the next story.
[00:11:17.000 --> 00:11:26.000]   Uh, you know, create a plan, implement the plan, testing and verification, and then human verification.
[00:11:26.000 --> 00:11:28.000]   So summarize what was implemented.
[00:11:28.000 --> 00:11:34.000]   This, what, uh, should be visible and, um, you know, provide specific testing steps for the human.
[00:11:34.000 --> 00:11:38.000]   Um, yes, we will.
[00:11:38.000 --> 00:11:42.000]   I will definitely, uh, go through a process of just kind of like, kind of setting the stage here.
[00:11:42.000 --> 00:11:47.000]   Um, so yeah, um, there's the, the pair programming.
[00:11:47.000 --> 00:11:55.000]   And then one other thing that, that did end up happening in the, uh, the technical considerations ended up getting really long.
[00:11:55.000 --> 00:12:00.000]   And so I ended up not having enough context to do, uh, do an entire story.
[00:12:00.000 --> 00:12:10.000]   So had Claude break this down into a technical considerations folder where it could look up different things and have a reference for, for anything that we might run into.
[00:12:10.000 --> 00:12:26.000]   Um, because it does tend to, um, you know, once, once you find it make, uh, you know, a, a, once it does something wrong, you'll find that it'll do that thing wrong over and over.
[00:12:26.000 --> 00:12:33.000]   Um, and so having, having these, uh, these technical considerations docs, uh, helped a lot.
[00:12:33.000 --> 00:12:41.000]   Um, but before we jump into the process, are there any questions of what I kind of just showed here?
[00:12:41.000 --> 00:12:49.000]   And I can show, um, it actually in action.
[00:12:49.000 --> 00:12:54.000]   How much of this is project specific versus you carry over from project to project?
[00:12:54.000 --> 00:12:59.000]   Um, so this one was particularly, this one was the first one.
[00:12:59.000 --> 00:13:01.000]   So it was very project specific.
[00:13:01.000 --> 00:13:10.000]   Um, so if you see the pair programming dot markdown, uh, you know, outlines the pair programming workflow for protocol.
[00:13:10.000 --> 00:13:14.000]   Um, there's, there's no Kali, there's PN, PM build and no bundle.
[00:13:14.000 --> 00:13:16.000]   Um, I've started to use this.
[00:13:16.000 --> 00:13:34.000]   Um, I've started to, you know, when I start a new session or start a new project, I'll say to the Claude code, look at the, look at the pair programming doc in this folder or this file and, uh, adapt it for this project.
[00:13:34.000 --> 00:13:46.000]   Um, but yeah, I guess I'd say, you know, the structure is common across project, but like the details, I'll usually have Claude jump in and change.
[00:13:46.000 --> 00:13:50.000]   So like the, the, the, the handful of documents to start things out.
[00:13:50.000 --> 00:13:56.000]   Um, man, well, how do you clean up the CF markdown files?
[00:13:56.000 --> 00:14:01.000]   I, uh, you'll see, as I switch around different projects, I kind of don't.
[00:14:01.000 --> 00:14:12.000]   Um, I had, I did see that there was a new feature with Claude code recently where you can add additional, uh, you can add additional kind of like permanent working directories.
[00:14:12.000 --> 00:14:21.000]   And so whenever I find the time, I'm gonna try to, uh, you know, set it up to be my, uh, obsidian directories.
[00:14:21.000 --> 00:14:28.000]   And so have it like right there and, uh, write and read from the obsidian directory for the project, but I haven't done that yet.
[00:14:28.000 --> 00:14:33.000]   And I just have a mess of files in, uh, in all different places.
[00:14:33.000 --> 00:14:42.000]   Like, uh, sometimes it'll, it decided to put them in tech docs in this project and docs in this other project.
[00:14:42.000 --> 00:14:44.000]   It decided to use two different folders.
[00:14:44.000 --> 00:14:50.000]   Um, but I've better, I've generally just been pretty hands-off letting it do what it wants.
[00:14:50.000 --> 00:15:09.000]   And like the parts where I've designed where I want to, I want to review, I'll get an extra kind of time to, to look at it, but, um, not really, not really being very strict about any of that.
[00:15:09.000 --> 00:15:10.000]   Yikes.
[00:15:10.000 --> 00:15:15.000]   How much, how much did you write or come up with versus how much was go set it up like this?
[00:15:15.000 --> 00:15:18.000]   Uh, almost all of it was go set it up like this, Claude.
[00:15:18.000 --> 00:15:25.000]   I think I wrote a handful of sentences of like what I wanted, then it would edit the doc.
[00:15:25.000 --> 00:15:31.000]   And then I would do a quick skim and say, uh, you know, uh, let it go.
[00:15:31.000 --> 00:15:39.000]   And if it, um, you know, if anything went wrong, I'd say, you know, this, this sucks or like, this doesn't work.
[00:15:39.000 --> 00:15:47.000]   Uh, update the doc, update this doc, the doc with this new thing that we know now.
[00:15:47.000 --> 00:16:01.000]   Uh, the architecture decisions were mostly Claude.
[00:16:01.000 --> 00:16:08.000]   Um, I would usually, usually kind of let Claude do the first pass.
[00:16:08.000 --> 00:16:16.000]   And then once we try to start doing, once we start running into issues, jump in and be like, yeah, it probably needs to go this other way.
[00:16:16.000 --> 00:16:18.000]   Oh, instruction architecture.
[00:16:18.000 --> 00:16:24.000]   Uh, the instruction architecture, meaning.
[00:16:24.000 --> 00:16:25.000]   Yeah.
[00:16:25.000 --> 00:16:38.000]   Uh, basically what I'm getting at is, um, uh, so you have like your pair programming, your technical considerations, et cetera, et cetera.
[00:16:38.000 --> 00:16:43.000]   Were those things were like those kinds of documents.
[00:16:43.000 --> 00:16:49.000]   Um, did you decide, like, I think this is the way that the agent should be instructed.
[00:16:49.000 --> 00:16:54.000]   So I think we should make a technical considerations, a browser architecture, blah, blah, blah.
[00:16:54.000 --> 00:16:58.000]   And then, Hey, Claude, go, go do it like this.
[00:16:58.000 --> 00:17:10.000]   Or did you say, Hey, like Claude, I think this, this project is going to need some structure of how the instructions are formatted.
[00:17:10.000 --> 00:17:12.000]   Um, what do you think we should do?
[00:17:12.000 --> 00:17:15.000]   Um, what do you think we should do also go do it?
[00:17:15.000 --> 00:17:16.000]   Got it.
[00:17:16.000 --> 00:17:29.000]   Yeah, it was, it was mostly me on like the architecting the different docs, uh, mostly because it was, you know, the way I was thinking about it, where this is where the architecture lives.
[00:17:29.000 --> 00:17:31.000]   This is the process I want to do.
[00:17:31.000 --> 00:17:33.000]   These are the stories.
[00:17:33.000 --> 00:17:43.000]   Um, and I think, I think in my mind, I have this vision of like those being somewhere else and not in markdown files.
[00:17:43.000 --> 00:17:47.000]   Like maybe the stories are in some project management tool.
[00:17:47.000 --> 00:17:54.000]   Um, maybe the pair programming is baked into an agent at some point.
[00:17:54.000 --> 00:17:55.000]   Okay.
[00:17:55.000 --> 00:17:59.000]   So kind of like modeling it off of like, this is how I would normally build software.
[00:17:59.000 --> 00:18:02.000]   So I'd probably have this in a project management tool.
[00:18:02.000 --> 00:18:03.000]   So Claude's probably gonna need this.
[00:18:03.000 --> 00:18:07.000]   So I should make this doc for him kind of kind of thought process.
[00:18:07.000 --> 00:18:08.000]   Right.
[00:18:08.000 --> 00:18:09.000]   Right.
[00:18:09.000 --> 00:18:16.000]   And then as I'm, as I'm kind of prompting being able to, you know, as I'm thinking about it, like this thing is here, go look there.
[00:18:16.000 --> 00:18:21.000]   Um, and it was really just really just like kind of ergonomics for me as I was prompting.
[00:18:21.000 --> 00:18:22.000]   Cool.
[00:18:22.000 --> 00:18:23.000]   Good influence.
[00:18:23.000 --> 00:18:24.000]   Cool.
[00:18:24.000 --> 00:18:36.000]   Uh, any other questions before we jump into, um, a couple of demos.
[00:18:36.000 --> 00:18:37.000]   All right.
[00:18:37.000 --> 00:18:42.000]   Um, so let's see.
[00:18:42.000 --> 00:18:43.000]   So let's see.
[00:18:43.000 --> 00:18:48.000]   So I guess for the high level, the process that I kind of use, I use, uh, T mocks.
[00:18:48.000 --> 00:18:51.000]   And I usually, this is something I've been doing for a long time.
[00:18:51.000 --> 00:18:55.000]   Uh, is each session is tied to a project.
[00:18:55.000 --> 00:19:01.000]   And then each project has, uh, I dunno, are they tabs or windows?
[00:19:01.000 --> 00:19:04.000]   Um, first tab is cloud code.
[00:19:04.000 --> 00:19:06.000]   Second, second tab is Vim.
[00:19:06.000 --> 00:19:14.000]   And then what I've been doing is basically I'll switch between, uh, different projects that I'm working on.
[00:19:14.000 --> 00:19:29.000]   So here, and I've got this gonna be doing this update to, um, the library that I work on called sub layer and, um, change things around.
[00:19:29.000 --> 00:19:49.000]   So let's say, um, actually, I don't even know if I have the pair programming thing set up in this one, but, um, I've got this generator update doc that has a plan around, uh, how to, how to change this interface from this thing.
[00:19:49.000 --> 00:20:02.000]   And it's like, um, LLM output adapter, and then change it to just generates and then use kind of object literals to, um, define the output.
[00:20:02.000 --> 00:20:21.000]   And, um, and, um, let's say, check out, um, update dot MD and, um, up with a list of stories to, uh, change, to make this update.
[00:20:21.000 --> 00:20:40.000]   And, um, um, make sure the stories are about, uh, a few hours in length and, I don't know, um, make sure there's something.
[00:20:40.000 --> 00:20:52.000]   Um, for the user to test at each end of each story.
[00:20:52.000 --> 00:21:06.000]   Um, and then write that to, um, um, and then, you know, just let that go and switch over to another project.
[00:21:06.000 --> 00:21:15.000]   Like, let's see, we can go to, um, there's this game that we're working on called, uh, the 12th of state.
[00:21:15.000 --> 00:21:19.000]   That's kind of like a, a programming game that uses MCP for input.
[00:21:19.000 --> 00:21:34.000]   Um, yeah, this comes from a lot of, uh, a lot of years of just, uh, you know, doing the same process over and over.
[00:21:34.000 --> 00:21:37.000]   I don't, uh, let's see.
[00:21:37.000 --> 00:21:39.000]   So let's see what we were gonna do.
[00:21:39.000 --> 00:21:49.000]   Um, can you create a plan for, um, actually, let's just go ahead and do, um, say.
[00:21:49.000 --> 00:22:07.000]   So that's usually, I'd usually just like kind of ad lib here.
[00:22:07.000 --> 00:22:14.000]   I don't have, I could probably set up a hook for this, but I've just been like throwing in all the steps for new sessions, new session.
[00:22:14.000 --> 00:22:15.000]   Quick start here.
[00:22:15.000 --> 00:22:17.000]   Give me the plan and let that go.
[00:22:17.000 --> 00:22:20.000]   And it'll come up with some kind of plan.
[00:22:20.000 --> 00:22:21.000]   We're back here.
[00:22:21.000 --> 00:22:22.000]   Still going.
[00:22:22.000 --> 00:22:33.000]   Um, also got another project that's in, um, Swift, another language that I'm not super familiar with.
[00:22:33.000 --> 00:22:34.000]   Okay.
[00:22:34.000 --> 00:22:35.000]   And this one is, um,
[00:22:35.000 --> 00:22:36.000]   Um,
[00:22:36.000 --> 00:22:36.000]   Okay.
[00:22:36.000 --> 00:22:38.000]   So we've got planned for the next story.
[00:22:38.000 --> 00:22:51.000]   Demos chapter structure is the first pending story in phase three.
[00:22:51.000 --> 00:23:07.000]   Um, create the foundation design tutorial friendly location progression.
[00:23:07.000 --> 00:23:16.000]   And so kind of the way that I've designed this is that I'm not really looking too much at the docs, more just that there is a doc.
[00:23:16.000 --> 00:23:21.000]   Um, and then before it doesn't even work, I'll get a chance to, uh, to kind of check it out.
[00:23:21.000 --> 00:23:27.000]   And so this one, I think we're actually, um,
[00:23:27.000 --> 00:23:28.000]   Yeah.
[00:23:28.000 --> 00:23:42.000]   Uh, check out what we have built already for the first room before, uh, make sure the plan.
[00:23:42.000 --> 00:23:52.000]   So kind of having these, having these checks in here that, you know, even if the docs aren't exactly right, I've got a chance to kind of like jump in and, and guide it into the right spot.
[00:23:52.000 --> 00:23:55.000]   So there's usually the plan beforehand.
[00:23:55.000 --> 00:23:56.000]   It'll do the work.
[00:23:56.000 --> 00:23:57.000]   It'll tell me what it did.
[00:23:57.000 --> 00:24:01.000]   And sometimes it'll tell me what it did and tell me what to check.
[00:24:01.000 --> 00:24:03.000]   Sometimes I'll see what it did and be like, no, that's not right.
[00:24:03.000 --> 00:24:04.000]   Do it a different way.
[00:24:04.000 --> 00:24:16.000]   And, um, you know, also be able to check the app, be like, this is, this thing is not in the right spot or, um, you know, it's almost there.
[00:24:16.000 --> 00:24:18.000]   But when I click this button, nothing happens.
[00:24:18.000 --> 00:24:23.000]   Um, okay, so revised plan, original story, acceptance.
[00:24:23.000 --> 00:24:24.000]   Okay.
[00:24:24.000 --> 00:24:27.000]   So it actually, it looks like that story was already finished.
[00:24:27.000 --> 00:24:42.000]   Uh, uh, uh, that system implementation.
[00:24:42.000 --> 00:24:47.000]   And, uh, we'll come back to that one back here.
[00:24:47.000 --> 00:24:48.000]   Okay.
[00:24:48.000 --> 00:24:59.000]   Created generator update stories.markdown with 14 user stories.
[00:24:59.000 --> 00:25:02.000]   Looks like the first four stories are integrating the literal gem.
[00:25:02.000 --> 00:25:08.000]   Um, and yeah, I guess another thing to call out here.
[00:25:08.000 --> 00:25:14.000]   I've had a bunch of converse or a bunch of questions about, do you, what, what format do you have the stories in?
[00:25:14.000 --> 00:25:17.000]   Is it like given when, then, or as a developer?
[00:25:17.000 --> 00:25:21.000]   And I haven't really kept a tight leash on that either.
[00:25:21.000 --> 00:25:24.000]   Uh, just let it do whatever it came up with.
[00:25:24.000 --> 00:25:27.000]   Um, and so.
[00:25:27.000 --> 00:25:28.000]   Good.
[00:25:28.000 --> 00:25:31.000]   Uh, yeah.
[00:25:31.000 --> 00:25:33.000]   How do you mentally deal with the context switching?
[00:25:33.000 --> 00:25:35.000]   Uh, funny you ask.
[00:25:35.000 --> 00:25:37.000]   I'm trying to figure that out too.
[00:25:37.000 --> 00:25:43.000]   Um, it is kind of wild, but I mean, the, the thing that.
[00:25:43.000 --> 00:26:08.000]   Yeah, the, the, the thing that helps with the context switching is, um, is having it prompt me each time of like, here's what I did.
[00:26:08.000 --> 00:26:11.000]   Uh, 40 years of unmedicated ADHD.
[00:26:11.000 --> 00:26:12.000]   That can be it too.
[00:26:12.000 --> 00:26:16.000]   Um, kind of performance enhanced a little bit.
[00:26:16.000 --> 00:26:20.000]   Um, let's see.
[00:26:20.000 --> 00:26:21.000]   Yeah.
[00:26:21.000 --> 00:26:23.000]   I'm just gonna turn that on.
[00:26:23.000 --> 00:26:29.000]   Um, but yeah, the, the thing is it'll, it'll tell me what it did.
[00:26:29.000 --> 00:26:33.000]   And so that's kind of, if I'm ever like, I'm not sure.
[00:26:33.000 --> 00:26:42.000]   That's usually, uh, a guide for me to, um, add that into the docs of like, I didn't know.
[00:26:42.000 --> 00:26:46.000]   Um, you know, didn't know what we were doing.
[00:26:46.000 --> 00:26:47.000]   Oh no.
[00:26:47.000 --> 00:26:48.000]   Yeah.
[00:26:48.000 --> 00:26:49.000]   Sure.
[00:26:49.000 --> 00:26:50.000]   Uh, next time.
[00:26:50.000 --> 00:26:52.000]   Give me additional context.
[00:26:52.000 --> 00:26:57.000]   Yeah.
[00:26:57.000 --> 00:26:58.000]   Uh, okay.
[00:26:58.000 --> 00:26:59.000]   Ball.
[00:26:59.000 --> 00:27:04.000]   That's, that's kind of where my mind has been of just like, how can I have, how can I have AI prep me for the context?
[00:27:04.000 --> 00:27:06.000]   Cause I'm gonna keep context switching.
[00:27:06.000 --> 00:27:08.000]   Like that's not gonna, that's not gonna go away.
[00:27:08.000 --> 00:27:10.000]   Do I find it enjoyable?
[00:27:10.000 --> 00:27:31.000]   Um, yeah, I haven't tried vibe Kanban or Kanban yet.
[00:27:31.000 --> 00:27:38.000]   Um, I'm trying to build, trying to build something myself to help feed the context to me as I switch.
[00:27:38.000 --> 00:27:44.000]   Um, but I guess if that doesn't work out, I can always, always jump over to that.
[00:27:44.000 --> 00:27:50.000]   Um, and how are you all doing with the context switching I'm doing?
[00:27:50.000 --> 00:27:52.000]   I should have, should have asked that.
[00:27:52.000 --> 00:27:57.000]   Um, and this one's writing the CSS.
[00:27:57.000 --> 00:28:05.000]   Um, I mean, I feel like I can only handle like two threads at once.
[00:28:05.000 --> 00:28:13.000]   Really realistically, like I can, I I've tried to do more things at a time and have it going.
[00:28:13.000 --> 00:28:20.000]   And I, it only works for relatively trivial types of stuff.
[00:28:20.000 --> 00:28:28.000]   Um, I suppose as the agents continue to get better and I require less actually looking in on it.
[00:28:28.000 --> 00:28:38.000]   Um, that may change, but I also find if you're not careful, the, uh, like these tools make everything faster.
[00:28:38.000 --> 00:28:46.000]   So if it starts going in the wrong direction, like if you're not careful, it goes really far in the wrong direction and you get a ton of slop or code debt.
[00:28:46.000 --> 00:28:47.000]   Um, yeah.
[00:28:47.000 --> 00:29:00.000]   Um, that's, that's, I think another thing of, you know, keeping these, uh, these changes scope small so that if it does go off the rails, uh, it's, it hasn't gone that far.
[00:29:00.000 --> 00:29:03.000]   Um, and I'll usually story by story, make a commit.
[00:29:03.000 --> 00:29:08.000]   And so I've found that, you know, if I need to just like wipe what it did, uh, it's no big deal.
[00:29:08.000 --> 00:29:27.000]   Um, yeah, the smaller, smaller changes, uh, I've found help that.
[00:29:27.000 --> 00:29:30.000]   And then I actually, I guess that kind of helps the context switching too.
[00:29:30.000 --> 00:29:37.000]   Um, you know, cause there's not, not as much to, uh, much to do there.
[00:29:37.000 --> 00:29:50.000]   Um, and yeah, like Manuel says, I think a lot of these apps are scoped enough in my head, uh, that I can con or they're, they're, they're scoped small enough that they're not, you know, massive projects.
[00:29:50.000 --> 00:29:56.000]   Um, I think, and, and the other thing that I've found helpful is that they're pretty separate projects, right?
[00:29:56.000 --> 00:30:01.000]   Like there's a, a Mac OS app, uh, a game and a gem that I'm doing here.
[00:30:01.000 --> 00:30:06.000]   And there's not, I don't have to spend much time thinking about like, does this change?
[00:30:06.000 --> 00:30:09.000]   step on the toes of another change in this existing app.
[00:30:09.000 --> 00:30:11.000]   It's all just like, kind of like a single thread in, uh, in a single app.
[00:30:11.000 --> 00:30:12.000]   Um, but.
[00:30:12.000 --> 00:30:13.000]   Um, but.
[00:30:13.000 --> 00:30:13.840]   - Yeah.
[00:30:13.840 --> 00:30:36.520]   But.
[00:30:42.880 --> 00:30:43.720]   Yeah, I don't know.
[00:30:43.720 --> 00:30:45.700]   Is there anything that anybody would like me to try?
[00:30:45.700 --> 00:30:48.260]   Any other questions?
[00:30:48.260 --> 00:31:11.280]   Brad, how do you, you said 15, 30 minute chunks.
[00:31:11.280 --> 00:31:15.720]   It's really kind of just, I guess, like Claude,
[00:31:15.720 --> 00:31:20.340]   you know, I guess, I think I probably should have said,
[00:31:20.340 --> 00:31:22.480]   you know, half a day or one point story.
[00:31:22.480 --> 00:31:24.420]   But like, I think each time I do it,
[00:31:24.420 --> 00:31:29.880]   I change it up to try to get Claude to scope them correctly.
[00:31:29.880 --> 00:31:42.940]   I've tried something like, it needs to be, it needs to be big enough that it needs to be big enough that there's something for me to actually test.
[00:31:42.940 --> 00:31:52.000]   Because like, if I try to say, if I, if I don't add that in there, it usually does something like this where, and I think I even added it in here and like added the gem.
[00:31:52.000 --> 00:31:55.660]   Like go check and see if the gem's installed, which like isn't super helpful.
[00:31:55.660 --> 00:32:01.720]   Um, or it's like not, not a big enough change to like really do anything with.
[00:32:02.260 --> 00:32:11.320]   Um, but if I don't give it that like guideline of keep it small, it ends up being something really big, like KBAL said, and like changed hundreds of files.
[00:32:11.320 --> 00:32:18.580]   And I, you know, don't, don't have my head around what, what it actually, what it actually did.
[00:32:18.580 --> 00:32:23.180]   And by the time it's doing a whole bunch of different things, it's usually wrong.
[00:32:23.180 --> 00:32:25.720]   So kind of like scoping it.
[00:32:25.720 --> 00:32:40.820]   Um, yeah, basically trying to find that right scope where it's not too big that what's the, there's some, some measurement that's like the chance of AI being wrong.
[00:32:41.660 --> 00:32:47.000]   increases by the cube, by the square, the cube of the number of tokens that are output.
[00:32:47.000 --> 00:32:51.680]   So like trying to, trying to thread that line of like, it's not wrong.
[00:32:51.680 --> 00:32:59.000]   It's not like extremely wrong, but also big enough that, uh, you know, it's a meaningful chunk of work.
[00:32:59.000 --> 00:33:05.060]   What does wrong mean in that frame?
[00:33:05.060 --> 00:33:10.760]   Uh, I mean, wrong is in like, you know, it doesn't work or.
[00:33:10.760 --> 00:33:21.500]   Or it's, you know, yeah, basically, basically that it doesn't work or, um, or something.
[00:33:23.420 --> 00:33:34.400]   Yeah, but I mean, I guess, I guess if you think about it, like if I prompted, I could get, I could get a hundred percent correctness or accuracy if I wanted Claude to just write one line at a time.
[00:33:35.120 --> 00:33:55.620]   And then I, I'm kind of not as confident if I had to do like a million lines and like, so there's some sweet spot in there that, uh, it'll, you know, give me a meaningful chunk of work and speed me up and not, uh, not cause me more pain.
[00:33:59.120 --> 00:34:02.020]   Um, how do I see this in a team context?
[00:34:02.020 --> 00:34:13.640]   Uh, you know, I think I actually, I said this to somebody the other day, I think teams probably end up looking like.
[00:34:14.420 --> 00:34:24.380]   I read this book once about test kitchens for Michelin star restaurants and like that whole, this whole idea of like, everybody has their, um, everybody has their role.
[00:34:24.380 --> 00:34:34.480]   They're the, they're a, they're a master at their craft and they're all working in the same theme, but like everybody has their, their things they're working on.
[00:34:34.480 --> 00:34:49.300]   Um, and so I think like, uh, you know, project level separation, uh, is so much easier than trying to coordinate between even two people, uh, because you're moving so fast.
[00:34:49.300 --> 00:35:03.600]   Um, I don't like, I don't even do, I don't even do two Claude codes in the same project because, uh, there's just too much, too much chaos that could go on too much overlap, which maybe that says something about the architectures of the things I'm working on.
[00:35:03.600 --> 00:35:08.580]   Um, but, uh, uh, it's just never worked for me.
[00:35:08.580 --> 00:35:16.560]   Um, I haven't tried sub-agents yet.
[00:35:16.560 --> 00:35:26.160]   I've been planning to, um, but maybe, maybe in a couple, couple of weeks, I'll write up something about, about trying them or try to write some of my own.
[00:35:26.160 --> 00:35:30.660]   Uh, I still feel like coding to you.
[00:35:30.660 --> 00:35:32.720]   Uh.
[00:35:32.720 --> 00:35:56.480]   Uh, kind of, it's, it's definitely a lot more, even though it's not exactly right, I think like at some point, if you just kind of like, you're looking at features, you're guessing like how they might be built and talking about it like that.
[00:35:57.020 --> 00:36:05.000]   Um, it ends up being a little bit more on the, you know, kind of architect is the wrong word.
[00:36:05.000 --> 00:36:05.240]   I don't know.
[00:36:05.240 --> 00:36:08.420]   Coding is like, we don't really have the words for the, for right now.
[00:36:08.420 --> 00:36:11.360]   Um, it's not exactly coding.
[00:36:11.360 --> 00:36:27.020]   It's not exactly architecting, but it's kind of like, you know, like inventing or materializing some piece and then fitting it in and seeing if it fits and then like changing it if it doesn't fit.
[00:36:27.020 --> 00:36:36.000]   Um, and kind of like, kind of like coding or creating in that way.
[00:36:36.000 --> 00:36:40.940]   Um, but without code, like I hardly, I hardly ever look at code.
[00:36:40.940 --> 00:36:48.200]   I don't think I've, I don't think I've really opened Vim to look at code more than a few hours over the last month.
[00:36:48.440 --> 00:36:52.340]   Uh, it's mostly been looking at, uh, looking at markdown files.
[00:36:52.340 --> 00:36:59.240]   Um.
[00:37:03.440 --> 00:37:03.780]   Yeah.
[00:37:03.780 --> 00:37:07.700]   Spec first workflow.
[00:37:07.700 --> 00:37:18.260]   Um, yeah, actually, I guess the speaking of the spec first workflow and, uh, conversations that Manuel, you and I have had about like, uh, TDD.
[00:37:19.220 --> 00:37:27.320]   Um, I haven't really been doing much TDD and mostly just been letting it, uh, letting it go.
[00:37:27.320 --> 00:37:40.880]   And then, uh, afterwards, if there's something that's like this, this thing has stopped changing and this thing needs a little bit more, or this thing has stopped changing or this thing is giving us a lot of problems.
[00:37:41.220 --> 00:37:53.760]   Um, that's when I'll break something out as like a module and then have it get, you know, either be a library or, uh, something off to the side and be like, give this a hundred percent test coverage.
[00:37:53.760 --> 00:37:57.240]   And that piece will stop being a problem.
[00:37:57.240 --> 00:38:05.820]   It'll get out of context and I can either have a cloud code running on that library or, um, you know, just never have to worry about it again.
[00:38:05.820 --> 00:38:21.820]   Um, use this flow and Brownfield code bases, um, kind of, I've, I've started adding it.
[00:38:21.820 --> 00:38:35.340]   So it's not exactly, um, not exactly Brownfield unless I think in the way that you're, uh, you're mentioning cable, but, um, like APM, I originally started with the flow of.
[00:38:36.000 --> 00:38:43.500]   Uh, you know, having a, a cloud chat up and kind of doing it by hand because I was like, well, I should learn how to learn how to do swift.
[00:38:43.500 --> 00:38:50.280]   And, and then that quickly shifted to, um, you know, there's all these changes I need to make.
[00:38:50.280 --> 00:38:56.280]   I should have, uh, AI write out the list of changes and then actually just do the list of changes.
[00:38:56.780 --> 00:39:01.880]   And so it was, it was hand coded at first and then have switched over to vibe coding it.
[00:39:01.880 --> 00:39:16.700]   Um, I have actually, the one thing that I've done in, along that in some, some code bases I'm unfamiliar with is actually have it go through and be like, this is a library we want to use.
[00:39:16.700 --> 00:39:18.260]   How do these things work here?
[00:39:18.540 --> 00:39:19.680]   This is a library we want to use.
[00:39:19.680 --> 00:39:22.120]   Here's an example app of using that library.
[00:39:22.120 --> 00:39:27.400]   Um, write out a doc of how these pieces fit together and how this works.
[00:39:27.400 --> 00:39:29.460]   Take that doc over to APM.
[00:39:30.420 --> 00:39:36.780]   and say, here's a generic doc of how to use this library adapted for our, you look through the code base and adapt it for our use case.
[00:39:36.780 --> 00:39:40.980]   Um, and so that, that ended up working really well.
[00:39:40.980 --> 00:39:42.720]   Um,
[00:39:42.720 --> 00:39:58.620]   but yeah, I think, I think brownfield code bases, I think the only, the only thing limiting brownfield code bases, uh, would be, uh, getting everybody on board.
[00:39:59.280 --> 00:40:21.360]   You know, I think, you know, you kind of need everybody on the team to turn the keys on AI at once, because like, if, if one person is and one person or, and the other people on the team aren't, you're going to get a lot of people really pissed off at like, why, why do I have to review all of these AI slot PRs?
[00:40:21.900 --> 00:40:26.580]   And not this person made a, made a math and made like 20 PRs today.
[00:40:26.580 --> 00:40:28.860]   I'm going to use AI to help me review.
[00:40:28.860 --> 00:40:34.440]   Uh, I'm going to use AI to help me review these PRs and make these comments and call these things out.
[00:40:34.440 --> 00:40:43.020]   Like if you, if you do want to have like multiple people, it's about everybody's using AI to augment them for, augment themselves for all the steps of the process.
[00:40:43.260 --> 00:40:51.700]   But if you have a holdout, like either everybody's going to hate the person using AI or, um, I mean, that's just what's going to happen.
[00:40:51.700 --> 00:41:16.300]   Oh, so yeah, I guess I wasn't kind of showing the screen.
[00:41:16.300 --> 00:41:29.620]   So, um, yeah, a lot of this is, so I'll have in, let's see, and like protocolle is a Tori app, which uses, um, what's it called?
[00:41:29.620 --> 00:41:39.400]   The byte Vite, V-I-T-E, um, and so all the changes, uh, it's recompiled, it's changes and it, it updates live.
[00:41:39.400 --> 00:41:45.820]   Um, and so you, you basically see it as it goes, you can do it for, for React apps as well.
[00:41:45.820 --> 00:41:55.340]   The Swift app is a bit of a pain in the ass to see it, uh, in that, like I have to build and, uh, sometimes it doesn't actually build the app.
[00:41:55.340 --> 00:41:59.760]   And so there's build errors and I have to kind of go back, but, um,
[00:41:59.760 --> 00:42:05.820]   Um, and yeah, I'm using, using the things that I'm creating all the time.
[00:42:05.820 --> 00:42:08.040]   Um,
[00:42:08.040 --> 00:42:14.440]   but yeah, Tess, Tess is generous.
[00:42:14.440 --> 00:42:23.760]   Um, yeah, yeah.
[00:42:23.760 --> 00:42:32.840]   Cause I've seen the same thing, just the, the traditional engineering background, the, the whole, the whole idea of, uh, you know, what does this do?
[00:42:32.840 --> 00:42:34.560]   Like, why is there all this extra code?
[00:42:34.560 --> 00:42:35.520]   Like, yeah, don't worry about it.
[00:42:35.520 --> 00:42:36.280]   It doesn't even get called.
[00:42:36.280 --> 00:42:40.480]   Um, that, that definitely offends a lot of sensibilities.
[00:42:44.060 --> 00:43:00.980]   Um, we can jump into something else if anybody's interested or invite some more people up to chat.
[00:43:00.980 --> 00:43:10.460]   Have you tried actually using this in a team context at all, or is it still all just for solo projects primarily?
[00:43:10.460 --> 00:43:13.760]   It's yeah, it's basically just me right now.
[00:43:13.760 --> 00:43:17.440]   Um, I haven't really had a chance to try it with, in a team context.
[00:43:17.440 --> 00:43:21.820]   I think everybody would have a very bad time.
[00:43:21.820 --> 00:43:29.280]   I think that, yeah, there are very few teams I think that can actually the, uh, you know, handle the, the code volume at this point.
[00:43:29.280 --> 00:43:32.020]   So I think that's an interesting problem to solve.
[00:43:32.020 --> 00:43:33.980]   Right, right.
[00:43:33.980 --> 00:43:37.040]   Yeah.
[00:43:37.040 --> 00:43:37.700]   I don't know.
[00:43:37.700 --> 00:43:43.460]   Um, I think a lot of, a lot of spots in, in a team aren't, aren't prepared for this.
[00:43:43.460 --> 00:43:48.280]   this, you know, small, small startups where you've got one or two people.
[00:43:48.280 --> 00:43:51.920]   I think that'll, that'll be painful.
[00:43:51.920 --> 00:44:01.400]   Uh, or I guess if you have two, two or more people, it'd be very painful, but like, you know, if somebody, somebody were to adopt this and like, you know, a big enterprise.
[00:44:02.400 --> 00:44:15.740]   Like you've got, you've got the teams of dozens of people that are, uh, you know, used to making monthly or quarterly releases that now all of that work is done in a day.
[00:44:16.200 --> 00:44:20.280]   You've got the, you've got the product teams that are used to like planning out quarter by quarter.
[00:44:20.280 --> 00:44:27.440]   You've got the, you know, and the, the teams up and up of like planning the year and all of those things that like all of that got compressed.
[00:44:27.440 --> 00:44:37.360]   So, I mean, imagine, imagine being a VP of a department and you've got, you know, 10, uh, 10 projects and you're, you know, you're in the planning meetings.
[00:44:37.360 --> 00:44:51.280]   You're in the, the meetings of like what all changed and now that's, uh, you know, now the, the quarterly, the contents of the quarterly review are now happening weekly.
[00:44:51.280 --> 00:44:57.460]   Uh, that's, I think a lot of people are in for a lot of, a lot of pain.
[00:44:57.460 --> 00:45:07.160]   Well, yeah, I, I think that's kind of why my, my outlook is that, uh, you know, the, the six to eight person startup is, is, should be able to beat out for like
[00:45:07.160 --> 00:45:13.820]   a hundred person enterprise, uh, in terms of like velocity and product quality at this point, in my opinion.
[00:45:13.820 --> 00:45:14.980]   Yeah.
[00:45:14.980 --> 00:45:15.800]   Yeah, definitely.
[00:45:15.800 --> 00:45:18.560]   But it's still hard to coordinate the six to eight.
[00:45:18.560 --> 00:45:26.960]   So, you know, yeah, I, I, I, I'm sorry.
[00:45:26.960 --> 00:45:28.700]   Oh, no, you're good.
[00:45:28.700 --> 00:45:31.400]   I was just going to read the question in case you hadn't caught it, but it looks like you.
[00:45:31.400 --> 00:45:33.020]   Oh, got it.
[00:45:33.020 --> 00:45:36.620]   Uh, how much has changed since a month or so when you published?
[00:45:36.960 --> 00:45:45.360]   Um, so yeah, about a month or so, it was definitely that, that much more structured.
[00:45:45.360 --> 00:45:54.300]   I've, um, I've shifted to having it be a little bit more ad hoc.
[00:45:54.300 --> 00:46:06.940]   Um, like, uh, like, I don't know if you, the, the, when I was showing those, like to the docs directory and the tech docs directory, um, that became a little bit more ad hoc.
[00:46:06.940 --> 00:46:16.940]   Um, um, I've also stopped doing, um, so that first project that was like three phases, I've stopped having so many phases up front.
[00:46:16.940 --> 00:46:25.340]   Like even the, the, the game that I was showing you had six phases and like, by the time we got to the third, it was like, none of this makes sense anymore.
[00:46:25.340 --> 00:46:26.300]   So we need to change.
[00:46:26.300 --> 00:46:36.000]   So I've started to do, you know, much more, much closer to like, here's almost like epic level rather than doing multiple epics up front.
[00:46:41.640 --> 00:46:43.440]   Uh, custom tools.
[00:46:43.440 --> 00:46:49.080]   No, not, I mean, I've started to work on, started to work on a product for the context switching.
[00:46:49.080 --> 00:46:58.080]   Like KBall said, that has been the biggest problem was, uh, you know, what I was showing you, you know, switching between sessions.
[00:46:58.080 --> 00:47:10.140]   But a lot of times I was finding myself going back to a session or forgetting that I had kicked a session off and, um, coming back and being like, ah, shit, that, that agent has just been sitting there idle.
[00:47:10.140 --> 00:47:13.200]   That I could have been, uh, it could have been moving.
[00:47:13.260 --> 00:47:24.240]   So, um, working on it, working on something to help me, uh, you know, switch between projects and try to, try to get above the like three to four projects that I've been able to handle.
[00:47:24.240 --> 00:47:28.800]   Uh, I'd like to, like to try to get to like 10 or 15 projects in parallel.
[00:47:28.800 --> 00:47:36.140]   Um, Brad has his hand up.
[00:47:36.140 --> 00:47:41.460]   Yeah, I was just gonna ask on that, on that last point.
[00:47:42.020 --> 00:47:45.680]   Like, how do you start a new project if it's a little bit more ambiguous?
[00:47:45.680 --> 00:47:50.440]   So you're not really sure you don't have a specific plan of the different phases?
[00:47:50.440 --> 00:47:56.900]   Like, are you sitting down with Claude to write the initial scope and to plan out the phases?
[00:47:56.900 --> 00:48:10.820]   Yeah, I'll usually, um, I'll switch between, I actually have been started to do Grok, Claude, and I guess it was ChatGPT the last time.
[00:48:11.100 --> 00:48:17.760]   I'll just have like a paragraph of like, this is the project I want to build, create me a design doc or create me a comprehensive design doc.
[00:48:17.760 --> 00:48:24.300]   And then look kind of like skim through all three of them and see which one seems the most reasonable.
[00:48:24.660 --> 00:48:33.360]   And then throw that into Claude and be like, here's the design doc, here's the project, uh, break this out into, break this out into user stories.
[00:48:46.420 --> 00:49:14.420]   Um, I had one, I dropped it in chat here, um, did, did you, um, uh, uh, other than the context switching tool, have you made any like major changes to your Vim, like configuration or plugin setup or, um, or any like TMUX add ons or, or anything that's like not, or any, any workflow changes other than sometimes I tab over to the other terminal and ask Claude a thing.
[00:49:14.420 --> 00:49:25.420]   Um, not really, I mean, the, the biggest change to my, my Vim workflow is that I don't really use Vim anymore.
[00:49:25.420 --> 00:49:38.420]   Um, um, um, um, um, um, um, I have been starting to explore like kind of tools to help switch between these TMUX sessions.
[00:49:38.420 --> 00:49:43.420]   So, uh, uh, ways to kind of integrate into, uh, other Mac apps.
[00:49:43.420 --> 00:49:57.420]   So like I mentioned, like switching, if I could have project name, you know, terminal window and all of that be something deterministic that I can throw into an app or even an MCP.
[00:49:57.420 --> 00:49:59.420]   I can have that switching a lot.
[00:49:59.420 --> 00:50:01.420]   I'm thinking it can have that switching a lot easier.
[00:50:01.420 --> 00:50:06.420]   Uh, but I haven't dug into, uh, building any kind of like custom TMUX plugins.
[00:50:06.420 --> 00:50:27.420]   Yeah, that's, that's kind of the direction that I've been heading with it where it's like, I don't, um, I, I, I spend less time in Neobim, but I'm also trying to like hack Neobim into like a command center more so than a text editor at this point.
[00:50:27.420 --> 00:50:39.420]   Um, with like, yeah, there's like, I have like an MCP manager plug in in there and then like a few different, uh, coding agents and then pod code windows can pop up in there and stuff like that.
[00:50:39.420 --> 00:50:42.420]   But yeah, they really haven't like dialed it in to, to figure it out.
[00:50:42.420 --> 00:50:44.420]   Yeah.
[00:50:44.420 --> 00:50:45.420]   Yeah.
[00:50:45.420 --> 00:50:48.420]   But the more I learn about these, the less time I spend in the ID.
[00:50:48.420 --> 00:50:49.420]   So.
[00:50:49.420 --> 00:50:50.420]   Yeah.
[00:50:50.420 --> 00:50:55.420]   That's what, uh, you know, I was having a conversation with somebody recently that like.
[00:50:55.420 --> 00:51:08.420]   Uh, almost makes sense to like, one of the things we were building, thinking about it, like, uh, an IDE for IDEs or like, you know, an I, I, D, E, E.
[00:51:08.420 --> 00:51:16.420]   Um, that like being able to switch between all of those different projects is the new, uh, like development environment.
[00:51:16.420 --> 00:51:17.420]   Right.
[00:51:17.420 --> 00:51:18.420]   Hmm.
[00:51:18.420 --> 00:51:19.420]   What do you, yeah.
[00:51:19.420 --> 00:51:20.420]   What do you mean by that?
[00:51:20.420 --> 00:51:25.420]   Like an I, I, I, I, D, E. Just like you, you want something that can handle.
[00:51:25.420 --> 00:51:31.420]   Terminal that can like quickly move you across the file system and see what the terminal is doing in there.
[00:51:31.420 --> 00:51:32.420]   And then.
[00:51:32.420 --> 00:51:37.420]   Um, am I missing something else for this sort of coordination machine that we imagine here?
[00:51:37.420 --> 00:51:38.420]   Yeah.
[00:51:38.420 --> 00:51:39.420]   Yeah.
[00:51:39.420 --> 00:51:54.420]   I guess like you're thinking about like an IDE as a, uh, like as a tool to help you, uh, develop a single product that like the, the like next abstraction layer layer is like an, an IDE for, uh, coordinating and like working on.
[00:51:54.420 --> 00:51:58.420]   Uh, you know, working on the products from another level up.
[00:51:58.420 --> 00:51:59.420]   Um, got it.
[00:51:59.420 --> 00:52:10.420]   So it's like, I have cursor and windsurf and, uh, you know, amp and cloud code all running and I need something to sort of help me supervise all of those things going at the same time.
[00:52:10.420 --> 00:52:11.420]   Kind of deal.
[00:52:11.420 --> 00:52:12.420]   Right.
[00:52:12.420 --> 00:52:13.420]   Right.
[00:52:13.420 --> 00:52:23.420]   And you might be using, you know, you might be using client for something or, you know, something in VS code, other cursor that like, it doesn't be in the same way that you might use, you know, um, you know.
[00:52:23.420 --> 00:52:28.420]   Um, the of M for, uh, all different types of languages or different types of files.
[00:52:28.420 --> 00:52:32.420]   This is more, uh, you know, all different types of projects.
[00:52:32.420 --> 00:52:33.420]   Right.
[00:52:33.420 --> 00:52:41.420]   And right now, the main thing that I'm using all of those for is for the, the, the, the, the subscription to number of tokens.
[00:52:41.420 --> 00:52:47.420]   I'm allowed to have ratio for each, uh, each with each of the platforms being on sale.
[00:52:47.420 --> 00:52:59.420]   So it's like, that's, I, I do actually use four different IDEs, but only because like one's charging me 10 bucks a month and has, uh, you know, 500 cascade requests.
[00:52:59.420 --> 00:53:02.420]   And then Cursor's got the subscription that I got on the cheap.
[00:53:02.420 --> 00:53:07.420]   So yeah, it's seems like a generally valuable thing.
[00:53:07.420 --> 00:53:08.420]   Yeah.
[00:53:08.420 --> 00:53:09.420]   Yeah.
[00:53:09.420 --> 00:53:10.420]   That's incredible.
[00:53:10.420 --> 00:53:11.420]   Oh yeah.
[00:53:11.420 --> 00:53:16.420]   Uh, good question from flow.
[00:53:16.420 --> 00:53:20.420]   I think, uh, do you, are you making use of like work trees at all?
[00:53:20.420 --> 00:53:23.420]   Or, or you don't use multiple cloud codes at the same time.
[00:53:23.420 --> 00:53:24.420]   You just do one, right?
[00:53:24.420 --> 00:53:27.420]   I don't use multiple cloud codes in the same project.
[00:53:27.420 --> 00:53:30.420]   Um, I just use a single one in each project.
[00:53:30.420 --> 00:53:31.420]   Okay.
[00:53:31.420 --> 00:53:32.420]   Yeah.
[00:53:32.420 --> 00:53:38.420]   The for, for multi-boxing clock code, my, I like, there's something there around work trees.
[00:53:38.420 --> 00:53:44.420]   I haven't figured out exactly what it is yet, but, um, uh, that can sort of help keep things more sane.
[00:53:44.420 --> 00:53:45.420]   Yeah.
[00:53:45.420 --> 00:53:46.420]   Yeah.
[00:53:46.420 --> 00:53:57.420]   I guess maybe like thinking about that, I think the other thing that's kept me from using work trees is, you know, these are all kind of smaller projects, newer projects.
[00:53:57.420 --> 00:54:00.420]   And so they don't have huge backlogs.
[00:54:00.420 --> 00:54:03.420]   And so maybe I need to create a, a cloud code.
[00:54:03.420 --> 00:54:10.420]   That's like a more of a product manager and kelp helps like build out my backlogs for me.
[00:54:10.420 --> 00:54:16.420]   Uh, cause like, that's usually the, the like first step is like build this backlog out and then it just turns through it.
[00:54:16.420 --> 00:54:17.420]   Yeah.
[00:54:17.420 --> 00:54:26.420]   I'm finding that's, that's kind of the direction I'm finding like the slash agents command pushing me in where it's like, okay, I kinda want one guy that only has tools to run tests.
[00:54:26.420 --> 00:54:31.420]   And all it does is run tests and then yell at the other ones when they're messing something up.
[00:54:31.420 --> 00:54:40.420]   Well, and then I want one that, that has maximally clear context to only write code that is specifically instructed to write the code that it's writing.
[00:54:40.420 --> 00:54:45.420]   And then I want one that only does the searching of the code base and composes the context for the next one.
[00:54:45.420 --> 00:54:46.420]   And yada, yada, yada, yada.
[00:54:46.420 --> 00:54:47.420]   Yeah.
[00:54:47.420 --> 00:54:48.420]   Yeah.
[00:54:48.420 --> 00:54:49.420]   Yeah.
[00:54:49.420 --> 00:54:50.420]   I'll have to give that a shot.
[00:54:50.420 --> 00:54:57.420]   I've been, been meaning to, but it's heaven.
[00:54:57.420 --> 00:54:58.420]   Yeah.
[00:54:58.420 --> 00:54:59.420]   Well, anything else for me?
[00:54:59.420 --> 00:55:00.420]   Yeah.
[00:55:00.420 --> 00:55:20.420]   Do you want to, do you want to do a, do a quick, uh, protocolli, uh, uh, plug while we have the last couple minutes here, since I don't hear any, or I don't see any other questions coming through.
[00:55:20.420 --> 00:55:27.420]   Um, yeah, so protocolli, that was one of the, that was kind of like what kicked all of this off.
[00:55:27.420 --> 00:55:33.420]   It's, uh, it's a tool to help you actually, I guess I can share it.
[00:55:33.420 --> 00:55:35.420]   Uh, let's bring it up here.
[00:55:35.420 --> 00:55:42.420]   It's a tool to help you, uh, explore, uh, MCP servers.
[00:55:42.420 --> 00:55:48.420]   So we're building in another product we're building called APM, which is kind of like that command center.
[00:55:48.420 --> 00:55:58.420]   Uh, we're integrating a lot of, uh, MCP servers and using MCP servers as, um, as like a plugin system.
[00:55:58.420 --> 00:56:12.420]   So I needed something to help me test MCP and, um, you know, see what was working, test the tool calls before building it into the app and like doing, going through all that hassle.
[00:56:12.420 --> 00:56:20.420]   So kind of thinking, thinking about this as like a desktop version of postman, uh, for specifically for MCP.
[00:56:20.420 --> 00:56:36.420]   Um, but it's also been really interesting to see stuff like, uh, like jumping into Claude, uh, Claude code and looking at their MCP server and seeing the way that they have like the tools described, like, and, and how they've changed over time.
[00:56:36.420 --> 00:56:46.420]   Uh, so like task is just massive bash, um, got, uh, it's not connected.
[00:56:46.420 --> 00:56:51.420]   Um, okay.
[00:56:51.420 --> 00:56:52.420]   Yeah.
[00:56:52.420 --> 00:56:56.420]   So I've been testing out an APMs MCP server here.
[00:56:56.420 --> 00:56:59.420]   Um, let's see.
[00:56:59.420 --> 00:57:05.420]   Uh, yeah, this was all, all vibe coded.
[00:57:05.420 --> 00:57:07.420]   Um, fancy and clean.
[00:57:07.420 --> 00:57:13.420]   I really, really, my instructions to Claude were, uh, make it look like a professional desktop app.
[00:57:13.420 --> 00:57:18.420]   Um, and it, it did so many things that are just like not expected.
[00:57:18.420 --> 00:57:20.420]   I mean, it gave theme switching.
[00:57:20.420 --> 00:57:28.420]   Um, we also have, uh, added high contrast mode, um, font size switching.
[00:57:28.420 --> 00:57:37.420]   Uh, it created a, um, an, an intro tour, uh, to walk through all the features.
[00:57:37.420 --> 00:57:41.420]   Um, and.
[00:57:41.420 --> 00:57:47.420]   Well, you didn't ask it to create the, the intro flow just did it.
[00:57:47.420 --> 00:57:53.420]   It, it, it showed up in one of the stories and I was like, yeah, go ahead and go ahead and give it a shot.
[00:57:53.420 --> 00:57:55.420]   Um, but the details, I didn't really.
[00:57:55.420 --> 00:57:58.420]   Didn't really dig into any of the details beyond.
[00:57:58.420 --> 00:57:59.420]   Yeah.
[00:57:59.420 --> 00:58:00.420]   Beyond that.
[00:58:00.420 --> 00:58:13.420]   Uh, there was the, the thing that tour did have trouble with was, um, yeah, it actually still has trouble getting the, you know, getting the placement of the modal windows.
[00:58:13.420 --> 00:58:28.420]   Um, yeah, this was like, usually, usually for a V one of a product that I was building for myself, I wouldn't put a tour in, but it was, it was so painless that.
[00:58:28.420 --> 00:58:31.420]   You know, just went okay with it.
[00:58:31.420 --> 00:58:32.420]   Same with same with theme switching.
[00:58:32.420 --> 00:58:36.420]   Like, uh, it's usually kind of overkill for V one.
[00:58:36.420 --> 00:58:38.420]   All right.
[00:58:38.420 --> 00:58:40.420]   Thank you so much, Scott.
[00:58:40.420 --> 00:58:43.420]   Um, we are about at time.
[00:58:43.420 --> 00:58:45.420]   Uh, we have a speaker for, for next week.
[00:58:45.420 --> 00:58:47.420]   We're back to Claude code and sub agents.
[00:58:47.420 --> 00:58:55.420]   Um, I think, uh, I'm blanking on his name now, but the guy who kicked off the conversation there that went for however many messages is going to come back and present.
[00:58:55.420 --> 00:58:57.420]   Um, so definitely come back for that.
[00:58:57.420 --> 00:58:59.420]   If you are working on Oliver.
[00:58:59.420 --> 00:59:00.420]   Yes.
[00:59:00.420 --> 00:59:01.420]   Thank you.
[00:59:01.420 --> 00:59:02.420]   Flo.
[00:59:02.420 --> 00:59:07.420]   Um, if you're working on something you want to share, if you have a cool experiment, you want to share, do sign up in the discord.
[00:59:07.420 --> 00:59:10.420]   You just have to talk to the AI in action bot.
[00:59:10.420 --> 00:59:12.420]   Um, and it will get you signed up.
[00:59:12.420 --> 00:59:17.420]   Um, and the thing that we've been coming to that I think is great is like, it doesn't have to be useful.
[00:59:17.420 --> 00:59:19.420]   It doesn't have to be polished.
[00:59:19.420 --> 00:59:24.420]   It just has to be interesting because, uh, you know, we're, we're here to learn together.
[00:59:24.420 --> 00:59:25.420]   So thank you all.
[00:59:25.420 --> 00:59:27.420]   Thank you, especially Scott.
[00:59:27.420 --> 00:59:29.420]   And we'll see you next week.
[00:59:29.420 --> 00:59:30.420]   Yeah.
[00:59:30.420 --> 00:59:31.420]   Thank you all.
[00:59:31.420 --> 00:59:32.420]   See ya.
[00:59:32.420 --> 01:00:02.400]   Thank you.

