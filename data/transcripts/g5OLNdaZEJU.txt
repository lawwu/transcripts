
[00:00:00.000 --> 00:00:01.560]   All right, let's do some questions.
[00:00:01.560 --> 00:00:02.640]   What do we got?
[00:00:02.640 --> 00:00:05.400]   - All right, first question from Sam.
[00:00:05.400 --> 00:00:07.680]   There's a time management popular app
[00:00:07.680 --> 00:00:10.940]   that insists that people should automate their time,
[00:00:10.940 --> 00:00:13.560]   time blocking using AI driven apps.
[00:00:13.560 --> 00:00:16.280]   They think that it's too hard for people to manually replan
[00:00:16.280 --> 00:00:17.860]   and prioritize work.
[00:00:17.860 --> 00:00:19.400]   What's your response?
[00:00:19.400 --> 00:00:20.240]   - Negative.
[00:00:20.240 --> 00:00:24.720]   I do not believe we need AI driven time blocking
[00:00:24.720 --> 00:00:28.440]   because we have to shave off the moments required
[00:00:28.440 --> 00:00:31.720]   to figure out what should be on our plan
[00:00:31.720 --> 00:00:36.720]   or to fix our plan when it actually drifts away.
[00:00:36.720 --> 00:00:40.600]   Now, Silicon Valley is desperate
[00:00:40.600 --> 00:00:42.360]   for knowledge worker productivity,
[00:00:42.360 --> 00:00:44.360]   which is this sort of trillion dollar a year
[00:00:44.360 --> 00:00:46.840]   business opportunity to be something that can only be fixed
[00:00:46.840 --> 00:00:48.280]   by proprietary high-tech tools
[00:00:48.280 --> 00:00:49.360]   that only they know how to make.
[00:00:49.360 --> 00:00:51.840]   There's huge money on the table there.
[00:00:51.840 --> 00:00:55.380]   The unfortunate reality for Silicon Valley, however,
[00:00:55.380 --> 00:00:59.460]   is that this is not an issue that needs complicated,
[00:00:59.460 --> 00:01:01.260]   high technology to solve.
[00:01:01.260 --> 00:01:03.680]   Now, there's a backstory here.
[00:01:03.680 --> 00:01:05.660]   This is a theory I have.
[00:01:05.660 --> 00:01:06.480]   I'll share it with you.
[00:01:06.480 --> 00:01:08.960]   It's my theory about how Silicon Valley
[00:01:08.960 --> 00:01:13.180]   accidentally polluted our understanding of productivity
[00:01:13.180 --> 00:01:15.580]   in a way that I think was very detrimental
[00:01:15.580 --> 00:01:17.500]   that we're only sort of pulling our way out of now
[00:01:17.500 --> 00:01:18.400]   in the last few years.
[00:01:18.400 --> 00:01:20.180]   Here's what I think happened.
[00:01:20.180 --> 00:01:23.260]   In the early 90s, so the 1990s, let's say.
[00:01:23.260 --> 00:01:24.980]   In the 1990s, that whole decade,
[00:01:24.980 --> 00:01:27.520]   when Silicon Valley was exploding into prominence
[00:01:27.520 --> 00:01:30.980]   and into its sort of economic relevance,
[00:01:30.980 --> 00:01:32.580]   this was the same time
[00:01:32.580 --> 00:01:36.060]   when the computer processor wars were unfolding.
[00:01:36.060 --> 00:01:38.540]   So you remember this, this March from the 286
[00:01:38.540 --> 00:01:41.220]   to the 386 to the 486 to the Pentium,
[00:01:41.220 --> 00:01:45.580]   you actually knew how many megahertz your processor was,
[00:01:45.580 --> 00:01:48.800]   and this processor has more megahertz than that processor.
[00:01:48.800 --> 00:01:51.220]   So there's this age of the processor war.
[00:01:51.220 --> 00:01:53.500]   During that age, as Silicon Valley was coming
[00:01:53.500 --> 00:01:57.140]   to cultural relevance and economic relevance,
[00:01:57.140 --> 00:02:00.580]   I believe they adopted implicitly
[00:02:00.580 --> 00:02:02.260]   this computer processor metaphor
[00:02:02.260 --> 00:02:04.780]   for understanding human productivity.
[00:02:04.780 --> 00:02:06.720]   So when you're trying to make
[00:02:06.720 --> 00:02:09.820]   your computer processor better,
[00:02:09.820 --> 00:02:11.180]   what does it mean for a computer processor
[00:02:11.180 --> 00:02:12.700]   to be more productive?
[00:02:12.700 --> 00:02:17.100]   It goes through instructions faster, as fast as possible.
[00:02:17.100 --> 00:02:18.720]   Let's reduce the time and friction
[00:02:18.720 --> 00:02:22.840]   in between each next instruction that we execute.
[00:02:22.840 --> 00:02:24.260]   The other key component
[00:02:24.260 --> 00:02:26.160]   to making a computer processor very productive
[00:02:26.160 --> 00:02:29.540]   was to make sure that it always has something to do.
[00:02:29.540 --> 00:02:32.620]   And so there's a technology called predictive pipelining,
[00:02:32.620 --> 00:02:33.820]   where essentially what would happen
[00:02:33.820 --> 00:02:37.980]   is you're looking ahead to try to queue up instructions
[00:02:37.980 --> 00:02:39.660]   you think are gonna come next,
[00:02:39.660 --> 00:02:42.140]   because you don't want there to be too much downtime
[00:02:42.140 --> 00:02:44.260]   after the processor completes an instruction
[00:02:44.260 --> 00:02:47.060]   to go figure out what it should do next.
[00:02:47.060 --> 00:02:47.900]   That's all cycles
[00:02:47.900 --> 00:02:49.640]   that could have been doing something productive.
[00:02:49.640 --> 00:02:51.140]   So there's this mindset of you want a queue
[00:02:51.140 --> 00:02:52.300]   always full of things to do,
[00:02:52.300 --> 00:02:53.940]   so it always has something to pull in,
[00:02:53.940 --> 00:02:55.820]   so that it's always executing something.
[00:02:55.820 --> 00:02:57.820]   And every single cycle is executing something,
[00:02:57.820 --> 00:02:59.220]   and we want the speed between those cycles
[00:02:59.220 --> 00:03:01.040]   to be as fast as possible.
[00:03:01.040 --> 00:03:03.180]   That's productivity for a computer processor.
[00:03:03.180 --> 00:03:05.620]   Silicon Valley adopted a similar model
[00:03:05.620 --> 00:03:07.140]   for their human employees.
[00:03:07.140 --> 00:03:11.100]   A notion of human productivity that was built around
[00:03:11.100 --> 00:03:13.120]   how do we reduce the friction and time
[00:03:13.120 --> 00:03:17.900]   in between actual tasks or things being completed.
[00:03:17.900 --> 00:03:20.980]   So the focus went into how do we make networks faster?
[00:03:20.980 --> 00:03:22.940]   How do we make email more seamless?
[00:03:22.940 --> 00:03:24.500]   So you can get to the thing quicker,
[00:03:24.500 --> 00:03:26.100]   fewer keystrokes to send that email
[00:03:26.100 --> 00:03:27.600]   and have another one come in.
[00:03:27.600 --> 00:03:29.820]   How can we build information management systems
[00:03:29.820 --> 00:03:31.620]   to make sure that every bit of information you need
[00:03:31.620 --> 00:03:33.620]   is right there at your fingertips?
[00:03:33.620 --> 00:03:36.020]   The notion of computer inboxes,
[00:03:36.020 --> 00:03:38.220]   email inboxes overflowing was not an issue
[00:03:38.220 --> 00:03:40.280]   because like a predictive pipeline,
[00:03:40.280 --> 00:03:43.500]   you would want more than enough stuff always ready to go
[00:03:43.500 --> 00:03:45.380]   so that that human always has something they can do,
[00:03:45.380 --> 00:03:46.540]   an email they can respond to,
[00:03:46.540 --> 00:03:48.040]   or something they can attach,
[00:03:48.040 --> 00:03:49.620]   something they can drag over into this program
[00:03:49.620 --> 00:03:51.380]   and then send that through email to that program
[00:03:51.380 --> 00:03:53.260]   that gets loaded here and it gets put on the screen
[00:03:53.260 --> 00:03:54.180]   and people can see it.
[00:03:54.180 --> 00:03:55.380]   It's all about reducing friction,
[00:03:55.380 --> 00:03:57.220]   increasing the velocity of information,
[00:03:57.220 --> 00:03:59.820]   increasing the velocity of task execution.
[00:03:59.820 --> 00:04:02.460]   It's a very computer processor type metaphor.
[00:04:02.460 --> 00:04:04.700]   And because Silicon Valley became so powerful
[00:04:04.700 --> 00:04:06.780]   and economically relevant in the 1990s,
[00:04:06.780 --> 00:04:08.280]   what they were doing spread.
[00:04:08.280 --> 00:04:10.900]   And we know that happens.
[00:04:10.900 --> 00:04:15.900]   I think that the clearest example of Silicon Valley nonsense
[00:04:15.900 --> 00:04:17.460]   spreading nationwide,
[00:04:17.460 --> 00:04:19.500]   the one that we all know is open offices.
[00:04:19.500 --> 00:04:22.560]   Silicon Valley started doing these open office plans
[00:04:22.560 --> 00:04:26.100]   because in their highly rarefied world,
[00:04:26.100 --> 00:04:28.200]   it really mattered to them that they could signal
[00:04:28.200 --> 00:04:30.540]   the potential employees and potential investors
[00:04:30.540 --> 00:04:31.500]   that they were disruptive
[00:04:31.500 --> 00:04:33.340]   and they were doing business in a new way.
[00:04:33.340 --> 00:04:35.220]   It didn't really matter how they signaled this.
[00:04:35.220 --> 00:04:36.740]   They just had the signal that they were disruptive
[00:04:36.740 --> 00:04:37.900]   because they would get better talent
[00:04:37.900 --> 00:04:38.800]   and they would get more investment.
[00:04:38.800 --> 00:04:40.420]   And that was critical to their survival.
[00:04:40.420 --> 00:04:43.720]   I mean, they could have done almost anything here.
[00:04:43.720 --> 00:04:46.100]   They could have all worn weird, silly hats, whatever,
[00:04:46.100 --> 00:04:47.260]   but they just had the signal,
[00:04:47.260 --> 00:04:48.260]   we're being disruptive.
[00:04:48.260 --> 00:04:50.140]   And then you fast forward 10 years later,
[00:04:50.140 --> 00:04:53.820]   and I gave a talk at a major drug manufacturing
[00:04:53.820 --> 00:04:56.100]   a few years ago, and they were all shaking their heads
[00:04:56.100 --> 00:04:57.500]   about their giant open office.
[00:04:57.500 --> 00:04:59.260]   It made no sense why they had open office, right?
[00:04:59.260 --> 00:05:00.820]   So stuff comes out of Silicon Valley.
[00:05:00.820 --> 00:05:02.440]   So I think this notion of productivity
[00:05:02.440 --> 00:05:06.140]   as computer processor style, picking up the speed
[00:05:06.140 --> 00:05:08.420]   and reducing the friction required to execute small things,
[00:05:08.420 --> 00:05:09.380]   that just spread.
[00:05:09.380 --> 00:05:14.080]   And work and productivity in the knowledge sector became,
[00:05:14.080 --> 00:05:14.920]   are we on it?
[00:05:14.920 --> 00:05:15.740]   Are we quick?
[00:05:15.740 --> 00:05:16.580]   Are you here?
[00:05:16.580 --> 00:05:19.080]   Email's not fast enough, let's do Slack.
[00:05:19.080 --> 00:05:21.780]   Let's do meetings and video
[00:05:21.780 --> 00:05:23.780]   because we can get onto those faster.
[00:05:23.780 --> 00:05:26.100]   How about you just directly have access to my calendar
[00:05:26.100 --> 00:05:27.340]   and can just start throwing things on there.
[00:05:27.340 --> 00:05:28.500]   So it's a speed.
[00:05:28.500 --> 00:05:30.980]   Now, of course, this didn't work at all
[00:05:30.980 --> 00:05:34.980]   because human beings are not computer processors.
[00:05:34.980 --> 00:05:36.920]   We can only focus on one thing at a time.
[00:05:36.920 --> 00:05:39.100]   It takes us a while to actually get going on something.
[00:05:39.100 --> 00:05:40.020]   And once we're done with something,
[00:05:40.020 --> 00:05:41.960]   we need time to wind that back down,
[00:05:41.960 --> 00:05:44.400]   to rest and recharge, and then move our mind
[00:05:44.400 --> 00:05:46.320]   into a new context to work on something else.
[00:05:46.320 --> 00:05:48.100]   I think there's probably like four different things
[00:05:48.100 --> 00:05:49.420]   we could productively give time to
[00:05:49.420 --> 00:05:52.220]   in a typical eight hour day with sufficient rest.
[00:05:52.220 --> 00:05:53.980]   Our brain can't jump back and forth
[00:05:53.980 --> 00:05:55.160]   like a computer processor.
[00:05:55.160 --> 00:05:57.420]   It's not agnostic to op codes.
[00:05:57.420 --> 00:05:59.220]   The thing we just operated makes a big difference
[00:05:59.220 --> 00:06:00.460]   on the thing that comes next.
[00:06:00.460 --> 00:06:03.420]   We're not just circuits being driven
[00:06:03.420 --> 00:06:06.300]   by a crystal oscillator at a constant speed.
[00:06:06.300 --> 00:06:08.520]   So this computer processor notion of productivity,
[00:06:08.520 --> 00:06:10.220]   I think was devastating.
[00:06:10.220 --> 00:06:12.360]   It's a lot of the exhaustion that people,
[00:06:12.360 --> 00:06:14.140]   like we talked about earlier in the show,
[00:06:14.140 --> 00:06:18.880]   Ginny O'Dell, Berkman, McEwen, me,
[00:06:18.880 --> 00:06:21.240]   we're picking up on the exhaustion of this overload.
[00:06:21.240 --> 00:06:23.120]   This overload is in part a direct effect
[00:06:23.120 --> 00:06:26.200]   of this broken model of productivity.
[00:06:26.200 --> 00:06:30.840]   But again, it's not mustache twirling exploitation.
[00:06:30.840 --> 00:06:32.960]   It's, hey, the cool kids are doing this.
[00:06:32.960 --> 00:06:39.360]   Jim Clark just built this giant Hyperion yacht.
[00:06:39.360 --> 00:06:40.440]   If you don't know what I'm talking about,
[00:06:40.440 --> 00:06:42.240]   read Michael Lewis's book,
[00:06:42.240 --> 00:06:45.100]   The New New Thing about the excesses of Silicon Valley
[00:06:45.100 --> 00:06:46.940]   in the 1990s.
[00:06:46.940 --> 00:06:48.660]   They say, so whatever they're doing must make sense.
[00:06:48.660 --> 00:06:49.720]   Let's be more like them.
[00:06:49.720 --> 00:06:51.680]   And they built the tools that we used.
[00:06:51.680 --> 00:06:53.060]   We used their tools.
[00:06:53.060 --> 00:06:54.460]   We tried to emulate how they worked.
[00:06:54.460 --> 00:06:56.740]   That's what I think is broken.
[00:06:56.740 --> 00:06:58.300]   And so no, we're not gonna fix our way out of this
[00:06:58.300 --> 00:06:59.740]   by making those tools faster.
[00:06:59.740 --> 00:07:04.800]   Using AI to manage our time block schedule
[00:07:04.800 --> 00:07:08.240]   is perpetuating the computer processor metaphor
[00:07:08.240 --> 00:07:10.160]   of increasing speed and reducing friction
[00:07:10.160 --> 00:07:12.060]   of task executions to key to productivity.
[00:07:12.060 --> 00:07:13.820]   That's an entirely broken metaphor.
[00:07:13.820 --> 00:07:16.060]   Our issue is not that it takes us too much time
[00:07:16.060 --> 00:07:18.040]   to build our plan,
[00:07:18.040 --> 00:07:20.820]   or that it takes us too much time to change our plan.
[00:07:20.820 --> 00:07:23.720]   The issue is that we have 5X too many things in that plan.
[00:07:23.720 --> 00:07:26.740]   It takes me five minutes to really think through
[00:07:26.740 --> 00:07:27.660]   how to build my plan.
[00:07:27.660 --> 00:07:29.060]   It takes me three minutes to fix it.
[00:07:29.060 --> 00:07:30.580]   That's not the problem.
[00:07:30.580 --> 00:07:33.100]   The problem is checking the inbox once every one minute.
[00:07:33.100 --> 00:07:35.480]   The problem is having seven meetings per day
[00:07:35.480 --> 00:07:37.140]   where you're trying to scramble in between these meetings
[00:07:37.140 --> 00:07:39.040]   to try to answer Slack messages.
[00:07:39.040 --> 00:07:40.220]   That's where the real problem is.
[00:07:40.220 --> 00:07:42.100]   And the problem for Silicon Valley
[00:07:42.100 --> 00:07:43.540]   is that the solutions to that problem
[00:07:43.540 --> 00:07:46.580]   have more to do with getting away from their ideas
[00:07:46.580 --> 00:07:47.820]   and getting away from their tools
[00:07:47.820 --> 00:07:50.120]   than they do about embracing even more.
[00:07:50.120 --> 00:07:52.820]   So, nope, I'm not a big believer
[00:07:52.820 --> 00:07:55.580]   in an AI-driven time-blocking app.
[00:07:55.580 --> 00:07:58.080]   I think my paper planner probably works just fine.
[00:07:58.080 --> 00:08:01.740]   Not that I have a rant or anything, Jesse.
[00:08:01.740 --> 00:08:02.580]   - That was a good rant.
[00:08:02.580 --> 00:08:05.180]   - Not that I've thought about that.
[00:08:05.180 --> 00:08:07.760]   (upbeat music)
[00:08:07.760 --> 00:08:10.340]   (upbeat music)

