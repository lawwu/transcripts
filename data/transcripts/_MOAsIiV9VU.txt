
[00:00:00.000 --> 00:00:12.040]   Hello. Welcome, everyone, to the Machine Learning Hackathon closing ceremony. That was a super
[00:00:12.040 --> 00:00:19.160]   exciting day because we're actually here to announce the winners of the very first Machine
[00:00:19.160 --> 00:00:33.640]   Learning Hackathon we've ever done at Repl.it. I feel like there's something weird going
[00:00:33.640 --> 00:00:51.960]   on with my sound. Please hold.
[00:00:51.960 --> 00:01:11.960]   [Humming]
[00:01:11.960 --> 00:01:32.680]   Okay. I was being really silly, and I had the YouTube in another screen, and so it was
[00:01:32.680 --> 00:01:40.600]   playing all my sound twice. Sorry about that. Okay. Awesome. So if you've been here before,
[00:01:40.600 --> 00:01:45.340]   we might look familiar to you, but let's do some intros for all the new people tuning
[00:01:45.340 --> 00:01:51.320]   in today. So I'm Ornella from the community team at Repl.it, and as usual, I've got some
[00:01:51.320 --> 00:01:56.640]   awesome guests from Weights & Biases here with me today. Morgan, do you want to introduce
[00:01:56.640 --> 00:01:57.640]   yourself?
[00:01:57.640 --> 00:02:02.520]   Yeah, hey, everyone. Morgan from Weights & Biases here. I'm an ML engineer on the team.
[00:02:02.520 --> 00:02:08.440]   I lead our ML engineering team within growth, and, yeah, I was super excited to see all
[00:02:08.440 --> 00:02:14.040]   the Repl.it community come out and maybe touch ML for the first time and use Weights & Biases.
[00:02:14.040 --> 00:02:19.640]   So, yeah, looking forward to announcing the prizes later.
[00:02:19.640 --> 00:02:24.080]   Hi, everyone. My name is Corey. I'm a community manager at Weights & Biases, and we're really
[00:02:24.080 --> 00:02:29.080]   excited to see everyone really kind of discovering Weights & Biases for the first time and utilizing
[00:02:29.080 --> 00:02:33.960]   ML to be able to build your solutions and write your reports, and we're excited to announce
[00:02:33.960 --> 00:02:38.240]   our winners, and we're even more excited to actually reach out to a few of you after this
[00:02:38.240 --> 00:02:44.560]   event as well to see if you would actually be interested in posting to our community
[00:02:44.560 --> 00:02:49.480]   blog. So stay tuned for that. Thank you, everyone.
[00:02:49.480 --> 00:02:54.760]   Amazing. So I'll just walk through kind of how this is going to go today so that everyone
[00:02:54.760 --> 00:03:02.080]   has a sense of what this next bit with us on live is going to look like. So we're going
[00:03:02.080 --> 00:03:07.520]   to start off with the honorable mention, and then we're going to demo each winner as we
[00:03:07.520 --> 00:03:11.760]   announce them. So if we are lucky enough to have the winner in the audience, we might
[00:03:11.760 --> 00:03:17.360]   take some questions about their project if anyone has any. So we'll start with honorable
[00:03:17.360 --> 00:03:23.360]   mention, and then we'll do the best Weights & Biases report and then the best Repl. And
[00:03:23.360 --> 00:03:28.960]   again, we're going to demo each one and take some questions. And then finally, at the end,
[00:03:28.960 --> 00:03:35.680]   we're going to do the grand prize. So stay tuned for that. Morgan, Corey, what are you
[00:03:35.680 --> 00:03:44.040]   all most excited for today? I know all the submissions were really great.
[00:03:44.040 --> 00:03:53.520]   I don't think I have a favorite. Yeah, looking forward to seeing them all one more time.
[00:03:53.520 --> 00:04:00.040]   Amazing. Okay, and then for all the prize winners, you'll get an email from us today
[00:04:00.040 --> 00:04:06.680]   with all the details. So stay tuned for that. And I don't want to wait any longer. So let's
[00:04:06.680 --> 00:04:13.200]   just get right to it. Morgan, do you want to announce the honorable
[00:04:13.200 --> 00:04:19.840]   mention winner? Sure. So the honorable mention in our hackathon
[00:04:19.840 --> 00:04:30.280]   this year goes to Niranth K for the LLMs for 1DB and Repl.it demo they built. And so this
[00:04:30.280 --> 00:04:37.200]   demo is really cool. And we can like maybe see it in a second. They basically combined
[00:04:37.200 --> 00:04:46.640]   GPT-3 and used a popular library at the moment called Langchain to get GPT-3 to fill in like
[00:04:46.640 --> 00:04:50.320]   basically fill in the blanks and suggest, you know, the correct like machine learning
[00:04:50.320 --> 00:04:57.680]   like model classes and model settings and then like go off and like model. So it's a
[00:04:57.680 --> 00:05:04.520]   really, really cool use of GPT-3 to kind of write some code and run a code.
[00:05:04.520 --> 00:05:27.360]   Amazing. Let me pull up the repl.it and we can check it out. Cool. Morgan, do you remember
[00:05:27.360 --> 00:05:32.720]   if this repl.it is visual? Yes, I was when I was running it yesterday.
[00:05:32.720 --> 00:05:44.760]   I think it does need a GPT-3, an OpenAI key for GPT-3 to run. Let's see here. I think
[00:05:44.760 --> 00:05:52.320]   I had to work it to run it in the end. Got it. Maybe you can share. Yeah, it does
[00:05:52.320 --> 00:05:57.920]   need the key. Cool. Let me see. We can come back to it.
[00:05:57.920 --> 00:06:03.800]   But I think I'll see if I have my fork running. We can take a look.
[00:06:03.800 --> 00:06:09.720]   Okay. Amazing. Congratulations, Niran K. So excited for you. Everyone clearly loved your
[00:06:09.720 --> 00:06:19.480]   project and we're so happy to give you the honorable mention prize. So the honorable
[00:06:19.480 --> 00:06:27.280]   mention prize is 50,000 cycles. Really excited how you to see how you spend those on the
[00:06:27.280 --> 00:06:32.960]   platform. The next prize we're going to do is the best
[00:06:32.960 --> 00:06:40.640]   Weights and Biases report. Before we get into it, I wanted to shout out this report at Weights
[00:06:40.640 --> 00:06:46.600]   and Biases. I think it's so interesting to be able to embed your code and also write
[00:06:46.600 --> 00:06:54.240]   about it. It really creates a great opportunity to tell a story. And that's exactly what this
[00:06:54.240 --> 00:07:03.840]   person did with their Weights and Biases report. So, Corey, do you want to announce this one?
[00:07:03.840 --> 00:07:14.440]   Yes. So we want to announce that the winner of the best Weights and Biases report is IceMasterEric.
[00:07:14.440 --> 00:07:23.400]   And you know, we're going to quote something that this user said. That's when I came up
[00:07:23.400 --> 00:07:29.640]   with an absolutely insane idea. Rather than relying upon some external library, I would
[00:07:29.640 --> 00:07:35.760]   code everything from scratch. Clear, clear report. Easy to read. Good use of charts.
[00:07:35.760 --> 00:07:42.200]   Markdown, code blocks. And we love the day-to-day breakdown. Thank you, IceMasterEric, for the
[00:07:42.200 --> 00:07:48.080]   wonderful WMB report. Amazing. Okay. Let me pull up that report
[00:07:48.080 --> 00:07:57.920]   so that everyone can see it. And then there's also a great demo on Repl.it, too.
[00:07:57.920 --> 00:08:05.240]   Yeah, I really like this one just for the, I mean, yeah, like coding everything from
[00:08:05.240 --> 00:08:09.720]   scratch and like coming from, you know, also like going on that learning journey of like
[00:08:09.720 --> 00:08:14.320]   ML and then like deciding to do it from scratch and then like telling a nice story around
[00:08:14.320 --> 00:08:17.800]   the whole thing using like some nice Weights and Biases, like charts and other features.
[00:08:17.800 --> 00:08:21.320]   Yeah, it was just like a really, really nice report. And then like you said, yeah, the
[00:08:21.320 --> 00:08:26.920]   demo is, or sorry, the Repl is pretty fun to watch as well.
[00:08:26.920 --> 00:08:41.920]   So yeah, we have this great kind of day-by-day breakdown. And I think this is awesome. Like
[00:08:41.920 --> 00:08:47.760]   that's one of the benefits of having a week-long hackathon is that you can really share like
[00:08:47.760 --> 00:08:52.080]   what you accomplish each day and your thought process. And again, like why the reports tool
[00:08:52.080 --> 00:09:04.200]   is so awesome. So this is kind of the brainstorming phase. And I think that this, these visuals
[00:09:04.200 --> 00:09:13.720]   are really awesome. Like how they settled on isometric pixel art and then yeah, all
[00:09:13.720 --> 00:09:20.080]   these different reinforcement learning algorithms. I think that I really like this little robot
[00:09:20.080 --> 00:09:26.240]   that they used. We'll have to pull up the Repl. Morgan, can you pull that up so that
[00:09:26.240 --> 00:09:28.040]   we can show it after this?
[00:09:28.040 --> 00:09:30.160]   Yeah, I'll do it.
[00:09:30.160 --> 00:09:36.400]   Yeah. So there's this little, it's this little puzzle game and there's an awesome just robot
[00:09:36.400 --> 00:09:44.320]   character. You know, we love a mascot at Repl. It. So we're really excited to see that. And
[00:09:44.320 --> 00:09:53.240]   then yeah, they decided on Q learning, trained with weights and biases. And like one of the
[00:09:53.240 --> 00:09:57.600]   other awesome things about these reports, you can just embed your weights and biases,
[00:09:57.600 --> 00:10:05.280]   like training data, which is awesome. But yeah, these are the cool graphs.
[00:10:05.280 --> 00:10:12.400]   Yeah, no, it's really nice in the charts to see the like, you know, improvement as they
[00:10:12.400 --> 00:10:16.560]   like continue to like experiment and like, you know, you see the curves that those like
[00:10:16.560 --> 00:10:22.360]   Q curves, you know, slowly kind of like bump up in the direction, which is not always the
[00:10:22.360 --> 00:10:27.640]   case with like ML projects. But this one looked like it worked out.
[00:10:27.640 --> 00:10:31.160]   Amazing. Do you have the Repl up?
[00:10:31.160 --> 00:10:32.160]   Yep.
[00:10:32.160 --> 00:10:37.160]   Okay, let's show that.
[00:10:37.160 --> 00:10:49.240]   Here we go. Can we see this? Yeah. Yes, I think so. Here, we see they have the little
[00:10:49.240 --> 00:10:55.480]   agent you'll see. So the game development like or the environment sets up and then there's
[00:10:55.480 --> 00:11:02.120]   a little agent and they have to track towards either a yellow or a blue box each time. And
[00:11:02.120 --> 00:11:06.680]   so yeah, like I said, this is all coded from scratch and including the visualization. So
[00:11:06.680 --> 00:11:08.840]   it's a super impressive project.
[00:11:08.840 --> 00:11:12.560]   There's another game starts. Yeah.
[00:11:12.560 --> 00:11:20.120]   Yeah, so there's a few different levels. If you want to play this, we put or take a closer
[00:11:20.120 --> 00:11:24.960]   look at the report we put both in the chat. So those are available for everyone trying
[00:11:24.960 --> 00:11:25.960]   to follow along.
[00:11:25.960 --> 00:11:26.960]   Great.
[00:11:26.960 --> 00:11:32.400]   I've got a Nishant one here as well. We could take a quick look maybe.
[00:11:32.400 --> 00:11:33.400]   Amazing.
[00:11:33.400 --> 00:11:40.240]   And so here, they're basically offering maybe zoom in a little bit. So here, you know, it
[00:11:40.240 --> 00:11:48.480]   gives you a few different things to try. These are basically different machine learning algorithms
[00:11:48.480 --> 00:11:54.040]   that you can ask GPT to give you a hand with. And so here, for example, we can ask for a
[00:11:54.040 --> 00:11:59.640]   random forest with this max features. So we can select option three. And so it goes into
[00:11:59.640 --> 00:12:06.400]   using this library called LangChain, which is super popular at the moment to pass messages
[00:12:06.400 --> 00:12:11.640]   back and forth between like, say, GPT-3 and like other Python processes. And so here,
[00:12:11.640 --> 00:12:17.720]   what it's doing at the start, you'll see there's these placeholder sections for like what library
[00:12:17.720 --> 00:12:23.560]   to import and then also like what a model class to use as well as like the parameters
[00:12:23.560 --> 00:12:30.360]   to pass to that model. And so this is what gets passed to GPT-3. And now it's like thinking
[00:12:30.360 --> 00:12:39.440]   a little bit. And so here, then it says, cool, I've written the modified code to this script.
[00:12:39.440 --> 00:12:46.080]   And then it goes further down the chain and actually starts to go and execute your code
[00:12:46.080 --> 00:12:56.560]   and train a mini model. So really nice use of LangChain there to use GPT to train some
[00:12:56.560 --> 00:12:58.780]   code.
[00:12:58.780 --> 00:13:02.100]   That's awesome. Yeah. And I feel like it's really cool that it's on Repl.it because you
[00:13:02.100 --> 00:13:03.300]   can just run it immediately.
[00:13:03.300 --> 00:13:04.300]   Yeah, exactly.
[00:13:04.300 --> 00:13:10.300]   And it's easy to happen. That's really cool. I feel like this is a great learning tool
[00:13:10.300 --> 00:13:14.460]   for people who are just getting started with machine learning too.
[00:13:14.460 --> 00:13:18.620]   Yeah, that's a good point. Definitely.
[00:13:18.620 --> 00:13:31.120]   Okay, the next prize we have is for Best REPL. And this prize goes to a project that has
[00:13:31.120 --> 00:13:41.340]   been keeping me extremely relaxed over the past few days. So congratulations to Vertinsky.
[00:13:41.340 --> 00:13:52.020]   The winner of Best REPL is the Zen Master GPT. And this project was really cool because
[00:13:52.020 --> 00:13:59.060]   this user fine-tuned their GPT-2 model and really tested the limits of kind of what was
[00:13:59.060 --> 00:14:05.460]   possible on Repl.it, which was amazing to see. And so if you don't know, I don't know
[00:14:05.460 --> 00:14:14.020]   how to say this word correctly, but I think it's cone. And this REPL will generate like
[00:14:14.020 --> 00:14:19.740]   a Buddhist riddle for you every time that you run it. So I'll run it and we can see
[00:14:19.740 --> 00:14:25.020]   what we get. I love this line. Keep in mind that this model can hallucinate a lot of weird
[00:14:25.020 --> 00:14:32.820]   stuff. We'll see what ends up happening. But I think this, yeah, just this REPL was so
[00:14:32.820 --> 00:14:40.740]   nice to look at and to play with too. I feel like the environment was extremely peaceful
[00:14:40.740 --> 00:14:50.220]   to begin with. And then it kind of generates this little riddle. And I love that it's already
[00:14:50.220 --> 00:14:57.620]   gotten 2.2K runs and some tips from the community as well. Okay, let's see. The Nan-in Temple
[00:14:57.620 --> 00:15:03.780]   in Kyoto was the scene of many a jest. A monk named Nobunaga, a pupil of the emperor, had
[00:15:03.780 --> 00:15:08.380]   just returned from a pilgrimage. He had been invited by the emperor to visit the emperor.
[00:15:08.380 --> 00:15:13.020]   The emperor was exceedingly kind to him and asked him to come with him to visit the temple.
[00:15:13.020 --> 00:15:17.700]   Nobunaga took the opportunity to visit the emperor. "I am very glad to see you," he told
[00:15:17.700 --> 00:15:25.780]   him. Very Zen, extremely Zen. Yeah, I really like this one just because they
[00:15:25.780 --> 00:15:32.020]   went and found a fun dataset to train on. I don't think I've seen anyone train a model
[00:15:32.020 --> 00:15:38.500]   on Buddhist or Zen teachings. That's pretty cool. And yeah, like you said, served in a
[00:15:38.500 --> 00:15:44.780]   really nice way, really peaceful background. Yeah, it was a really nicely put together
[00:15:44.780 --> 00:15:50.780]   project. Yeah, this one really made me smile. If you're
[00:15:50.780 --> 00:15:59.020]   looking for some Zen in your life, get in that REPL and we put the link in the chat.
[00:15:59.020 --> 00:16:07.420]   Congratulations to Vertinsky. Amazing. Okay, we need a drum roll for the grand prize because
[00:16:07.420 --> 00:16:15.460]   this one was really something so special. Do you want to take it away, Morgan?
[00:16:15.460 --> 00:16:23.520]   100%. So yeah, I want to say a huge congrats to Coding398 for winning the grand prize.
[00:16:23.520 --> 00:16:29.940]   Their project was an image filter removal one. And this project was super interesting
[00:16:29.940 --> 00:16:37.940]   for a whole bunch of reasons. So this was their first ML project, I think, that they
[00:16:37.940 --> 00:16:45.140]   had put together. They partnered with ChatGPT to accelerate their ML and give them a load
[00:16:45.140 --> 00:16:51.980]   of tips and some model code to get going. There's a really great story through the Weights
[00:16:51.980 --> 00:16:58.420]   and Biases report of their journey, including ChatGPT following them up by giving them some
[00:16:58.420 --> 00:17:04.100]   not quite perfect model code and how they dealt with that. Also, pretty interesting,
[00:17:04.100 --> 00:17:12.700]   they just powered up a bunch of CPUs and actually trained this model on TensorFlow.js on CPUs,
[00:17:12.700 --> 00:17:19.260]   which is pretty unusual given most of ML are training on Python and GPUs. So that was just
[00:17:19.260 --> 00:17:23.580]   pretty spectacular that they got a decent result on that as well. So yeah, overall,
[00:17:23.580 --> 00:17:29.580]   just really nice report, really nice demo. And so yeah, huge congrats, Coding398.
[00:17:29.580 --> 00:17:37.540]   Amazing. Yes, CodingCactus, this is the grand prize. And I'm personally super proud of this
[00:17:37.540 --> 00:17:46.940]   user. His name's Locky, and he lives in Australia. He has really been using Repl.it to learn
[00:17:46.940 --> 00:17:52.220]   a lot of new skills over the past few years that we've seen him be a really active member
[00:17:52.220 --> 00:17:58.380]   of the community. So this is really, really exciting for us here at Repl.it too. Morgan,
[00:17:58.380 --> 00:18:02.220]   do you want to walk through a little bit of the report, and then I'll do a demo of the
[00:18:02.220 --> 00:18:18.900]   repl too. Sounds great. Cool. Yes. So here is the report. 3am, the competition was announced
[00:18:18.900 --> 00:18:27.020]   and they created a project, not on a GPU, but on their 36X boosted repl. So love that
[00:18:27.020 --> 00:18:33.340]   they just went full on on CPU training. And so telling a really nice story here, consulting
[00:18:33.340 --> 00:18:39.460]   with their PhD, Chet Gpt on anything from the basics of, yeah, I'm trying to learn Node.js,
[00:18:39.460 --> 00:18:46.060]   how to get started. And then things get more advanced as they go. Again, chatting with
[00:18:46.060 --> 00:18:51.940]   Chet Gpt about the idea and what they should focus on. I also actually forgot to mention,
[00:18:51.940 --> 00:18:57.420]   they also gathered all of their own data set to train here, which is also pretty cool because
[00:18:57.420 --> 00:19:03.220]   often people just reach for a standard research data set that everyone's seen a million times.
[00:19:03.220 --> 00:19:08.500]   So pretty cool. They also gathered their own data here, and you can see a bunch of the
[00:19:08.500 --> 00:19:16.860]   examples here. You have 40,000 images. Yeah, yeah, exactly. Unreal. And then to actually
[00:19:16.860 --> 00:19:22.220]   create the images, apply the filters to them. So they have their label data set, and then
[00:19:22.220 --> 00:19:29.260]   so they can start training. And that was super cool. And then also a nice variety of filters
[00:19:29.260 --> 00:19:34.700]   used. They didn't just make it easy for themselves and just pick one filter. They did have a
[00:19:34.700 --> 00:19:40.580]   good challenge there with eight different filters for the model to figure out. So yeah,
[00:19:40.580 --> 00:19:46.820]   good use of Weights and Biases charts with their loss and their accuracy. And then, yeah,
[00:19:46.820 --> 00:19:54.020]   this really stood out to me as well. I think this will resonate with every machine learning
[00:19:54.020 --> 00:20:00.340]   engineering practitioner, and I guess software development in general. Your work, you think
[00:20:00.340 --> 00:20:04.860]   it's there, and a few more mistakes, and it'll be good. And sometimes the mistakes keep coming,
[00:20:04.860 --> 00:20:09.900]   and sometimes you succeed. Again, the mistakes never end. And so again, it was just a really
[00:20:09.900 --> 00:20:21.420]   nice story of learning ML and how to maybe not paying as much attention to chat GPT,
[00:20:21.420 --> 00:20:25.740]   or rather maybe paying too much attention to it sometimes. But eventually getting to
[00:20:25.740 --> 00:20:33.340]   the point where they have this great app where the user can upload a photo with a filter,
[00:20:33.340 --> 00:20:39.820]   and the filter gets removed. And it also gives you this really nice output of the different
[00:20:39.820 --> 00:20:46.540]   percentages of filter that were found in the original one. So yeah, it was just a really,
[00:20:46.540 --> 00:20:54.220]   really nice story to read, and super entertaining. Loads of great logging going on here again
[00:20:54.220 --> 00:21:02.860]   with Weights and Biases, and a bunch more examples of the photos with the filters removed.
[00:21:02.860 --> 00:21:12.020]   So yeah, super cool to watch. Maybe we can take a look at the demo.
[00:21:12.020 --> 00:21:19.020]   This one really made me laugh. I think Lockie is exceptional at telling a story, like the
[00:21:19.020 --> 00:21:25.700]   details that he includes, and the funny little jokes and anecdotes always make my day. So
[00:21:25.700 --> 00:21:36.020]   this report was awesome. Let me share. We'll do it live. We'll show everyone how it works.
[00:21:36.020 --> 00:21:45.220]   I have an image of some pancakes that I took, and I put it in a fancy little Instagram filter
[00:21:45.220 --> 00:21:58.860]   app. So we'll see what it detects. And I didn't add a GPU or anything to this. I just am using
[00:21:58.860 --> 00:22:05.180]   his version, so everyone can do this with the link that we threw in the chat. It takes
[00:22:05.180 --> 00:22:14.700]   a second, but it's going to tell me that there is some brightness, contrast, saturation,
[00:22:14.700 --> 00:22:21.540]   like the detail in this is honestly really awesome too. I wish I could confirm, but this
[00:22:21.540 --> 00:22:25.620]   was just like a pre-created filter, not one that I made.
[00:22:25.620 --> 00:22:30.060]   That's really cool. That's brilliant.
[00:22:30.060 --> 00:22:38.780]   Really fun. So yeah, everyone upload your images and share them on Twitter. Let us know
[00:22:38.780 --> 00:22:47.260]   what filters are on things. It's a funny, I feel like a very topical thing to do right
[00:22:47.260 --> 00:22:53.100]   now too, with everyone putting filters on like TikTok and Twitter and whatever. So it's
[00:22:53.100 --> 00:22:55.540]   fun to be able to see the original image.
[00:22:55.540 --> 00:22:59.060]   Yeah. You can take the mask off.
[00:22:59.060 --> 00:23:06.580]   Okay. Amazing. Well, we just want to give a massive thank you to Weights & Biases for
[00:23:06.580 --> 00:23:11.420]   sponsoring this hackathon. It was our very first machine learning hackathon here at Repl.
[00:23:11.420 --> 00:23:17.580]   And we couldn't have put on a great event without all of your help. This was so fun.
[00:23:17.580 --> 00:23:21.980]   I really had a blast watching people just getting started with their machine learning
[00:23:21.980 --> 00:23:28.300]   journey or experts who are already doing a lot of other cool projects take the time to
[00:23:28.300 --> 00:23:33.540]   make something using Weights & Biases. We had a ton of fun and shout out to all of the
[00:23:33.540 --> 00:23:39.860]   winners. We're so excited for you and stay tuned for an email with more details.
[00:23:39.860 --> 00:23:46.540]   Brilliant. Yeah, no, it was super great to collaborate with the Repl.it community as
[00:23:46.540 --> 00:23:55.020]   well. TBD, we might be putting up a course up on Repl.it as well in the next couple of
[00:23:55.020 --> 00:24:00.940]   months. So keep an eye out for that. And yeah, I think Corey maybe can give some more details
[00:24:00.940 --> 00:24:07.260]   on how you can share more of your work, more of your ML explorations with Weights & Biases.
[00:24:07.260 --> 00:24:14.780]   Yeah, as I mentioned before, we're all about sharing really great work at WMB and we really
[00:24:14.780 --> 00:24:20.300]   want to show off how you've built things with WMB. So we want to reach out to a number of
[00:24:20.300 --> 00:24:27.420]   you to potentially convert some of these great reports into blog posts on our blog, Fully
[00:24:27.420 --> 00:24:32.660]   Connected. But also if you just want to continue using Weights & Biases, like Ornella mentioned
[00:24:32.660 --> 00:24:37.260]   before, we have a really wonderful reporting function and we just want you to continue
[00:24:37.260 --> 00:24:42.860]   sharing all these wonderful reports, make them public, share them with the world and
[00:24:42.860 --> 00:24:47.220]   just go ahead and showcase your ML journey. I think one of the exciting things about this
[00:24:47.220 --> 00:24:51.420]   hackathon is that like many of you admittedly mentioned that like you had never used Weights
[00:24:51.420 --> 00:24:55.620]   & Biases before. Some of you were not like the most comfortable with even using Python,
[00:24:55.620 --> 00:25:01.660]   for example. And just being able to see sort of the discovery of either Python or Weights
[00:25:01.660 --> 00:25:05.860]   & Biases in real time and some of the outcomes we got from it was just wonderful. So we really
[00:25:05.860 --> 00:25:07.940]   want to thank you for participating.
[00:25:07.940 --> 00:25:14.820]   Amazing. Okay, everyone, we'll see you next time for our next event. If you want to keep
[00:25:14.820 --> 00:25:19.900]   tabs on everything that's going on and all the events we're hosting in the Repl.it community,
[00:25:19.900 --> 00:25:25.420]   you can check out the community hub and I'll put the link in the chat. Thanks, everyone.
[00:25:26.220 --> 00:25:27.420]   Thanks, Al. Bye.
[00:25:27.420 --> 00:25:28.420]   Bye.
[00:25:28.420 --> 00:25:29.500]   - Thank you.

