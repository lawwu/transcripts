
[00:00:00.000 --> 00:00:05.000]   - So you refer to people, including yourself,
[00:00:05.000 --> 00:00:09.220]   who gravitate toward a kind of computational thinking
[00:00:09.220 --> 00:00:13.620]   as geeks, at least I've heard you use that terminology.
[00:00:13.620 --> 00:00:16.340]   - It's true that I think there's something
[00:00:16.340 --> 00:00:18.260]   that happened to me as I was growing up
[00:00:18.260 --> 00:00:21.780]   that made my brain structure in a certain way
[00:00:21.780 --> 00:00:24.220]   that resonates with computers.
[00:00:24.220 --> 00:00:26.060]   - So there's this space of people,
[00:00:26.060 --> 00:00:29.900]   2% of the population, you empirically estimate.
[00:00:29.900 --> 00:00:32.860]   - That's been-- - Proven?
[00:00:32.860 --> 00:00:34.940]   - Fairly constant over most of my career,
[00:00:34.940 --> 00:00:38.220]   however, it might be different now
[00:00:38.220 --> 00:00:40.820]   because kids have different experiences when they're young.
[00:00:40.820 --> 00:00:45.540]   - So what does the world look like to a geek?
[00:00:45.540 --> 00:00:50.540]   What is this aspect of thinking that is unique to--
[00:00:50.540 --> 00:00:54.580]   - That makes, yeah. - That makes a geek?
[00:00:54.580 --> 00:00:59.380]   - This is a hugely important question.
[00:00:59.380 --> 00:01:04.380]   In the '50s, IBM noticed that there were geeks
[00:01:04.380 --> 00:01:09.780]   and non-geeks and so they tried to hire geeks
[00:01:09.780 --> 00:01:12.380]   and they put out ads for the paper saying,
[00:01:12.380 --> 00:01:14.660]   if you play chess, come to Madison Avenue
[00:01:14.660 --> 00:01:16.420]   for an interview or something like this.
[00:01:16.420 --> 00:01:18.100]   They were trying for some things.
[00:01:18.100 --> 00:01:22.060]   So what is it that I find easy
[00:01:22.060 --> 00:01:24.580]   and other people tend to find harder?
[00:01:24.580 --> 00:01:27.660]   And I think there's two main things.
[00:01:27.660 --> 00:01:32.660]   One is this ability to jump levels of abstraction.
[00:01:32.660 --> 00:01:38.580]   So you see something in the large
[00:01:38.580 --> 00:01:41.460]   and you see something in the small
[00:01:41.460 --> 00:01:45.860]   and you pass between those unconsciously.
[00:01:45.860 --> 00:01:50.420]   So you know that in order to solve some big problem,
[00:01:50.420 --> 00:01:54.820]   what you need to do is add one to a certain register
[00:01:54.820 --> 00:01:57.140]   and that gets you to another step.
[00:01:57.140 --> 00:02:01.380]   And below the, yeah, I don't go down to the electron level
[00:02:01.380 --> 00:02:04.220]   but I knew what those milliseconds were,
[00:02:04.220 --> 00:02:06.060]   what the drum was like on the 650.
[00:02:06.060 --> 00:02:09.700]   I knew how I was gonna factor a number
[00:02:09.700 --> 00:02:13.100]   or find a root of an equation or something
[00:02:13.100 --> 00:02:14.660]   because of what was doing.
[00:02:14.660 --> 00:02:17.140]   And as I'm debugging, I'm going through,
[00:02:17.140 --> 00:02:19.900]   did I make a key punch error?
[00:02:19.900 --> 00:02:23.140]   Did I write the wrong instruction?
[00:02:23.140 --> 00:02:25.860]   Do I have the wrong thing in a register?
[00:02:25.860 --> 00:02:30.540]   And each level is different
[00:02:30.540 --> 00:02:34.780]   and this idea of being able to see something
[00:02:34.780 --> 00:02:40.020]   at lots of levels and fluently go between them
[00:02:40.020 --> 00:02:42.940]   seems to me to be much more pronounced
[00:02:42.940 --> 00:02:47.420]   in the people that resonate with computers like I do.
[00:02:47.420 --> 00:02:52.420]   So in my books, I also don't stick just to the high level
[00:02:52.500 --> 00:02:57.500]   but I mix low level stuff with high level
[00:02:57.500 --> 00:03:01.380]   and this means that some people think
[00:03:01.380 --> 00:03:06.820]   that I should write better books
[00:03:06.820 --> 00:03:10.780]   and it's probably true but other people say,
[00:03:10.780 --> 00:03:13.900]   well, but that's, if you think like that,
[00:03:13.900 --> 00:03:15.860]   then that's the way to train yourself.
[00:03:15.860 --> 00:03:18.900]   Keep mixing the levels and learn more and more
[00:03:18.900 --> 00:03:20.460]   how to jump between.
[00:03:20.460 --> 00:03:21.540]   So that's the one thing.
[00:03:21.540 --> 00:03:25.300]   The other thing is that it's more of a talent
[00:03:25.300 --> 00:03:31.900]   to be able to deal with non-uniformity
[00:03:31.900 --> 00:03:34.260]   where there's case one, case two, case three
[00:03:34.260 --> 00:03:39.300]   instead of having one or two rules that govern everything.
[00:03:39.300 --> 00:03:44.860]   So it doesn't bother me if I need,
[00:03:44.860 --> 00:03:48.620]   like an algorithm has 10 steps to it.
[00:03:48.620 --> 00:03:51.220]   Each step does something else that doesn't bother me
[00:03:51.220 --> 00:03:55.540]   but a lot of pure mathematics is based on one or two rules
[00:03:55.540 --> 00:04:00.540]   which are universal and so this means that people like me
[00:04:00.540 --> 00:04:03.260]   sometimes work with systems
[00:04:03.260 --> 00:04:04.900]   that are more complicated than necessary
[00:04:04.900 --> 00:04:06.460]   because it doesn't bother us
[00:04:06.460 --> 00:04:09.820]   that we didn't figure out the simple rule.
[00:04:09.820 --> 00:04:15.700]   - And you mentioned that while Jacobi, Boole, Abel
[00:04:15.700 --> 00:04:17.740]   and all the mathematicians in the 19th century
[00:04:17.740 --> 00:04:21.700]   may have had symptoms of geek.
[00:04:21.700 --> 00:04:26.100]   The first 100% legit geek was Turing, Alan Turing.
[00:04:26.100 --> 00:04:31.100]   - I think he had, yeah, a lot more of this quality
[00:04:31.100 --> 00:04:36.540]   than any, just from reading the kind of stuff he did.
[00:04:36.540 --> 00:04:41.980]   - So how does Turing, what influence has Turing had on you?
[00:04:41.980 --> 00:04:44.540]   In your way of thinking?
[00:04:44.540 --> 00:04:48.220]   - So I didn't know that aspect of him
[00:04:48.220 --> 00:04:50.700]   until after I graduated some years.
[00:04:50.700 --> 00:04:53.940]   As an undergraduate, we had a class
[00:04:53.940 --> 00:04:56.860]   that talked about computability theory and Turing machines
[00:04:56.860 --> 00:05:01.860]   and it was all, it sounded like a very specific
[00:05:01.860 --> 00:05:06.540]   kind of purely theoretical approach to stuff.
[00:05:06.540 --> 00:05:10.620]   So when, how old was I when I learned that he had
[00:05:13.380 --> 00:05:16.340]   designed machines and that he wrote the,
[00:05:16.340 --> 00:05:22.580]   he wrote a wonderful manual for Manchester machines
[00:05:22.580 --> 00:05:27.580]   and he invented all subroutines
[00:05:27.580 --> 00:05:32.580]   and he was a real hacker that he got his hands dirty.
[00:05:32.580 --> 00:05:38.540]   I thought for many years that he had only done
[00:05:38.540 --> 00:05:39.700]   purely formal work.
[00:05:39.700 --> 00:05:43.020]   As I started reading his own publications,
[00:05:43.020 --> 00:05:48.020]   I could feel this kinship and of course,
[00:05:48.020 --> 00:05:51.100]   he had a lot of peculiarities.
[00:05:51.100 --> 00:05:54.180]   Like he wrote numbers backwards because,
[00:05:54.180 --> 00:05:57.580]   I mean, left to right instead of right to left
[00:05:57.580 --> 00:06:00.440]   because that's, it was easier for computers
[00:06:00.440 --> 00:06:01.920]   to process them that way.
[00:06:01.920 --> 00:06:04.220]   - What do you mean left to right?
[00:06:04.220 --> 00:06:09.220]   - He would write pi as nine, five, one, four, .3, I mean.
[00:06:11.940 --> 00:06:15.340]   Okay. (Lex laughing)
[00:06:15.340 --> 00:06:17.380]   - Right, got it.
[00:06:17.380 --> 00:06:18.700]   - Four, one, .3.
[00:06:18.700 --> 00:06:21.500]   On the blackboard, I mean, when he,
[00:06:21.500 --> 00:06:26.740]   he had trained himself to do that
[00:06:26.740 --> 00:06:29.740]   because the computers he was working with
[00:06:29.740 --> 00:06:31.060]   worked that way inside.
[00:06:31.060 --> 00:06:32.820]   - Trained himself to think like a computer.
[00:06:32.820 --> 00:06:34.980]   Well, there you go, that's geek thinking.
[00:06:34.980 --> 00:06:37.560]   (Lex grunting)
[00:06:37.560 --> 00:06:40.140]   (upbeat music)
[00:06:40.140 --> 00:06:42.720]   (upbeat music)
[00:06:42.720 --> 00:06:45.300]   (upbeat music)
[00:06:45.300 --> 00:06:47.880]   (upbeat music)
[00:06:47.880 --> 00:06:50.460]   (upbeat music)
[00:06:50.460 --> 00:06:53.040]   (upbeat music)
[00:06:53.040 --> 00:06:55.100]   you

