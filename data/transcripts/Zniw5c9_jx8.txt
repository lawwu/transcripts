
[00:00:00.000 --> 00:00:19.720]   My name is Eric, member of technical staff at Augment Code, and today's talk is about mentoring the machine.
[00:00:19.720 --> 00:00:26.560]   Now, the talk today is a personal story, a glimpse into how we at Augment use AI to build production-grade software,
[00:00:26.560 --> 00:00:31.480]   and how that's changed how we operate both as a team and as a business.
[00:00:31.480 --> 00:00:36.860]   So at Augment, we build for real software engineering at scale in production.
[00:00:36.860 --> 00:00:41.460]   Before Augment, I spent six years building products and standards for the automotive industry,
[00:00:41.460 --> 00:00:46.660]   and my peers and I have created and maintained systems that tens of thousands of engineers have touched,
[00:00:46.660 --> 00:00:50.300]   where not one person fully understands even how 5% of the system works.
[00:00:50.300 --> 00:00:55.180]   So we kind of understand the get-your-hands-dirty kind of work we as engineers have to do sometimes.
[00:00:56.240 --> 00:01:01.560]   Now, that's why we have all the line items that you would expect, but are kind of shockingly rare in today's vibe-coded world.
[00:01:01.560 --> 00:01:07.840]   If you wanted to learn more, please come visit our booth or visit us at augmentcode.com.
[00:01:07.840 --> 00:01:12.180]   Now, let me walk you through our journey, which is broken into four sections.
[00:01:12.180 --> 00:01:15.940]   The first two go through my personal journey as an engineer at Augment,
[00:01:15.940 --> 00:01:19.820]   and how I, as well as other engineers, learn to use agents most effectively.
[00:01:20.540 --> 00:01:27.260]   And the second two discuss the gaps that most organizations, and even our own, face when trying to adopt agentic AI,
[00:01:27.260 --> 00:01:32.920]   and how we can address those gaps to solve both our current problems and unlock new opportunities in our businesses.
[00:01:32.920 --> 00:01:37.640]   So without further ado, let's dive into my own journey to realization,
[00:01:37.640 --> 00:01:41.660]   which actually happened a few months ago as we were first rolling out the Augment Agent.
[00:01:42.820 --> 00:01:44.080]   So picture this.
[00:01:44.080 --> 00:01:45.040]   It's Tuesday morning.
[00:01:45.040 --> 00:01:48.300]   For me, it's about to be one of those days.
[00:01:48.300 --> 00:01:50.440]   You're all probably going to recognize this day.
[00:01:50.440 --> 00:01:53.320]   In fact, most of you have probably lived it many times.
[00:01:53.320 --> 00:01:56.280]   But at the moment for me, just another Tuesday.
[00:01:56.280 --> 00:01:58.520]   Now, it's 9 a.m.
[00:01:58.520 --> 00:02:02.460]   I'm behind on a critical design system component that was supposed to merge last Friday.
[00:02:02.460 --> 00:02:03.960]   The design team's waiting.
[00:02:03.960 --> 00:02:05.420]   Downstream teams are waiting.
[00:02:05.420 --> 00:02:08.460]   I'm feeling the pressure, but I'm determined to knock it out.
[00:02:08.460 --> 00:02:12.520]   So clear calendar, cup of coffee in hand, and my fingers are just hitting the keyboard.
[00:02:12.520 --> 00:02:15.340]   9.30 a.m., my phone buzzes.
[00:02:15.340 --> 00:02:16.280]   Staging emergency.
[00:02:16.280 --> 00:02:19.140]   The main API endpoint is completely broken.
[00:02:19.140 --> 00:02:23.140]   There's a request format mismatch between our client and server,
[00:02:23.140 --> 00:02:26.640]   blocking all QA testing and blocking deployments.
[00:02:26.860 --> 00:02:29.060]   So the primary's on vacation at this point.
[00:02:29.060 --> 00:02:32.120]   I'm the service secondary, and I'm responsible for the on-call process
[00:02:32.120 --> 00:02:33.620]   and seeing that through.
[00:02:33.620 --> 00:02:37.500]   So my carefully planned day just evaporated like that.
[00:02:37.500 --> 00:02:39.660]   10.15.
[00:02:39.660 --> 00:02:42.500]   I'm starting to wrap up some service log exploration,
[00:02:42.500 --> 00:02:45.780]   and the new engineer that I'm mentoring slacks me,
[00:02:45.780 --> 00:02:48.420]   hey, when you have a minute, can you help me understand
[00:02:48.420 --> 00:02:50.300]   how our extension system works?
[00:02:50.300 --> 00:02:51.300]   I'm stuck.
[00:02:51.300 --> 00:02:56.140]   Now, if you've been an engineer before, you've been here.
[00:02:56.440 --> 00:02:58.360]   That sinking feeling when your day derails.
[00:02:58.360 --> 00:02:59.780]   You're pulled in three different directions.
[00:02:59.780 --> 00:03:02.440]   You go home feeling like you've accomplished nothing,
[00:03:02.440 --> 00:03:03.940]   even though you've worked for 12 hours.
[00:03:03.940 --> 00:03:06.200]   And you know that when you wake up the next morning,
[00:03:06.200 --> 00:03:10.520]   the on-call remediation is going to put another week or two of work
[00:03:10.520 --> 00:03:11.420]   on your plate.
[00:03:11.420 --> 00:03:14.760]   And if that scenario felt familiar, you're not alone.
[00:03:14.760 --> 00:03:18.520]   This is not just your team, not just your company, or bad luck.
[00:03:19.520 --> 00:03:23.140]   Every single interruption costs us 23 minutes of recovery time.
[00:03:23.140 --> 00:03:27.720]   And as an industry, we're spending two-thirds of our time maintaining code
[00:03:27.720 --> 00:03:29.360]   instead of building new features.
[00:03:29.360 --> 00:03:35.560]   That translates to $300 billion annually spent on context switching and firefighting.
[00:03:35.560 --> 00:03:39.800]   So we've normalized this chaos, and we've accepted that days like this
[00:03:39.800 --> 00:03:41.720]   So just part of being an engineer.
[00:03:41.720 --> 00:03:45.500]   Of course, this is an AI, you know, conference.
[00:03:45.500 --> 00:03:48.540]   So what if I told you it didn't need to be that way?
[00:03:48.540 --> 00:03:51.680]   In fact, what if I told you it already isn't?
[00:03:51.680 --> 00:03:54.300]   I'm going to show you exactly how.
[00:03:55.920 --> 00:03:58.880]   So let's see if I can bring this over.
[00:03:58.880 --> 00:04:03.700]   This is our product, the Augment Extension.
[00:04:03.700 --> 00:04:07.240]   It's got everything you like in your favorite AI coding assistants and more.
[00:04:07.240 --> 00:04:12.380]   But today, we're focusing on the agent.
[00:04:12.380 --> 00:04:20.920]   Now, here what we have is I want the agent to take on a personality.
[00:04:21.220 --> 00:04:26.600]   I want it to go ahead and talk to me about, you know, the AI world fair,
[00:04:26.600 --> 00:04:29.740]   the energy and excitement of San Francisco.
[00:04:29.740 --> 00:04:32.760]   And I'm going to go ahead, give it this prompt.
[00:04:32.760 --> 00:04:35.260]   And here are some guidelines that I'm going to give it.
[00:04:35.260 --> 00:04:37.220]   If you notice what these guidelines are,
[00:04:37.220 --> 00:04:39.080]   they're not telling you exactly what to implement.
[00:04:39.080 --> 00:04:42.880]   They're really drawing the boundaries for the agent itself.
[00:04:42.880 --> 00:04:47.320]   So I'm going to go ahead, press run, and let it run in the background.
[00:04:47.700 --> 00:04:51.380]   And we're going to, in the meantime, go back to the talk.
[00:04:51.380 --> 00:04:59.920]   So this seemingly simple example of working with the agent
[00:04:59.920 --> 00:05:02.400]   has kind of fundamentally transformed how we work.
[00:05:02.400 --> 00:05:06.360]   And a few months ago, it transformed what should have been a terrible day for me.
[00:05:06.360 --> 00:05:12.980]   So to see this in action, let's take a look at my Tuesday a little bit more in-depth.
[00:05:12.980 --> 00:05:16.880]   What actually happened and how this approach exemplifies the changes we've taken at Augment
[00:05:16.880 --> 00:05:20.160]   to integrate the growing capabilities of agents into our team.
[00:05:20.160 --> 00:05:22.740]   So it's Tuesday morning, 9 a.m.
[00:05:22.740 --> 00:05:27.220]   Before I grab my coffee, I start scoping out the design system component with an agent.
[00:05:27.220 --> 00:05:32.220]   And instead of micromanaging, what I'm doing is I'm scaffolding and providing context.
[00:05:32.220 --> 00:05:35.880]   I'm giving AI the outcomes, the context, constraints,
[00:05:35.880 --> 00:05:39.860]   and I'd have it perform the same tasks I'd expect of any other engineer.
[00:05:39.860 --> 00:05:43.560]   And so while AI goes and explores the code base and builds the RFC,
[00:05:43.960 --> 00:05:45.560]   I'm taking my morning coffee break.
[00:05:45.560 --> 00:05:48.160]   And when I return, it has a mostly completed RFC
[00:05:48.160 --> 00:05:49.880]   that follows our architectural patterns.
[00:05:49.880 --> 00:05:53.480]   At 9:30 a.m., my phone buzzes.
[00:05:53.480 --> 00:05:55.980]   The staging emergency is on my plate.
[00:05:55.980 --> 00:05:59.280]   And instead of dropping everything for six to eight hours of firefighting,
[00:05:59.280 --> 00:06:03.120]   I parallelize my work to parse through the noise.
[00:06:03.120 --> 00:06:06.680]   And so I take the component, hand it off to an agent,
[00:06:06.680 --> 00:06:08.560]   and it's working in the background for me.
[00:06:08.560 --> 00:06:13.600]   Two AI agents are working with me to help me parse through logs
[00:06:13.600 --> 00:06:14.960]   and performing a git bisect.
[00:06:14.960 --> 00:06:17.880]   And the Augment Slack bot helps me manage steps
[00:06:17.880 --> 00:06:20.480]   through communications with the teams that are, you know,
[00:06:20.480 --> 00:06:21.480]   annoyed that they can't deploy.
[00:06:21.480 --> 00:06:25.760]   So in this world, I'm not fighting fires anymore.
[00:06:25.760 --> 00:06:28.980]   What I'm doing is I'm orchestrating parallel AI work streams
[00:06:28.980 --> 00:06:32.920]   while I get to focus on the critical path of solving the on-call issue.
[00:06:32.920 --> 00:06:37.660]   At 10:15, the new hire interrupts my on-call flow.
[00:06:37.660 --> 00:06:40.780]   And here, our knowledge infrastructure really starts to kick in.
[00:06:41.240 --> 00:06:43.840]   I direct the new hire to the Augment Slack bot,
[00:06:43.840 --> 00:06:46.520]   which has access to our context engine, our code base,
[00:06:46.520 --> 00:06:48.880]   all of our documentation, linear, et cetera.
[00:06:48.880 --> 00:06:52.340]   Now the new hire can have personalized real-time help
[00:06:52.340 --> 00:06:54.960]   while I can stay focused on on-call response.
[00:06:54.960 --> 00:07:00.840]   By 11:00, I'm evaluating agents' work and coordinating the next steps.
[00:07:00.840 --> 00:07:03.440]   The design system component is complete.
[00:07:03.440 --> 00:07:06.240]   There's a storybook link, and my agents have found the bad commit
[00:07:06.240 --> 00:07:07.440]   and already reverted it.
[00:07:07.440 --> 00:07:09.480]   They've started writing up a post-mortem doc
[00:07:09.480 --> 00:07:11.520]   and already started exploring remediation.
[00:07:11.520 --> 00:07:17.640]   In this world, my role has shifted from implementation to evaluation.
[00:07:19.120 --> 00:07:22.680]   So now, I get ready to manage the deployment of the fix,
[00:07:22.680 --> 00:07:27.300]   and the agents are setting up -- off to tie up some loose ends.
[00:07:27.300 --> 00:07:30.280]   Now it's 12:00, lunch, food.
[00:07:30.280 --> 00:07:33.360]   I go eat while the agents are doing work for me.
[00:07:33.360 --> 00:07:37.040]   After lunch, I complete what should have been impossible.
[00:07:37.040 --> 00:07:40.800]   The Augment agents have executed the entire remediation process.
[00:07:40.800 --> 00:07:43.360]   The problem was with the gRPC library upgrade,
[00:07:43.360 --> 00:07:47.200]   and it touched 12 services, 20,000 lines of code.
[00:07:47.440 --> 00:07:50.320]   It has tests, it has a write-up, and actually,
[00:07:50.320 --> 00:07:55.200]   one of my engineering peers told me that it was quite surprising
[00:07:55.200 --> 00:07:58.320]   and really thanked me for pushing this across the line
[00:07:58.320 --> 00:08:01.760]   when, really, it was all the agents doing the work.
[00:08:01.760 --> 00:08:04.480]   So here, when a normal organization might estimate
[00:08:04.480 --> 00:08:07.480]   as maybe three weeks of engineering work
[00:08:07.480 --> 00:08:09.600]   to upgrade the gRPC services,
[00:08:09.600 --> 00:08:13.400]   is complete, tested, and, you know, almost ready for deployment.
[00:08:13.400 --> 00:08:17.400]   But, of course, it needs one final round of human policy.
[00:08:17.400 --> 00:08:25.160]   So the real transformation here is not just that I've completed this work
[00:08:25.160 --> 00:08:28.520]   in parallel. The real transformation is that I've unlocked time
[00:08:28.520 --> 00:08:30.600]   that I previously did not have.
[00:08:30.600 --> 00:08:34.120]   Now, that's not a dream. That's not a pitch.
[00:08:34.120 --> 00:08:36.840]   This scenario that I just described, all three of these challenges,
[00:08:36.840 --> 00:08:38.680]   was something that I personally had to face
[00:08:39.320 --> 00:08:43.720]   and solved in around half a day of active keyboard time.
[00:08:43.720 --> 00:08:47.080]   Same problems, same complexity, same time pressure,
[00:08:47.080 --> 00:08:50.680]   but instead of it being one of those days, it became a normal Tuesday.
[00:08:50.680 --> 00:08:56.600]   Now, what I just showed you is kind of the crux of how we at Augment work with agents today,
[00:08:56.600 --> 00:09:00.360]   by leveraging its unique strengths while compensating for its weaknesses.
[00:09:00.360 --> 00:09:02.840]   And that can be summed up in one core realization.
[00:09:02.840 --> 00:09:06.360]   To make the most use out of AI,
[00:09:06.360 --> 00:09:09.400]   we need to work with it as we would work with junior engineers.
[00:09:09.400 --> 00:09:12.360]   Not assigning tickets, but mentoring.
[00:09:12.360 --> 00:09:15.800]   Now, I know we've all heard this.
[00:09:15.800 --> 00:09:17.160]   We're all rolling our eyes a little bit.
[00:09:17.160 --> 00:09:20.360]   You know, AI has the intelligence of a junior engineer.
[00:09:20.360 --> 00:09:24.200]   Let's actually break down how this analogy applies,
[00:09:24.200 --> 00:09:26.280]   and more importantly, where it doesn't.
[00:09:26.280 --> 00:09:30.600]   Both AI and new engineers start with no context of your systems.
[00:09:30.600 --> 00:09:33.160]   They lack your organizational context.
[00:09:33.160 --> 00:09:36.520]   And most importantly, they lack years of experience working with systems.
[00:09:36.520 --> 00:09:38.280]   In your systems.
[00:09:38.280 --> 00:09:40.760]   So they're able to implement in isolation,
[00:09:40.760 --> 00:09:44.600]   but they kind of need a structured environment to work in to perform best.
[00:09:44.600 --> 00:09:50.200]   These three pieces make up what we call the context or knowledge gap.
[00:09:50.200 --> 00:09:54.760]   Now, in learning and speed is kind of where they differ really drastically.
[00:09:54.760 --> 00:09:57.480]   A junior engineer learns and executes fairly slowly,
[00:09:57.480 --> 00:09:59.800]   but they can retain and synthesize knowledge.
[00:09:59.800 --> 00:10:02.200]   While, if given the same information,
[00:10:02.200 --> 00:10:06.440]   AI can process it and implement what you want in minutes or even seconds,
[00:10:06.440 --> 00:10:09.160]   but forgets things between conversations.
[00:10:09.160 --> 00:10:15.160]   So for us, that means that AI is effectively a perpetually junior engineer,
[00:10:15.160 --> 00:10:18.840]   but one that can work on multiple tasks simultaneously and incredibly quickly.
[00:10:19.560 --> 00:10:24.120]   So to make the most use out of AI, we must become perpetual tech leads.
[00:10:24.120 --> 00:10:27.000]   We need to become mentors to our AI apprentices,
[00:10:27.000 --> 00:10:28.920]   just as we would become mentors to our juniors.
[00:10:28.920 --> 00:10:33.800]   Now, you might be thinking, this is almost great for individual engineers.
[00:10:33.800 --> 00:10:36.680]   What does this mean for teams, my organization?
[00:10:36.680 --> 00:10:38.760]   And that's the right question to ask,
[00:10:38.760 --> 00:10:41.640]   and where a lot of organizations struggle, including augment.
[00:10:41.640 --> 00:10:44.120]   So we've seen this pattern repeatedly.
[00:10:44.120 --> 00:10:47.960]   Individual engineers can achieve remarkable productivity gains with AI,
[00:10:47.960 --> 00:10:51.720]   but when the teams try to scale, progress stalls.
[00:10:51.720 --> 00:10:55.160]   Even when we first started working on the augment agent, actually,
[00:10:55.160 --> 00:10:58.920]   I remember people were saying, your agent is so good.
[00:10:58.920 --> 00:11:00.360]   How can I get what Eric has?
[00:11:00.360 --> 00:11:04.680]   Now, this is kind of indicative of two bigger problems.
[00:11:06.520 --> 00:11:09.960]   How can I replicate individual success with AI across teams?
[00:11:09.960 --> 00:11:14.200]   And how do we turn team productivity into sustainable business advantage?
[00:11:14.200 --> 00:11:19.000]   What's actually blocking real organizations from using AI effectively?
[00:11:19.000 --> 00:11:23.560]   This answer turns out to be fairly simple.
[00:11:23.560 --> 00:11:28.760]   It's not a new blocker.
[00:11:28.760 --> 00:11:35.240]   It's the same problem that makes new hires take six months to ramp up in your standard org,
[00:11:35.240 --> 00:11:42.120]   and why four out of every five engineers across our industry cite context deficit as the biggest blocker.
[00:11:42.120 --> 00:11:45.160]   So the core problem here is context.
[00:11:45.160 --> 00:11:48.360]   And we've had this problem for decades, even without AI in the mix.
[00:11:48.360 --> 00:11:52.760]   And so a paradox kind of arises in our industry.
[00:11:52.760 --> 00:11:58.520]   How can we hope to solve the knowledge infrastructure problem when it's still this bad for human teams?
[00:11:58.520 --> 00:12:04.360]   And how can we scale AI beyond an individual when we don't have the requisite knowledge infrastructure to do so?
[00:12:07.560 --> 00:12:09.160]   This doesn't mean writing more docs.
[00:12:09.160 --> 00:12:10.840]   This doesn't mean doing knowledge reorgs.
[00:12:10.840 --> 00:12:14.920]   This doesn't mean, you know, completely rebuilding your organization for AI.
[00:12:14.920 --> 00:12:19.240]   In that world, humans are serving AI, not the other way around.
[00:12:19.240 --> 00:12:26.120]   It means kind of choosing the right tools and systems that can institutionalize knowledge infrastructure for you.
[00:12:26.120 --> 00:12:29.800]   So here's how to get started.
[00:12:29.800 --> 00:12:36.840]   Companies that successfully use augment and other AI tools tend to follow a fairly similar pattern to get started,
[00:12:36.840 --> 00:12:38.680]   which we've distilled into three steps.
[00:12:38.680 --> 00:12:41.720]   The first step is knowledge gathering.
[00:12:41.720 --> 00:12:44.200]   Start by exploring your existing knowledge bases.
[00:12:44.200 --> 00:12:45.800]   What do you have documented?
[00:12:45.800 --> 00:12:51.320]   Map out your key knowledge sources: Notion, Google Docs, GitHub, etc.
[00:12:51.320 --> 00:12:57.000]   Fill in the critical knowledge gaps, specifically around meetings and decisions,
[00:12:57.000 --> 00:13:01.480]   with meeting intelligence tools to capture that knowledge that would otherwise be lost.
[00:13:02.920 --> 00:13:10.440]   In fact, actually, most of the meetings that I personally attend outside of engineering nowadays start and end with a granola AI recording,
[00:13:10.440 --> 00:13:15.480]   and it comes with basically a list of tasks that we can directly put into our task tracker at the end of it.
[00:13:17.240 --> 00:13:22.120]   And finally, begin integrating data sources using things like MCP and augment native audit integrations
[00:13:22.120 --> 00:13:24.760]   to create the beginnings of your knowledge infrastructure.
[00:13:24.760 --> 00:13:30.200]   Step two is starting to gain familiarity with your tools.
[00:13:30.200 --> 00:13:33.080]   This refers to both you gaining familiarity with the tools,
[00:13:33.080 --> 00:13:36.920]   but also letting the tools gain familiarity with you and your organization.
[00:13:37.800 --> 00:13:46.200]   More broadly, introduce these tools across your teams and enable them to explore the strengths and weaknesses of AI in your specific contexts.
[00:13:46.200 --> 00:13:53.880]   This is where you build up the muscle of working with AI and start teaching your platform of choice about things like coding patterns,
[00:13:53.880 --> 00:14:02.600]   architectural decisions, business logic, etc. Step three is leaning in. Expand the successful patterns you've discovered.
[00:14:02.600 --> 00:14:10.600]   And you can, at this point, start to entrust more complex tasks as you've built up trust and as your confidence in these systems grow.
[00:14:10.600 --> 00:14:17.480]   Share your successful memories and task lists across teams. This is where compound learning starts to really take off.
[00:14:17.480 --> 00:14:25.000]   When people were asking me about how can I get Eric's agent, we have a feature called memories, and I basically just shared that file with them.
[00:14:25.000 --> 00:14:34.760]   This is where, again, compound learning can take off and knowledge and individual successes can start to multiply and spread across your organization.
[00:14:34.760 --> 00:14:42.680]   So while us as engineers are working with AI systems by providing missing structure and guidance,
[00:14:43.160 --> 00:14:48.760]   successful organizations as a whole are enabling AI systems by institutionalizing their knowledge infrastructure.
[00:14:48.760 --> 00:14:58.360]   So now, if these things are possible now, how has that actually changed the way we operate at Augment?
[00:14:58.360 --> 00:15:03.640]   What future is actually available to us? Let me bring you back to the agent here and show you.
[00:15:06.200 --> 00:15:15.560]   So I have a development environment up here. So this is on the real Augment code base. This is our dev version of our build.
[00:15:15.560 --> 00:15:26.360]   You can see in the top, that's the extension development environment. And hopefully, when I type at, I can -- okay, personalities -- AI engineer world fair Augie.
[00:15:26.360 --> 00:15:32.600]   Awesome. You can see it even created a little icon. It's a little rough, but there it is.
[00:15:33.560 --> 00:15:44.600]   What is your favorite city? Let's see what it says. Awesome. There we go.
[00:15:44.600 --> 00:15:50.840]   Easy question. It's absolutely hands down San Francisco. I mean, are you kidding me?
[00:15:50.840 --> 00:16:01.880]   The city is the epicenter of the AI revolution. So that's awesome. You can see that, you know, as I was giving this talk with just a simple prompt, we were able to create a new personality.
[00:16:01.880 --> 00:16:06.920]   This kind of exemplifies some of the agentic personality stuff that was talked about earlier.
[00:16:06.920 --> 00:16:16.600]   But this, you know, really starts to change when, you know, if I can give a talk and also implement a feature,
[00:16:16.600 --> 00:16:20.840]   it really starts to change how we think about the economics of developing software.
[00:16:24.680 --> 00:16:28.840]   See, once we solve the knowledge infrastructure problem, everything starts to change.
[00:16:28.840 --> 00:16:36.280]   When information transfer becomes instant and scalable, we unlock AI's true economic potential,
[00:16:36.280 --> 00:16:42.200]   parallel exploration of your business. The traditional approach to building software starts with designing,
[00:16:42.200 --> 00:16:47.000]   then building, then testing. And each iteration locks us out of potential decisions at every single step.
[00:16:47.640 --> 00:16:53.000]   But when knowledge infrastructure exists, prototyping is cheap, and building takes fewer resources,
[00:16:53.000 --> 00:16:58.040]   we can do something drastically different. Instead of guessing at what might be the best approach,
[00:16:58.040 --> 00:17:03.720]   we can rapidly prototype, iterate, test, and then converge on a real decision based on real metrics
[00:17:03.720 --> 00:17:10.040]   and by putting our products in front of people. At Augment today, we constantly have prototypes floating
[00:17:10.040 --> 00:17:17.080]   around. We have a prototype of a VS Code fork in case we need it. Augments itself became -- or sorry,
[00:17:17.080 --> 00:17:22.600]   Agents itself began as a prototype as well. And many of the features in our product that our users love
[00:17:22.600 --> 00:17:29.400]   began as a prototype when an engineer at Augment just decided, hey, I'm going to try this and with an agent.
[00:17:29.400 --> 00:17:36.680]   And by trying multiple approaches simultaneously, again, we can quickly converge with real data on the best
[00:17:36.680 --> 00:17:41.320]   approaches that we should actually invest in productionizing without arguing, you know,
[00:17:41.320 --> 00:17:48.040]   in a room talking to each other about what might be best. As an engineer, we've all had to justify
[00:17:48.040 --> 00:17:53.640]   a design decision to leadership, complained about tech debt, or cursed our past selves for doing something
[00:17:53.640 --> 00:17:58.280]   in a particular way. And as leadership, we all wish we could go back and redo some critical decisions
[00:17:58.280 --> 00:18:03.080]   or enable our teams to do more strategic work instead of constantly throwing fires at them to put out.
[00:18:03.720 --> 00:18:09.880]   But with parallel exploration, we can turn these wishes from retroactive to proactive. By measuring
[00:18:09.880 --> 00:18:15.240]   and testing divergent approaches from the start, we can start making decisions better informed by data.
[00:18:15.240 --> 00:18:22.120]   And when we can measure hypotheses of designs, prototypes, and architectures early on and validate them,
[00:18:22.120 --> 00:18:29.000]   we reach a fascinating conclusion. If we use AI effectively to augment our organizations,
[00:18:29.000 --> 00:18:36.440]   we can make the creation of software more of a science, not less. And that begins with all of our engineers,
[00:18:36.440 --> 00:18:44.840]   organizations, teams choosing the best tools for our jobs that most effectively allow us to mentor our machines.
[00:18:44.840 --> 00:18:49.640]   Thank you all so much for your time. If what we talked about today resonates with you,
[00:18:49.640 --> 00:18:56.120]   please visit the Augment booth on the expo floor. Go to Augment.com, try us out for free. And Remote
[00:18:56.120 --> 00:19:05.560]   Agents is out this week. Let it parallelize your work for you. Thank you so much.

