
[00:00:00.000 --> 00:00:03.360]   [MUSIC PLAYING]
[00:00:03.360 --> 00:00:08.160]   Hi, I'm Stacey, and I'm a deep learning engineer here
[00:00:08.160 --> 00:00:09.440]   at Weights & Biases.
[00:00:09.440 --> 00:00:12.800]   And I build developer tools for visualization, explainability,
[00:00:12.800 --> 00:00:13.840]   collaboration, and AI.
[00:00:13.840 --> 00:00:17.720]   And you can now read a lot more detail on my profile page.
[00:00:17.720 --> 00:00:19.900]   And if you've been familiar with Weights & Biases,
[00:00:19.900 --> 00:00:22.240]   you might have seen the showcase portion, where
[00:00:22.240 --> 00:00:25.040]   if you go to wandb.ai/yourusername,
[00:00:25.040 --> 00:00:27.520]   you can add reports from projects
[00:00:27.520 --> 00:00:28.440]   that you're working on.
[00:00:28.440 --> 00:00:30.840]   And that showcase component is staying.
[00:00:30.840 --> 00:00:32.480]   I have a lot of reports here.
[00:00:32.480 --> 00:00:35.000]   So I'm very excited about the customizable part
[00:00:35.000 --> 00:00:37.800]   of the profile page, where I can write text
[00:00:37.800 --> 00:00:39.080]   about what I'm working on.
[00:00:39.080 --> 00:00:41.400]   I can link to external projects.
[00:00:41.400 --> 00:00:44.080]   I can feature reports.
[00:00:44.080 --> 00:00:49.120]   And I can also nest details so that we can hop into the 3D
[00:00:49.120 --> 00:00:50.440]   object detection project.
[00:00:50.440 --> 00:00:52.840]   You'll see that I can include images.
[00:00:52.840 --> 00:00:58.440]   Can even include equations and blocks of code.
[00:00:58.440 --> 00:00:59.840]   And under the hood, this is really
[00:00:59.840 --> 00:01:03.080]   a report, which I can customize to show whatever
[00:01:03.080 --> 00:01:05.080]   I want on my profile page.
[00:01:05.080 --> 00:01:08.080]   I can even organize all of my projects and reports
[00:01:08.080 --> 00:01:09.160]   by category.
[00:01:09.160 --> 00:01:11.360]   So here are some of my favorite reports.
[00:01:11.360 --> 00:01:15.720]   Here are my reports about language, and so on.
[00:01:15.720 --> 00:01:19.880]   And I also want to show a team version of this.
[00:01:19.880 --> 00:01:22.080]   Really quickly, you can also include emoji.
[00:01:22.080 --> 00:01:24.560]   And when you're logged in, you'll get an edit button.
[00:01:24.560 --> 00:01:26.280]   You can write in this report.
[00:01:26.280 --> 00:01:30.680]   You can order these around and really
[00:01:30.680 --> 00:01:33.680]   customize what you're presenting to the world on your profile
[00:01:33.680 --> 00:01:34.160]   page.
[00:01:34.160 --> 00:01:36.360]   We're hoping this inspires folks to share more
[00:01:36.360 --> 00:01:38.200]   about their projects, find collaborators,
[00:01:38.200 --> 00:01:41.520]   get ideas from Weights and Biases.
[00:01:41.520 --> 00:01:46.400]   I want to go back and talk about the 3D objects work
[00:01:46.400 --> 00:01:49.560]   that we've been doing.
[00:01:49.560 --> 00:01:51.720]   In this project, I'm working with the level 5 data
[00:01:51.720 --> 00:01:57.320]   set to annotate some scenes with 3D point clouds.
[00:01:57.320 --> 00:02:01.080]   And we have the ground truth bounding boxes
[00:02:01.080 --> 00:02:02.280]   for this data set.
[00:02:02.280 --> 00:02:03.760]   They'll show up in green.
[00:02:03.760 --> 00:02:06.720]   And some predictions from my very simple model,
[00:02:06.720 --> 00:02:08.720]   they'll be in yellow if it's a close match,
[00:02:08.720 --> 00:02:11.240]   and in red if it's a guess.
[00:02:11.240 --> 00:02:15.520]   So you'll see that there's a bunch of guesses which
[00:02:15.520 --> 00:02:16.800]   are actually trees.
[00:02:16.800 --> 00:02:20.400]   And I can customize the exact numerical score here.
[00:02:20.400 --> 00:02:25.080]   We're adding filtering by the labels soon.
[00:02:25.080 --> 00:02:27.000]   You might get multiple candidate boxes.
[00:02:27.000 --> 00:02:28.720]   And hopefully, you're getting some idea
[00:02:28.720 --> 00:02:33.600]   of just how detailed all of this annotation can be.
[00:02:33.600 --> 00:02:35.520]   I have the syntax documented here.
[00:02:35.520 --> 00:02:41.760]   You can set the label to any text and color and then
[00:02:41.760 --> 00:02:42.840]   the numerical score.
[00:02:42.840 --> 00:02:45.040]   And we're actively working on adding multiple camera
[00:02:45.040 --> 00:02:49.600]   viewpoints and working with sequences of scenes.
[00:02:49.600 --> 00:02:52.400]   And if your team is working on 3D point cloud visualization,
[00:02:52.400 --> 00:02:55.240]   we'd love to hear from you on the specific features that
[00:02:55.240 --> 00:02:57.360]   would help.
[00:02:57.360 --> 00:02:59.160]   Great, and it works to switch tabs now.
[00:02:59.160 --> 00:03:01.680]   I'd like to go into a different project,
[00:03:01.680 --> 00:03:05.040]   and thanks for bearing with me here, on time series.
[00:03:05.040 --> 00:03:08.120]   So we've been working on support for time series
[00:03:08.120 --> 00:03:12.480]   and really enabling you to log not just the bar charts
[00:03:12.480 --> 00:03:16.600]   and scatter plots and training curves that you're used to,
[00:03:16.600 --> 00:03:19.720]   but have a timestamp on the x-axis.
[00:03:19.720 --> 00:03:23.640]   So to enable this, I simply log a table.
[00:03:23.640 --> 00:03:26.560]   And I can have a timestamp column and one or more metrics
[00:03:26.560 --> 00:03:27.920]   columns here.
[00:03:27.920 --> 00:03:31.360]   And then to visualize this data as multiple series,
[00:03:31.360 --> 00:03:35.720]   I can select a combined plot instead of a table.
[00:03:35.720 --> 00:03:37.840]   On the x dimension, I'll have the timestamp.
[00:03:37.840 --> 00:03:39.920]   And I add .2 timestamp to convert it
[00:03:39.920 --> 00:03:41.620]   to a human-readable format.
[00:03:41.620 --> 00:03:44.880]   On the y dimension here, I have temperature in degrees Celsius.
[00:03:44.880 --> 00:03:46.960]   And this project is using a data set
[00:03:46.960 --> 00:03:49.040]   of climate measurements, which include temperature,
[00:03:49.040 --> 00:03:52.040]   atmospheric pressure, humidity, and so on.
[00:03:52.040 --> 00:03:56.720]   And once I configure that, I can have the real time
[00:03:56.720 --> 00:03:58.840]   from the validation data.
[00:03:58.840 --> 00:04:03.440]   And the observed actual values, the ground truth,
[00:04:03.440 --> 00:04:04.680]   they're shown in black here.
[00:04:04.680 --> 00:04:06.440]   And then all of my model's predictions
[00:04:06.440 --> 00:04:07.800]   are the colorful ones.
[00:04:07.800 --> 00:04:11.160]   And of course, this is a lot of lines.
[00:04:11.160 --> 00:04:14.260]   So I'll walk through that in a bit more detail in a second.
[00:04:14.260 --> 00:04:16.660]   But just to show you how simple the syntax is,
[00:04:16.660 --> 00:04:20.880]   I can call wandb.log and pass in a data frame to the table.
[00:04:20.880 --> 00:04:25.600]   Or I can explicitly list the columns that I'd like to show.
[00:04:25.600 --> 00:04:30.300]   So looking in more detail, here I have just two variants.
[00:04:30.300 --> 00:04:34.080]   I have the observed values, the ground truth, in black.
[00:04:34.080 --> 00:04:36.720]   And then the baseline model, which is rule-based.
[00:04:36.720 --> 00:04:40.040]   It just repeats the previous observation in light orange.
[00:04:40.040 --> 00:04:42.440]   And I can toggle some of my other models
[00:04:42.440 --> 00:04:44.520]   that I've trained and see, OK, how
[00:04:44.520 --> 00:04:46.360]   does the linear model perform?
[00:04:46.360 --> 00:04:48.520]   OK, and here the red value is a little bit
[00:04:48.520 --> 00:04:50.080]   closer on these metrics.
[00:04:50.080 --> 00:04:51.440]   Maybe it's a little hard to tell.
[00:04:51.440 --> 00:04:55.060]   Maybe I want to look at my category of small two layer
[00:04:55.060 --> 00:04:55.840]   models.
[00:04:55.840 --> 00:04:58.540]   And you can see that for these three different components
[00:04:58.540 --> 00:05:01.120]   of pressure, maybe they're getting closer.
[00:05:01.120 --> 00:05:04.360]   And of course, you might want to do some grouping to evaluate
[00:05:04.360 --> 00:05:05.880]   how those models are performing.
[00:05:05.880 --> 00:05:07.500]   And hopefully, this gives you a sense
[00:05:07.500 --> 00:05:10.500]   of the detailed visualization that you can do.
[00:05:10.500 --> 00:05:12.780]   If the colors and line styles are not enough,
[00:05:12.780 --> 00:05:14.700]   you can also add points.
[00:05:14.700 --> 00:05:17.140]   And here I have a lot more metrics.
[00:05:17.140 --> 00:05:18.780]   Besides temperature and pressure,
[00:05:18.780 --> 00:05:20.780]   I have humidity and wind velocity
[00:05:20.780 --> 00:05:22.140]   in the x and y direction.
[00:05:22.140 --> 00:05:24.140]   And if I view them all on one chart,
[00:05:24.140 --> 00:05:26.420]   it might start to get a little bit busy.
[00:05:26.420 --> 00:05:28.420]   So I can go into this configuration here.
[00:05:28.420 --> 00:05:31.340]   And I see all of the row--
[00:05:31.340 --> 00:05:34.140]   the column values that I'm plotting in the series.
[00:05:34.140 --> 00:05:36.380]   And let's say I want to change this one.
[00:05:36.380 --> 00:05:37.860]   I want to make it a point.
[00:05:37.860 --> 00:05:40.780]   And let's make it a diamond.
[00:05:40.780 --> 00:05:45.300]   And then I'll change this to 500, make them really big,
[00:05:45.300 --> 00:05:46.540]   and hit Apply.
[00:05:46.540 --> 00:05:50.380]   And now you'll see that that series is highlighted.
[00:05:50.380 --> 00:05:52.940]   And I can see the difference between some
[00:05:52.940 --> 00:05:55.500]   of my models in the ground truth and get really detailed
[00:05:55.500 --> 00:05:58.180]   about how this is visualized.
[00:05:58.180 --> 00:06:00.460]   Once I have all of this set up, Artifacts
[00:06:00.460 --> 00:06:03.620]   is a great way to version time slices of my data.
[00:06:03.620 --> 00:06:07.540]   So I can have my training data be aliased by the last year
[00:06:07.540 --> 00:06:09.540]   that's included, my validation data
[00:06:09.540 --> 00:06:11.780]   be different years than the ones I'm training on,
[00:06:11.780 --> 00:06:14.140]   and my test data have months as alias.
[00:06:14.140 --> 00:06:15.740]   And then in my script, it's very easy
[00:06:15.740 --> 00:06:18.700]   to evaluate models trained on different subsets
[00:06:18.700 --> 00:06:21.620]   and test them on the different months.
[00:06:21.620 --> 00:06:24.620]   So here I have that for May and July.
[00:06:24.620 --> 00:06:28.980]   And for June here, I'm showing a derived metric.
[00:06:28.980 --> 00:06:31.100]   So I can go into the panel plot configuration.
[00:06:31.100 --> 00:06:34.540]   And I can actually say, subtract my model predictions
[00:06:34.540 --> 00:06:38.140]   from the ground truth, the observed values, and plot that.
[00:06:38.140 --> 00:06:41.940]   So here, the y equals 0 line is the actual values.
[00:06:41.940 --> 00:06:46.180]   And you can see that my baseline is 0.4 off of the actual value
[00:06:46.180 --> 00:06:47.300]   at this point.
[00:06:47.300 --> 00:06:50.260]   And then my dense model is doing the best.
[00:06:50.260 --> 00:06:54.180]   And I get a really flexible way to dynamically query precisely
[00:06:54.180 --> 00:06:56.120]   what I want to know about my models.
[00:06:56.120 --> 00:06:59.700]   I can also group these results by that training time stamp
[00:06:59.700 --> 00:07:02.900]   rate as we add more data, we get better performance.
[00:07:02.900 --> 00:07:05.940]   I can specifically look at how much adding training data
[00:07:05.940 --> 00:07:07.140]   improves different models.
[00:07:07.140 --> 00:07:08.660]   So obviously, for the baseline, it's
[00:07:08.660 --> 00:07:11.580]   not going to change performance because it's rule-based.
[00:07:11.580 --> 00:07:14.180]   For the linear model, adding more data helps.
[00:07:14.180 --> 00:07:19.060]   And then for our two variants, maybe it's in the noise here.
[00:07:19.060 --> 00:07:22.540]   But this is all very easy to customize with this panel plot
[00:07:22.540 --> 00:07:26.000]   configuration where I can set the shape and size
[00:07:26.000 --> 00:07:30.320]   of the points based on a field in my data.
[00:07:30.320 --> 00:07:32.560]   Lastly, I want to show a sneak preview of where we're
[00:07:32.560 --> 00:07:34.280]   going with this that you can also
[00:07:34.280 --> 00:07:36.880]   highlight regions of the chart.
[00:07:36.880 --> 00:07:41.120]   So again, you can look at performance here by model type.
[00:07:41.120 --> 00:07:44.480]   And my simple model variants are doing pretty similarly.
[00:07:44.480 --> 00:07:47.400]   But hopefully, this gives you a preview of how flexible
[00:07:47.400 --> 00:07:48.760]   this time series support will be.
[00:07:48.760 --> 00:07:50.300]   And again, we'd love to hear from you
[00:07:50.300 --> 00:07:53.800]   on which features you would find most useful.
[00:07:53.800 --> 00:07:58.160]   You can also now share these profile links.
[00:07:58.160 --> 00:08:00.000]   And this is an early preview, but we'll
[00:08:00.000 --> 00:08:02.320]   be getting this out very soon.
[00:08:02.320 --> 00:08:05.040]   And thanks so much for your time.
[00:08:05.040 --> 00:08:08.400]   [MUSIC PLAYING]
[00:08:08.400 --> 00:08:11.440]   [INAUDIBLE]
[00:08:11.440 --> 00:08:14.800]   [MUSIC PLAYING]
[00:08:14.800 --> 00:08:18.160]   [MUSIC PLAYING]
[00:08:18.720 --> 00:08:22.080]   [MUSIC PLAYING]
[00:08:22.080 --> 00:08:24.660]   (upbeat music)
[00:08:24.660 --> 00:08:27.320]   (air whooshing)

