
[00:00:00.000 --> 00:00:04.560]   Typically the first things you try and I have this like diagram that basically outlines
[00:00:04.560 --> 00:00:10.000]   There's kind of easy things like table stakes things you should try and then there's harder things that you should try
[00:00:10.000 --> 00:00:14.800]   Basically easy things will be more incremental and maybe a nudge up performance by a few percentage points
[00:00:14.800 --> 00:00:18.560]   Harder things will basically just unlock new capabilities for your entire system
[00:00:18.560 --> 00:00:23.760]   The other thing the other kind of way of looking at this actually is basically like a table
[00:00:24.240 --> 00:00:30.160]   Where like the left column is the set of pain points that you're running into and the right column is like the set of solutions
[00:00:30.160 --> 00:00:32.240]   That are going to solve some of these pain points
[00:00:32.240 --> 00:00:36.480]   Um, so instead of looking at it in terms of like oh easy stuff to like hard stuff
[00:00:36.480 --> 00:00:40.320]   Like a pain point for instance could be very specific
[00:00:40.320 --> 00:00:45.120]   It could be like oh this retrieval is actually not giving me back the right results
[00:00:45.120 --> 00:00:48.100]   So if the pain point really is around like retrieval
[00:00:48.100 --> 00:00:52.320]   Then what you want to do is you want to invest in better retrieval algorithms, right?
[00:00:52.400 --> 00:00:58.820]   You want to use something to actually given a question give you back the most relevant context, uh to answer this question

