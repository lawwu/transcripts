
[00:00:00.000 --> 00:00:15.000]   .
[00:00:15.000 --> 00:00:16.220]   My name is Stefania.
[00:00:16.220 --> 00:00:21.420]   I'm so glad you made it until the last day of the conference
[00:00:21.420 --> 00:00:23.320]   and came to the robotics track.
[00:00:23.320 --> 00:00:25.920]   So we're going to start with a live demo,
[00:00:25.920 --> 00:00:28.040]   and then we'll switch to the presentation,
[00:00:28.040 --> 00:00:31.800]   and we just like to kind of swap things around.
[00:00:31.800 --> 00:00:36.140]   So I'm going to try to connect the microscope over here.
[00:00:36.140 --> 00:00:39.420]   And let's see the other camera.
[00:00:39.420 --> 00:00:41.180]   And some sensors.
[00:00:41.180 --> 00:00:46.800]   So my talk is about real-time co-scientists.
[00:00:46.800 --> 00:00:48.600]   So think about pair programmers.
[00:00:48.600 --> 00:00:51.800]   How many of you use any form of co-pilot for coding?
[00:00:51.800 --> 00:00:52.380]   Right.
[00:00:52.380 --> 00:00:55.600]   So it's just like that, but for doing things in the real world,
[00:00:55.600 --> 00:00:57.280]   like science experiments.
[00:00:57.280 --> 00:01:02.080]   So you can see here, now I have this board, which
[00:01:02.080 --> 00:01:04.100]   is a micro:bit board with jackdack connected.
[00:01:04.100 --> 00:01:05.920]   And it's measuring the temperature.
[00:01:05.920 --> 00:01:07.780]   And I actually have a heat pad, so I
[00:01:07.780 --> 00:01:11.020]   can increase the temperature and make it very, very hot.
[00:01:11.020 --> 00:01:13.040]   And hopefully, it's not going to melt the board.
[00:01:13.040 --> 00:01:16.660]   And then I can send that to my science assistant.
[00:01:16.660 --> 00:01:18.840]   It's going to analyze the data and kind of give me
[00:01:18.840 --> 00:01:20.380]   an answer in real time.
[00:01:20.380 --> 00:01:24.060]   So it's telling me, like, OK, the ambient conditions indicate,
[00:01:24.060 --> 00:01:26.800]   like, stable, dark, quiet environments.
[00:01:26.800 --> 00:01:30.180]   Because it has, like-- it knows it can measure all these different sensors.
[00:01:30.180 --> 00:01:32.140]   No buttons.
[00:01:32.140 --> 00:01:34.200]   But it sees that the temperature is 26 degrees.
[00:01:34.200 --> 00:01:36.320]   And then I can actually give it more context.
[00:01:36.320 --> 00:01:41.200]   I can go and create a protocol and say, like, this is the type of experiment that I want to do.
[00:01:41.200 --> 00:01:47.020]   So whenever you give me feedback about the data or the images that I'm sending from the microscope,
[00:01:47.020 --> 00:01:52.980]   which I can also do, it's going to be in the context of that experiment with those conditions
[00:01:52.980 --> 00:01:54.260]   and those constraints.
[00:01:54.260 --> 00:02:00.080]   And, of course, like, if you are actually doing that experiment several times, you can go ahead
[00:02:00.080 --> 00:02:02.440]   and create a custom page for your experiment.
[00:02:02.440 --> 00:02:09.880]   And it will monitor the data from the-- we're going to connect, again, the JackDack.
[00:02:09.880 --> 00:02:13.140]   It's going to monitor and plot the data in real time.
[00:02:13.140 --> 00:02:20.300]   And the cool thing is also that if you want to leave your experiment running and go away, right,
[00:02:20.300 --> 00:02:24.180]   like, you could actually have cameras that are autonomous.
[00:02:24.180 --> 00:02:28.600]   To go back to the previous talk, they're not fully autonomous, but they can track objects.
[00:02:28.600 --> 00:02:31.540]   So this camera is called re-camera.
[00:02:31.540 --> 00:02:36.440]   Also, by the way, all the hardware I'm showing you and all the components are open source.
[00:02:36.440 --> 00:02:45.840]   So right now, I'm going to set it to track me as a person and start the tracking.
[00:02:45.840 --> 00:02:49.200]   And it's running a model on the camera itself.
[00:02:49.200 --> 00:02:53.580]   So it's going to start, like, moving around to see me and see where I'm going.
[00:02:53.580 --> 00:02:59.760]   But you could train a custom model, like, to track, like, crystal growth or specific objects
[00:02:59.760 --> 00:03:01.660]   that you want to monitor and in real time.
[00:03:01.660 --> 00:03:10.500]   And this runs on Wi-Fi, so you can place it anywhere and then control, like, the conditions
[00:03:10.500 --> 00:03:13.440]   in the experiments, like increase the temperature or decrease the temperature.
[00:03:13.440 --> 00:03:15.560]   So, oh, it sees all of you.
[00:03:15.560 --> 00:03:17.820]   That's awesome.
[00:03:17.820 --> 00:03:21.040]   So I'm going to stop this for now.
[00:03:21.040 --> 00:03:26.200]   So that's like a short-- and here we're seeing, like, our temperature kind of increasing.
[00:03:26.200 --> 00:03:28.380]   I think my heat pad stopped.
[00:03:28.380 --> 00:03:36.200]   But that's just like a simple, like, demo of, like, without having a specific experiment in mind.
[00:03:36.200 --> 00:03:44.840]   And now I'm going to switch to my slides and actually show you what happens when you record
[00:03:44.840 --> 00:03:48.580]   much longer experiments and what it can do.
[00:03:48.580 --> 00:03:50.580]   Why do we care about co-scientists?
[00:03:50.580 --> 00:03:54.580]   We're not talking about real-time co-scientists, just co-scientists in general.
[00:03:54.580 --> 00:03:57.420]   Like, why should you care about it?
[00:03:57.420 --> 00:04:03.480]   We know that there is a data overload in science, and there's a lot of complexity, a lot of things
[00:04:03.480 --> 00:04:08.120]   to parse through and analyze, and AI can really help with that.
[00:04:08.120 --> 00:04:13.700]   We also know that beyond the analysis of data, fast, at scale, they can help with generating
[00:04:13.700 --> 00:04:19.760]   new hypotheses and maybe identifying blind spots in prior work and in your own thinking.
[00:04:19.760 --> 00:04:23.600]   And we also know that they can speed things up, right?
[00:04:23.600 --> 00:04:29.780]   So instead of testing one hypothesis at a time, you could test 100 hypotheses.
[00:04:29.780 --> 00:04:32.120]   So I got inspired to build this demo.
[00:04:32.120 --> 00:04:38.940]   And by the way, the cost of all the parts is under $300, and it took me two weeks to build
[00:04:38.940 --> 00:04:39.940]   it.
[00:04:39.940 --> 00:04:43.260]   And it's open source, so you can play with it and hack it.
[00:04:43.260 --> 00:04:49.200]   So I got inspired to do this because of this demo from DeepMind.
[00:04:49.200 --> 00:04:56.440]   So this paper got published two months ago on AI co-scientists, and it was actually showing,
[00:04:56.440 --> 00:05:00.640]   not in the real life, but it was actually showing what happens when you're analyzing papers and
[00:05:00.640 --> 00:05:01.640]   data.
[00:05:01.640 --> 00:05:07.660]   If you have a multitude of agents that can perform the different roles that we do as scientists,
[00:05:07.660 --> 00:05:09.100]   what are the results?
[00:05:09.100 --> 00:05:12.140]   So what are the roles that we do as scientists?
[00:05:12.140 --> 00:05:18.640]   We analyze papers, we summarize them, we look at data, we rank the options, we rank the different
[00:05:18.640 --> 00:05:19.640]   hypothesis.
[00:05:19.640 --> 00:05:24.220]   So they actually created an orchestration of different agents.
[00:05:24.220 --> 00:05:28.180]   Each of them was actually working on Gemini 2.0.
[00:05:28.180 --> 00:05:34.640]   And then with this orchestration of ranking the different results, the different hypothesis,
[00:05:34.640 --> 00:05:42.260]   doing search online, doing search on papers, come up with a plan for the researcher to use.
[00:05:42.260 --> 00:05:47.920]   And not only that they did that, but they actually tested it against prior discoveries, and this
[00:05:47.920 --> 00:05:48.840]   was super interesting.
[00:05:48.840 --> 00:05:53.880]   So they tested it against prior discoveries on gene transfer mechanisms.
[00:05:53.880 --> 00:05:59.140]   So a discovery that took scientists 12 years.
[00:05:59.140 --> 00:06:03.820]   It took the AI scientist two days to come up with, without having seen the data.
[00:06:03.820 --> 00:06:06.460]   So it was not aware of how the gene transfer works.
[00:06:06.460 --> 00:06:08.880]   This was not part of the training.
[00:06:08.880 --> 00:06:14.460]   So that was one verification by trying to replicate past results.
[00:06:14.460 --> 00:06:18.680]   But another one was to come up with a completely new hypothesis.
[00:06:18.680 --> 00:06:24.720]   So they used it for liver fibrosis target treatment discovery.
[00:06:24.720 --> 00:06:31.460]   And the AI co-scientists came up with target drugs that were actually efficient.
[00:06:31.460 --> 00:06:34.640]   in the lab, in wet lab, they were tested by experts.
[00:06:34.640 --> 00:06:40.840]   So it's not a science fiction, it's not like something in the future, it's actually happening now.
[00:06:40.840 --> 00:06:50.020]   And for me, what was inspiring about this is like, when we can make real discoveries in drug, drug discovery,
[00:06:50.020 --> 00:07:02.020]   like healthcare treatment, bacterial resistance, new type of materials, I think that can be accelerated doing it in real time with a scientist.
[00:07:02.020 --> 00:07:04.420]   This clicker doesn't work very well.
[00:07:04.420 --> 00:07:17.060]   So the vision was, instead of just doing it like on the data, like not sync, like async, and giving the researchers a plan based on the data that exists,
[00:07:17.060 --> 00:07:19.860]   what if we do it in real time, right?
[00:07:19.860 --> 00:07:26.620]   And we formulate this hypothesis based on the empirical data we're observing in the lab in real time.
[00:07:26.620 --> 00:07:31.060]   Or it could be like, when you're observing the robot, like breaking down in real time, right?
[00:07:31.060 --> 00:07:39.380]   So what motivated me was the results from the AI co-scientists, but also this vision from Silver and Sutton,
[00:07:39.380 --> 00:07:47.140]   which is, they just published this paper, Welcome to the Era of Experience, which is fantastic, it's very short, if you haven't read it, I highly recommend it.
[00:07:48.100 --> 00:08:00.100]   And they really talk about how we're going past the era of human data, where we're only indexing and making predictions based on the data sets that we created,
[00:08:00.100 --> 00:08:05.860]   and going to an era where the AI learns from the continuous environment in which we operate, right?
[00:08:05.860 --> 00:08:15.620]   And especially with multimodal, when we have real time data from images, from sensors, from audio streams, like that is possible.
[00:08:15.620 --> 00:08:25.620]   So, I hope I convinced you by now that real time matters, and I wanted to show you like how I use my system with longer experiments.
[00:08:25.620 --> 00:08:33.620]   So, you already saw like the chat image, and I had to find experiments that I could actually do at home.
[00:08:33.620 --> 00:08:37.620]   So, this is the overview of the system.
[00:08:37.620 --> 00:08:49.620]   So, it's a very simple React app, and it has like all the input sources that you've seen live in action, like the JackTag sensors via USB, different webcams,
[00:08:49.620 --> 00:08:56.620]   you can add as many webcams as you want, text input, it actually works with voice, I forgot to show that, you can talk to it and it talks back.
[00:08:56.620 --> 00:09:06.620]   And then, all of these like inputs become web hooks, and I can, I'm going to go into more detail how I optimize each and one of them.
[00:09:06.620 --> 00:09:13.620]   And that gets sent to a backend which communicates with the real-time API, I use the Gemini in this case.
[00:09:13.620 --> 00:09:25.620]   And, I had to, this is the information flow, so, you have the physical sensors, and for the JackTag, I'm actually using the web USB API.
[00:09:25.620 --> 00:09:35.620]   So, that goes to the frontend hooks, which gets pulled by the context assembly, and the context assembly actually is always checking what sort of modalities are present.
[00:09:35.620 --> 00:09:39.620]   Do we have text? Do we have voice? Do we have image? Do we have a chat history?
[00:09:39.620 --> 00:09:52.620]   And depending on what modalities are present, every single time I'm sending a message, it builds this context that gets sent to the API that gives me back a response.
[00:09:52.620 --> 00:09:56.620]   And, this is how the unified context assembly works.
[00:09:56.620 --> 00:10:10.620]   So, I guess like the very important piece here is how you're doing this context injection, depending on what sensors you have connected, and the type of experiment you're defining.
[00:10:10.620 --> 00:10:14.620]   And making this dynamic on the fly, like when you create the protocols.
[00:10:14.620 --> 00:10:23.620]   And, that was the, those were the ingredients for the code, now let's talk about the ingredients for the hardware.
[00:10:23.620 --> 00:10:31.620]   So, when I start doing the experiments, I had to list and put out all the parts that I had at my disposal.
[00:10:31.620 --> 00:10:43.620]   Kind of like cooking, right? So, it's like what can I make with all these sensors, like these are my inputs, these are my outputs, these are all my cameras, and all my cables, and how many boards I have.
[00:10:43.620 --> 00:10:46.620]   What sort of experiments could I create with that?
[00:10:46.620 --> 00:10:57.620]   And, I also had the constraint of doing experiments that I can measure in real time for this talk, and also that are safe for me to do at home, and I can travel with.
[00:10:57.620 --> 00:11:01.620]   Right? So, that really narrowed down the list of things that I could play with.
[00:11:01.620 --> 00:11:13.620]   So, one thing that I did was exploring crystallization, so you can see there like the crystals that I was growing, and that took longer, and I recorded the whole thing, and fermentation.
[00:11:13.620 --> 00:11:19.620]   And, let's dive into each and one of those. So, this was my lab in a box in our apartment in Tokyo.
[00:11:19.620 --> 00:11:24.620]   The people coming to the house were very confused every day.
[00:11:24.620 --> 00:11:28.620]   There was something, no explosions though, so that was good.
[00:11:28.620 --> 00:11:35.620]   So, for crystal growth, how many of you remember this from chemistry?
[00:11:35.620 --> 00:11:41.620]   Okay, okay, that's awesome. So, I don't need to go into great detail, but basically the principle is quite simple.
[00:11:41.620 --> 00:11:55.620]   Like, you oversaturate the solution by adding salt in hot water, and then you're like slowly cooling it off, and that creates this process, this nucleation, and the growth of crystals.
[00:11:55.620 --> 00:12:01.620]   Now, the trick in having beautiful crystals is how you do the cooling off, right? It needs to be gradual.
[00:12:01.620 --> 00:12:06.620]   You need to not move like the liquid or the object.
[00:12:06.620 --> 00:12:14.620]   So, the gradual cooling and the level of humidity is what gives you beautiful crystal formation.
[00:12:14.620 --> 00:12:23.620]   So, the main things we want to measure in this example is what are our curves for how fast the salt dissolves.
[00:12:23.620 --> 00:12:28.620]   Like, where are the places where the crystals are being formed? Those are called nucleation sites.
[00:12:28.620 --> 00:12:34.620]   What's the growth rate of the crystals? And that is affected by temperature concentration.
[00:12:34.620 --> 00:12:43.620]   Oh, yeah, I forgot to play this. This was like a sped up. So, this was a recording from the microscope.
[00:12:43.620 --> 00:12:51.620]   It's moving because it actually has a fan blowing cool air from ice, so that's why the camera is moving.
[00:12:51.620 --> 00:12:56.620]   That was how I was like cooling it off. But you can see the data in the sensors changing on the side.
[00:12:56.620 --> 00:13:00.620]   And this is like being recorded for an extended period of time.
[00:13:00.620 --> 00:13:09.620]   And then I get a CSV from the sensor values, and I can go and analyze that and kind of get a sense for like what happened.
[00:13:09.620 --> 00:13:17.620]   Was I cooling it off too fast or too slow? Were my crystal like growing or not?
[00:13:17.620 --> 00:13:19.620]   And then I also play with different samples.
[00:13:19.620 --> 00:13:24.620]   So, I had samples that I would put in the fridge and in the room and like a different temperature.
[00:13:24.620 --> 00:13:28.620]   So, I could also measure and have like control groups for that.
[00:13:28.620 --> 00:13:36.620]   And then once I have that CSV data, I can plot it, right? So, I can actually see what was my crystal growth rate.
[00:13:36.620 --> 00:13:42.620]   And if my temperature was like the best. And I can plot that for the different samples.
[00:13:42.620 --> 00:13:48.620]   And right now, I don't have that integrated live on the platform, but that's coming.
[00:13:48.620 --> 00:13:54.620]   So, I had to write a separate script to get the CSV data and create this visualizations.
[00:13:54.620 --> 00:14:03.620]   And the insight I got from this is that the crystal formation is actually not gradual, that it happens in bursts.
[00:14:03.620 --> 00:14:06.620]   So, that was something that surprised me when I looked at the data.
[00:14:06.620 --> 00:14:11.620]   So, once the critical saturation is reached, there's like sudden crystal growth formation.
[00:14:11.620 --> 00:14:15.620]   So, it's not like something that is kind of like slowly growing, but it grows in bursts.
[00:14:15.620 --> 00:14:22.620]   And here is like 40 minutes recording of the crystal growth, like super sped up.
[00:14:22.620 --> 00:14:27.620]   So, you can kind of see how the humidity and the temperature was changing.
[00:14:27.620 --> 00:14:33.620]   And the next one was, how am I doing on time? Because I have a lot of things.
[00:14:33.620 --> 00:14:34.620]   Okay.
[00:14:34.620 --> 00:14:37.620]   I might skip over fermentation, just in interest of time.
[00:14:37.620 --> 00:14:49.620]   But I'm sure all of you have dealt with fermentation in some shape or form, even if it was liquid, having to benefit the end result.
[00:14:49.620 --> 00:15:04.620]   But the insight here is to actually control how much salt and sugar we put into the different dough and then measure, and then also change the temperature and measure the growth rate and the CO2.
[00:15:04.620 --> 00:15:07.620]   And that was the fermentation.
[00:15:07.620 --> 00:15:12.620]   And I also have like a sped up recording of the data collection.
[00:15:12.620 --> 00:15:20.620]   And I already showed you the recamera and the fact that it's mobile and it can track objects.
[00:15:20.620 --> 00:15:22.620]   This is the education version.
[00:15:22.620 --> 00:15:33.620]   If you want to play with some of these things and just kind of do your own experiments, please like the lab mine that I showed you is not deployed yet, but it will be and the code will be open source.
[00:15:33.620 --> 00:15:34.620]   But this you can play with.
[00:15:34.620 --> 00:15:41.620]   You need to put your own API, but it runs on the phone and you can test the camera for now.
[00:15:41.620 --> 00:15:46.620]   And if you have a micro bit or you want to connect mine, you're welcome to try it.
[00:15:46.620 --> 00:15:49.620]   And let me know if the QR doesn't work.
[00:15:49.620 --> 00:15:55.620]   And yeah, this this is a version kind of like for to teach it to kids.
[00:15:55.620 --> 00:16:12.620]   And I wanted to end by talking a little bit about the open source ecosystem that can support this type of initiative to go beyond the demo and kind of like a cool experimentation to a real real solution for scientists and builders.
[00:16:12.620 --> 00:16:30.620]   So there's an entire open source ecosystem for recreating all the lab equipment, but then also for creating machines that can support the automation of pipetting and like doing all the analysis that you need to do in a lab and all the manipulation that you need to do in a lab.
[00:16:30.620 --> 00:16:35.620]   The Jubilee motion platform, it's actually coming from University of Washington where I did my PhD.
[00:16:35.620 --> 00:16:54.620]   It's open source and there is an open bio reactor and there's actually a workshop that just took place in April at UW where they had people for a week hacking on creating different solutions for automating scientific experiments in the lab.
[00:16:54.620 --> 00:17:05.620]   So anything from like droplet manipulation to robot handling liquids and mixing like vials and things like that and other application with Jubilee.
[00:17:05.620 --> 00:17:07.620]   So definitely check them out.
[00:17:07.620 --> 00:17:25.620]   And for the future, and this is my last slide, you can imagine that based on the samples that we're collecting from this cameras and sensors and voice, it's much easier to create simulations.
[00:17:25.620 --> 00:17:36.620]   So we don't need to be limited by the experiments we're doing in real life, but those experiments that we're doing in real life are going to inform realistic simulations, right?
[00:17:36.620 --> 00:17:54.620]   So I could actually create a simulation of my crystal growth, but more useful stuff right like bacteria colony growth and run those simulations with the lab conditions and then identify what are the best conditions for the experiment and create those conditions in the real life.
[00:17:54.620 --> 00:18:00.620]   So very excited about integrating simulation and I think that's where the this is going.
[00:18:00.620 --> 00:18:08.620]   So that was me if you want to read more about my projects and paper and all the open source projects.
[00:18:08.620 --> 00:18:10.620]   I do a lot of work in education as well.
[00:18:10.620 --> 00:18:11.620]   It's all on my website.
[00:18:11.620 --> 00:18:20.620]   And as Ben mentioned this morning, we are going to do an AI education summit and very excited about that.
[00:18:20.620 --> 00:18:26.620]   Some of you who saw my talk like in New York or last year know how much how passionate I am about about education.
[00:18:26.620 --> 00:18:30.620]   So I hope you can join us for the summit.
[00:18:30.620 --> 00:18:34.620]   I really appreciate you coming to the talk today and I'll be around.
[00:18:34.620 --> 00:18:35.620]   Thank you so much.
[00:18:35.620 --> 00:18:36.620]   Thank you.
[00:18:36.620 --> 00:18:36.620]   Thank you.
[00:18:36.620 --> 00:18:41.320]   We'll see you next time.

