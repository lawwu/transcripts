
[00:00:00.000 --> 00:00:03.120]   Okay, today I'm talking with Robert Martin, who needs no introduction.
[00:00:03.120 --> 00:00:05.520]   So let's begin with talking about the future of programming.
[00:00:05.520 --> 00:00:09.920]   Will GPT-25 be able to automate programming?
[00:00:09.920 --> 00:00:11.600]   Will I not have a job in 25 years?
[00:00:11.600 --> 00:00:14.560]   What is GPT-25?
[00:00:14.560 --> 00:00:15.120]   What is that?
[00:00:15.120 --> 00:00:19.360]   GPT-3 is the program that OpenAI just released.
[00:00:19.360 --> 00:00:22.720]   And it seems to be able to do some basic, make some basic methods,
[00:00:22.720 --> 00:00:24.080]   like making a palindrome.
[00:00:24.080 --> 00:00:27.920]   Because they just did deep learning over a bunch of GitHub repositories.
[00:00:27.920 --> 00:00:30.400]   So is the future of AI basically going to be able to automate programming?
[00:00:30.400 --> 00:00:31.620]   No.
[00:00:31.620 --> 00:00:35.920]   Pretty straightforward answer.
[00:00:35.920 --> 00:00:38.000]   There's a fundamental reason behind this.
[00:00:38.000 --> 00:00:43.920]   In order to finally replicate programming,
[00:00:43.920 --> 00:00:47.520]   if you wanted a machine that could program like a human,
[00:00:47.520 --> 00:00:50.400]   that machine would have to have human sentience.
[00:00:50.400 --> 00:00:53.920]   And we are very, very far away from that kind of a machine.
[00:00:53.920 --> 00:00:56.400]   Why would we need human sentience?
[00:00:57.360 --> 00:01:04.800]   Because someone has to specify the way the program is going to work.
[00:01:04.800 --> 00:01:09.280]   And that specification is, in fact, the program.
[00:01:09.280 --> 00:01:12.800]   No other specification will suffice.
[00:01:12.800 --> 00:01:18.960]   So a business user comes along and he creates a rough specification,
[00:01:18.960 --> 00:01:23.920]   but is depending on the human intuition and the human intelligence
[00:01:23.920 --> 00:01:27.760]   of the programmers to fill in all the horrible little blanks
[00:01:27.760 --> 00:01:31.600]   that the business person omitted.
[00:01:31.600 --> 00:01:35.760]   We programmers are detail managers.
[00:01:35.760 --> 00:01:37.520]   We deal with all the mess.
[00:01:37.520 --> 00:01:46.240]   We're the ones who deal with the fact that text files sometimes terminate lines with backslash n,
[00:01:46.240 --> 00:01:50.480]   but sometimes terminate lines with backslash n, backslash r.
[00:01:50.480 --> 00:01:56.240]   For reasons that go back 50 years because of teletypes and Unix and DOS and all this crap.
[00:01:56.240 --> 00:01:59.760]   And we're the ones writing the dumb little if statements
[00:01:59.760 --> 00:02:05.520]   to deal with the bizarre little exceptions that no business person wants to even think about.
[00:02:05.520 --> 00:02:14.400]   If we tried to make a deep learning machine that could deal with all that stuff,
[00:02:14.400 --> 00:02:19.280]   we would wind up with a HAL 9000, something that has human intelligence.
[00:02:19.280 --> 00:02:25.200]   And we are so far away from that, that it does not concern me in the slightest
[00:02:25.200 --> 00:02:30.480]   that some deep learning machine will eventually take over all the programmers' jobs.
[00:02:30.480 --> 00:02:32.480]   I'm happy to hear that then.
[00:02:32.480 --> 00:02:37.040]   But how about this potential, which is that the development environments
[00:02:37.040 --> 00:02:40.000]   and the tools that programmers use will become so advanced,
[00:02:40.000 --> 00:02:44.320]   it'll be almost like a symbiotic pair programming kind of assignment
[00:02:44.320 --> 00:02:47.520]   where you're working with the machine to write the code
[00:02:47.520 --> 00:02:49.120]   instead of just like writing it on the machine.
[00:02:49.120 --> 00:02:50.160]   Sure.
[00:02:50.160 --> 00:02:54.880]   I mean, we've already had that for the entire span of programming.
[00:02:54.880 --> 00:02:55.760]   We've been doing that.
[00:02:55.760 --> 00:02:59.840]   I mean, the original programs were written in binary, right?
[00:02:59.840 --> 00:03:04.720]   So Alan Turing, working on the automated computing engine,
[00:03:04.720 --> 00:03:09.600]   was literally writing things in binary because there were no languages.
[00:03:09.600 --> 00:03:11.760]   And then eventually we made an assembler.
[00:03:11.760 --> 00:03:16.080]   Can you imagine the benefit of an assembler over binary?
[00:03:16.080 --> 00:03:20.720]   All that horrible binary math that you had to do, you don't have to do anymore.
[00:03:20.720 --> 00:03:23.280]   And you can write your code in symbolic form.
[00:03:23.280 --> 00:03:25.600]   That's already a huge advantage.
[00:03:25.600 --> 00:03:30.240]   And then along comes John Bacchus with the Fortran spec in 1953.
[00:03:30.240 --> 00:03:34.240]   And what a huge advantage that was over assembly language.
[00:03:34.240 --> 00:03:36.320]   ALGOL came along pretty quickly.
[00:03:36.320 --> 00:03:41.680]   By 1966, you've got Ola Johan Dahl and Christian Nygaard inventing objects.
[00:03:41.680 --> 00:03:47.520]   This is 20 years after Alan Turing was doing binary programming.
[00:03:47.520 --> 00:03:50.240]   You've got the first object-oriented language.
[00:03:50.240 --> 00:03:53.040]   C comes along in '68, two years later.
[00:03:53.040 --> 00:03:56.000]   C++ comes along 12 years after that.
[00:03:56.000 --> 00:04:05.280]   And we've got this massive progression of incredible amounts of help to the programmer.
[00:04:05.280 --> 00:04:10.000]   Then in the late '90s, we start getting this wild stuff in our tools,
[00:04:10.000 --> 00:04:16.480]   the IntelliSense and the refactoring tools and the inspectors and the duplication finders.
[00:04:16.480 --> 00:04:24.080]   So a modern IDE is a treasure trove of tools that allow a programmer to do
[00:04:24.080 --> 00:04:28.880]   immensely more complex things than we used to be able to do.
[00:04:28.880 --> 00:04:36.720]   So yes, I hope that machine learning continues to make our tools more powerful.
[00:04:36.720 --> 00:04:44.400]   But that will never alleviate the need for the programmer to be there and supervise those tools.
[00:04:44.400 --> 00:04:45.200]   I'm a pilot.
[00:04:45.200 --> 00:04:46.320]   I fly a plane.
[00:04:46.320 --> 00:04:48.480]   The plane has a beautiful autopilot.
[00:04:48.480 --> 00:04:53.600]   I can turn it on, and the plane will fly itself all the way to my destination.
[00:04:53.600 --> 00:04:58.000]   And I watch that thing like a hawk, because it's a machine.
[00:04:58.000 --> 00:05:01.520]   And it's going to do the wrong thing at exactly the wrong time.
[00:05:01.520 --> 00:05:04.240]   So I sit there, and I watch that autopilot.
[00:05:04.240 --> 00:05:08.720]   And every time it's supposed to do something, I make sure it does that thing.
[00:05:08.720 --> 00:05:10.320]   I'm still in charge.
[00:05:10.320 --> 00:05:10.880]   It's not.
[00:05:10.880 --> 00:05:18.080]   But once you get these advanced tools, will the future of programming just
[00:05:18.080 --> 00:05:21.440]   look incredibly different from what programming machines like now?
[00:05:21.440 --> 00:05:26.960]   You've written about how the way that Turing wrote the first programs is
[00:05:26.960 --> 00:05:29.200]   not that dissimilar to how we write programs now.
[00:05:29.200 --> 00:05:32.080]   Is that sort of continuity something we should expect in the future?
[00:05:32.080 --> 00:05:34.880]   Or is the interface going to completely get modified?
[00:05:34.880 --> 00:05:39.760]   I mean, the interface has been completely modified since Turing.
[00:05:39.760 --> 00:05:45.600]   But the act of programming is still sequence selection and iteration.
[00:05:45.600 --> 00:05:46.160]   Yes.
[00:05:46.160 --> 00:05:51.920]   Programmers still arrange programs in little units of sequence selection and iteration.
[00:05:51.920 --> 00:05:55.120]   Will we continue to do that?
[00:05:55.120 --> 00:05:57.600]   I think that's a very interesting question.
[00:05:58.240 --> 00:06:02.560]   And we've had some hints about other possibilities.
[00:06:02.560 --> 00:06:07.680]   If you've ever programmed in Prolog, for example, you see that the sequence
[00:06:07.680 --> 00:06:13.920]   selection and iteration gets transformed into something else equally detailed.
[00:06:13.920 --> 00:06:16.400]   But it's not sequence selection iteration anymore.
[00:06:16.400 --> 00:06:18.720]   It's declarative truth.
[00:06:18.720 --> 00:06:22.640]   I'm not going to go deep into Prolog.
[00:06:22.640 --> 00:06:27.600]   But if you want to bend your brain around a concept that you're not familiar with--
[00:06:27.600 --> 00:06:29.360]   study Prolog for a couple of days.
[00:06:29.360 --> 00:06:37.680]   But in the end, are we going to get to a situation similar to my autopilot,
[00:06:37.680 --> 00:06:45.440]   where I can set up some parameters in a tool and then watch the tool as it starts to develop
[00:06:45.440 --> 00:06:46.320]   a program?
[00:06:46.320 --> 00:06:52.400]   And then I, as the programmer, watching what it's doing, start tweaking parameters around
[00:06:52.400 --> 00:06:54.880]   the outside, saying, no, no, not that, not that.
[00:06:54.880 --> 00:06:55.600]   This, this.
[00:06:55.600 --> 00:06:57.120]   Go in this direction.
[00:06:57.120 --> 00:06:58.240]   Will I be able to do that?
[00:06:58.240 --> 00:07:05.440]   Yeah, I'd say that's probably very likely sometime in the next couple of decades, that
[00:07:05.440 --> 00:07:15.600]   the way we program computers will be more like training a dog, rewarding it in the right
[00:07:15.600 --> 00:07:17.840]   circumstances and punishing it in the others.
[00:07:17.840 --> 00:07:20.800]   We'll see how that goes.
[00:07:20.800 --> 00:07:21.760]   We'll see how that goes.
[00:07:21.760 --> 00:07:27.440]   But under no circumstances will there not be a programmer involved, someone with the
[00:07:27.440 --> 00:07:33.040]   same skills that you and I have today, someone who is deeply analytical and a detail manager
[00:07:33.040 --> 00:07:38.800]   and is watching out for all the dumb little gotchas that the machine has no clue and no
[00:07:38.800 --> 00:07:40.000]   strategy for addressing.
[00:07:40.000 --> 00:07:42.000]   I'm happy to hear that.
[00:07:42.000 --> 00:07:45.600]   Are teams of programmers less creative than individuals programming alone?
[00:07:47.200 --> 00:07:53.360]   Teams of programmers are far more creative than programmers working alone, but they also
[00:07:53.360 --> 00:07:55.200]   go in many different directions at once.
[00:07:55.200 --> 00:07:58.480]   So they need, there's, you need a leader.
[00:07:58.480 --> 00:08:00.240]   A team has to have a leader.
[00:08:00.240 --> 00:08:05.760]   One of the problems that we have had in the agile community is that there's a certain
[00:08:05.760 --> 00:08:14.240]   faction of agilists who believe there should not be a leader, that the entire team is homogenous
[00:08:14.240 --> 00:08:19.680]   and equal in a mass egalitarian society where everyone is the same.
[00:08:19.680 --> 00:08:22.560]   And my experience is that that doesn't work at all.
[00:08:22.560 --> 00:08:24.880]   A team needs a leader.
[00:08:24.880 --> 00:08:28.800]   And then the team is generating ideas, just like crazy.
[00:08:28.800 --> 00:08:30.480]   The team generates ideas.
[00:08:30.480 --> 00:08:35.760]   And the leader is the one who acts like, you know, Jean-Luc Picard, this one, not that
[00:08:35.760 --> 00:08:36.260]   one.
[00:08:36.260 --> 00:08:38.900]   Interesting.
[00:08:38.900 --> 00:08:43.440]   Now, let's talk about educating future programmers.
[00:08:43.440 --> 00:08:48.800]   I watched an interview with Linus Torvalds, where he was expressing concern that the complexity
[00:08:48.800 --> 00:08:53.040]   of the ecosystem has grown so much that he's not sure that somebody in his position could
[00:08:53.040 --> 00:08:54.640]   come up with such a grand innovation.
[00:08:54.640 --> 00:09:00.240]   They're just not a rock to hold on to, to like get that level of expertise at such early
[00:09:00.240 --> 00:09:00.880]   in age.
[00:09:00.880 --> 00:09:04.640]   Or do you have that kind of concern that the ecosystem has developed so much that it's
[00:09:04.640 --> 00:09:07.680]   harder for young people to kind of get to the frontier?
[00:09:10.480 --> 00:09:18.080]   It takes longer now because there's so much more cruft that you have to wade through.
[00:09:18.080 --> 00:09:23.440]   When I was a young programmer, the machine that I was working on was initially a PDP-8.
[00:09:23.440 --> 00:09:26.240]   I've got a little mock-up of a PDP-8 sitting right there.
[00:09:26.240 --> 00:09:30.560]   It must have blown through a power failure because it's not doing what I usually have
[00:09:30.560 --> 00:09:31.060]   it do.
[00:09:31.060 --> 00:09:33.440]   But that was a very simple machine.
[00:09:33.440 --> 00:09:38.000]   It was a 4K machine, 12-bit word, half megahertz clock rate.
[00:09:39.040 --> 00:09:40.240]   There were no libraries.
[00:09:40.240 --> 00:09:41.200]   There were no frameworks.
[00:09:41.200 --> 00:09:41.920]   There were no nothing.
[00:09:41.920 --> 00:09:46.000]   If something executed in that machine, it's because you wrote it.
[00:09:46.000 --> 00:09:53.760]   A programmer in those days could know everything about the computer.
[00:09:53.760 --> 00:09:54.800]   It wouldn't take very long.
[00:09:54.800 --> 00:10:01.920]   It would take a matter of months to eventually get to the point where you just knew everything.
[00:10:01.920 --> 00:10:03.280]   Those days are long gone.
[00:10:03.840 --> 00:10:09.600]   It's now not feasible to point at a computer system and say, well, I know everything about
[00:10:09.600 --> 00:10:11.440]   my MacBook Pro.
[00:10:11.440 --> 00:10:12.320]   No, you don't.
[00:10:12.320 --> 00:10:15.840]   It's just too much crud in there.
[00:10:15.840 --> 00:10:26.240]   So there is a much longer learning curve to become as adept at programming as those of
[00:10:26.240 --> 00:10:31.360]   us who started 50 years ago and had to climb that tree while we were working.
[00:10:32.320 --> 00:10:37.680]   On the other hand, it is not like being a doctor yet.
[00:10:37.680 --> 00:10:42.080]   If you want to become a doctor, you must specialize.
[00:10:42.080 --> 00:10:45.840]   There's no way to go forward in medicine without specializing.
[00:10:45.840 --> 00:10:50.800]   Even a general practitioner is a specialist nowadays because they have to exclude all
[00:10:50.800 --> 00:10:52.960]   this other stuff they cannot do.
[00:10:52.960 --> 00:10:55.280]   And we are not there yet.
[00:10:55.280 --> 00:11:04.880]   A programmer, over a period of five years, say, can become adept at GUI programming,
[00:11:04.880 --> 00:11:09.840]   middleware programming, database programming, telecommunications programming, threads.
[00:11:09.840 --> 00:11:17.680]   All of this stuff can become well-heeled inside of a five-year experience programmer.
[00:11:17.680 --> 00:11:19.040]   Ten years, even better, right?
[00:11:19.760 --> 00:11:26.880]   So it's not like being a doctor or a lawyer where you absolutely must specialize and narrow
[00:11:26.880 --> 00:11:29.200]   your focus down to a razor.
[00:11:29.200 --> 00:11:32.800]   Programmers can still be real general practitioners.
[00:11:32.800 --> 00:11:34.420]   Gotcha.
[00:11:34.420 --> 00:11:37.360]   Let's talk about the factories which manufacture programmers.
[00:11:37.360 --> 00:11:40.400]   Universities.
[00:11:40.400 --> 00:11:45.040]   If you had to change one thing about how computer science is taught at universities, what would
[00:11:45.040 --> 00:11:46.560]   it be and how would you change it?
[00:11:46.560 --> 00:11:48.560]   I would not teach it at universities.
[00:11:48.560 --> 00:11:49.280]   Really?
[00:11:49.280 --> 00:11:51.360]   I don't think it's a university kind of thing.
[00:11:51.360 --> 00:11:56.000]   Again, this is a discipline that is only 70 years old.
[00:11:56.000 --> 00:11:58.400]   There is not that much in it.
[00:11:58.400 --> 00:12:07.840]   There's far more cruft in it than there is actual knowledge, actual solid teachable knowledge.
[00:12:07.840 --> 00:12:16.720]   And the vast majority of the skills that a programmer needs are trade-like skills, not
[00:12:16.720 --> 00:12:21.600]   educational-based skills, or not university kinds of skills.
[00:12:21.600 --> 00:12:24.960]   If you want to be an electrical engineer, you have to go to university.
[00:12:24.960 --> 00:12:27.840]   There's just a tremendous amount of stuff you've got to learn there.
[00:12:27.840 --> 00:12:31.520]   If you want to be a doctor, you've got to go to a hell of a lot more than a university.
[00:12:31.520 --> 00:12:39.280]   But to be a programmer, and a good programmer, this is a skill that you can learn at a community
[00:12:39.280 --> 00:12:44.720]   college or in a trade school over a period of a year, maybe a year and a half.
[00:12:44.720 --> 00:12:49.440]   Get a good job with some mentors and learn it that route.
[00:12:49.440 --> 00:12:50.560]   Learn it that way.
[00:12:50.560 --> 00:12:56.720]   I think that is a much better way for young programmers to become programmers.
[00:12:56.720 --> 00:12:58.000]   Not go to university.
[00:12:58.000 --> 00:12:59.920]   It's not worth a four-year education.
[00:12:59.920 --> 00:13:04.960]   The amount of money you'll spend on that four-year education is not going to be worth
[00:13:04.960 --> 00:13:06.800]   the programming knowledge you get.
[00:13:06.800 --> 00:13:09.120]   Now, it might be worth a whole bunch of other knowledge.
[00:13:09.120 --> 00:13:11.920]   It's not worth the programming knowledge you're going to get.
[00:13:11.920 --> 00:13:15.920]   If you want to be a computer programmer and you're just getting out of high school,
[00:13:15.920 --> 00:13:21.280]   I'd be looking at a trade program, some kind of a trade school or a boot camp or something
[00:13:21.280 --> 00:13:21.760]   like that.
[00:13:21.760 --> 00:13:25.040]   Some of these boot camps are not very good, so I'd be real careful about that.
[00:13:25.040 --> 00:13:32.400]   But some kind of program like that where you can spend a few months learning a language
[00:13:32.400 --> 00:13:39.280]   like Java or C# or something like that, and then move on to a job which has a mentorship
[00:13:39.280 --> 00:13:40.560]   or an apprenticeship program.
[00:13:41.680 --> 00:13:45.840]   I'm in university studying computer science right now, so I wish I heard that two years
[00:13:45.840 --> 00:13:46.080]   ago.
[00:13:46.080 --> 00:13:52.240]   But in any case, can you explain to me how it is, then, that we have an industry where
[00:13:52.240 --> 00:13:56.240]   to get in is not that hard in terms of just the education you need, at least.
[00:13:56.240 --> 00:13:58.160]   Maybe there's traits that are rare.
[00:13:58.160 --> 00:13:59.520]   But getting in is not that hard.
[00:13:59.520 --> 00:14:02.000]   The demand keeps growing very fast.
[00:14:02.000 --> 00:14:05.920]   How is it that people are still becoming corporate lawyers when there's a job that pays
[00:14:05.920 --> 00:14:09.280]   really well that doesn't require that much education to get that you can get into real
[00:14:09.280 --> 00:14:10.080]   fast?
[00:14:10.080 --> 00:14:12.240]   What explains this inequilibria?
[00:14:12.240 --> 00:14:18.080]   I'm going to try and interpret that question carefully.
[00:14:18.080 --> 00:14:25.920]   There are-- when I was a young programmer, I thought anybody could do this.
[00:14:25.920 --> 00:14:28.160]   That was my fundamental hypothesis.
[00:14:28.160 --> 00:14:29.040]   Anybody could learn this.
[00:14:29.040 --> 00:14:30.080]   It's ones and zeros.
[00:14:30.080 --> 00:14:32.000]   I mean, how hard is ones and zeros?
[00:14:32.000 --> 00:14:39.360]   It took me a very long time and a number of very expensive mistakes, hiring people, to
[00:14:39.360 --> 00:14:41.600]   realize that not everybody can do this.
[00:14:41.600 --> 00:14:49.360]   And in fact, the number of people who can do this is much smaller than I had at first
[00:14:49.360 --> 00:14:49.920]   thought.
[00:14:49.920 --> 00:14:52.480]   It is not a rare talent.
[00:14:52.480 --> 00:14:56.320]   But it is not a massively common talent, either.
[00:14:56.320 --> 00:15:00.400]   And the talent requires a number of things.
[00:15:00.400 --> 00:15:04.640]   There's this need to be deeply analytical.
[00:15:05.680 --> 00:15:12.960]   And there is this need to be able to focus on very narrow things for very long times.
[00:15:12.960 --> 00:15:16.640]   And there are people who simply cannot do that.
[00:15:16.640 --> 00:15:19.360]   It's just not in their mental wiring.
[00:15:19.360 --> 00:15:20.320]   They cannot do it.
[00:15:20.320 --> 00:15:24.160]   But some programmers can, or some people can.
[00:15:24.160 --> 00:15:25.840]   And they can become programmers.
[00:15:25.840 --> 00:15:29.920]   So you ask the question, why are we putting out corporate lawyers?
[00:15:29.920 --> 00:15:33.440]   Well, they have a very different kind of interest and mindset.
[00:15:33.440 --> 00:15:38.800]   Although they're analytical and they can focus, they focus on different kinds of things.
[00:15:38.800 --> 00:15:46.320]   We programmers focus on Boolean decisions, ones and zeros, blacks and whites.
[00:15:46.320 --> 00:15:49.760]   Lawyers, they're looking at people.
[00:15:49.760 --> 00:15:52.960]   People are much more complicated than computers.
[00:15:52.960 --> 00:15:54.560]   It's a very different kind of mindset.
[00:15:54.560 --> 00:16:00.000]   If you had to estimate, what percent of the population do you think has the repertoire
[00:16:00.000 --> 00:16:01.360]   necessary to become a programmer?
[00:16:02.160 --> 00:16:04.800]   - Ooh, tough question to ask.
[00:16:04.800 --> 00:16:12.960]   What percentage of the human population has the aptitude for programming?
[00:16:12.960 --> 00:16:18.560]   I think there are a hundred million programmers in the world right now.
[00:16:18.560 --> 00:16:21.040]   That's just a guess, but I think that's about right.
[00:16:21.040 --> 00:16:26.320]   And that would be what, 1/80 of the population?
[00:16:28.320 --> 00:16:28.960]   - Mm-hmm.
[00:16:28.960 --> 00:16:34.320]   - So we've got some demonstration that at least 1% of the population has this skill,
[00:16:34.320 --> 00:16:36.560]   close to 1%.
[00:16:36.560 --> 00:16:40.800]   Maybe it's as high as 5% to 10%.
[00:16:40.800 --> 00:16:41.520]   Could be that high.
[00:16:41.520 --> 00:16:43.040]   Could be.
[00:16:43.040 --> 00:16:49.280]   I know I've had a number of experiences trying to teach people to program
[00:16:49.280 --> 00:16:53.280]   and not being able to get through after about 10 minutes.
[00:16:53.280 --> 00:16:54.800]   You know, their brain just goes somewhere else.
[00:16:54.800 --> 00:16:56.960]   They can't do it.
[00:16:57.920 --> 00:17:05.840]   And that seems to be much more common than the other talent,
[00:17:05.840 --> 00:17:08.320]   which is where the person that you're trying to teach
[00:17:08.320 --> 00:17:11.760]   gets excited and focuses in with you.
[00:17:11.760 --> 00:17:13.520]   And that is much rarer.
[00:17:13.520 --> 00:17:14.560]   - Mm-hmm.
[00:17:14.560 --> 00:17:20.480]   So if going to university is not the best idea for somebody wanting to become a programmer,
[00:17:20.480 --> 00:17:23.440]   if somebody wants to solve highly technical problems,
[00:17:23.440 --> 00:17:26.720]   they think, "Well, it seems like I would need a good education to be able to do this."
[00:17:26.720 --> 00:17:28.320]   Maybe I need to know a lot of math.
[00:17:28.320 --> 00:17:32.320]   Would you recommend then they go to university and get a math degree
[00:17:32.320 --> 00:17:33.920]   so that they have the technical background?
[00:17:33.920 --> 00:17:36.000]   - I used to think that was true.
[00:17:36.000 --> 00:17:40.960]   And I actually hired someone because they got a master's degree in mathematics.
[00:17:40.960 --> 00:17:43.760]   And I thought, "Okay, you know, master's degree in mathematics,
[00:17:43.760 --> 00:17:45.120]   you're going to be able to think this way.
[00:17:45.120 --> 00:17:46.640]   You're going to be able to focus.
[00:17:46.640 --> 00:17:47.600]   You're going to be able to do this."
[00:17:47.600 --> 00:17:53.760]   And I found myself very disappointed with the way this person became a programmer.
[00:17:53.760 --> 00:17:55.280]   Now, eventually they succeeded.
[00:17:56.080 --> 00:17:59.520]   But it was not the quick success that I had expected.
[00:17:59.520 --> 00:18:05.920]   It took a lot of working and a lot of failure to get this person's mindset
[00:18:05.920 --> 00:18:11.600]   into the programming mindset as opposed to the mathematics mindset.
[00:18:11.600 --> 00:18:13.920]   So there's a difference there.
[00:18:13.920 --> 00:18:17.680]   Now, is it worthwhile knowing mathematics as a programmer?
[00:18:17.680 --> 00:18:20.240]   Yeah, in certain fields, it certainly is.
[00:18:20.240 --> 00:18:23.600]   I mean, if you're going to be doing any kind of physics work,
[00:18:24.160 --> 00:18:27.360]   you're going to be writing the code for a particle accelerator,
[00:18:27.360 --> 00:18:29.920]   probably want a little bit of math, right?
[00:18:29.920 --> 00:18:35.200]   If you're going to be doing really deep, interesting financial stuff,
[00:18:35.200 --> 00:18:38.960]   going to be one of the quants in a stock exchange or something like that,
[00:18:38.960 --> 00:18:42.000]   probably need to know a little bit of good math, right?
[00:18:42.000 --> 00:18:48.160]   On the other hand, if you're a run-of-the-mill programmer writing code for,
[00:18:48.160 --> 00:18:50.320]   oh, I don't know, maybe...
[00:18:50.320 --> 00:18:51.280]   - That's not nice.
[00:18:52.080 --> 00:18:52.580]   - Yeah.
[00:18:52.580 --> 00:18:56.400]   Siri just yelled at me for saying run-of-the-mill.
[00:18:56.400 --> 00:19:02.320]   If you're going to be writing the code that runs inside my refrigerator,
[00:19:02.320 --> 00:19:06.400]   for example, the machine control software inside my refrigerator,
[00:19:06.400 --> 00:19:10.320]   probably you don't need a tremendous amount of math for that.
[00:19:10.320 --> 00:19:14.000]   A good high school algebra would probably do enough.
[00:19:14.000 --> 00:19:16.720]   Maybe a little bit of pre-calc, probably enough.
[00:19:16.720 --> 00:19:20.880]   I don't think you need deep math theory for that kind of stuff.
[00:19:20.880 --> 00:19:24.000]   Even the guys who do game work,
[00:19:24.000 --> 00:19:26.160]   even though that's pretty heavy physics stuff,
[00:19:26.160 --> 00:19:29.360]   all that physics stuff is already in the physics engines.
[00:19:29.360 --> 00:19:32.160]   So most of the time there, I think you don't need all that math.
[00:19:32.160 --> 00:19:39.040]   Is it important for a programmer to know the business they're going into?
[00:19:39.040 --> 00:19:41.440]   And the answer to that is yes, right?
[00:19:41.440 --> 00:19:43.280]   If you're going into an insurance business,
[00:19:43.280 --> 00:19:44.800]   you better know the insurance business.
[00:19:44.800 --> 00:19:48.000]   If you're going to be a programmer in the telephone company,
[00:19:48.000 --> 00:19:49.920]   you better understand the telephone company.
[00:19:50.640 --> 00:19:56.000]   And so much of the early education of a programmer
[00:19:56.000 --> 00:19:58.720]   in a mentorship program at a company
[00:19:58.720 --> 00:20:01.920]   is really about the company and not about programming.
[00:20:01.920 --> 00:20:05.520]   This is our field of expertise.
[00:20:05.520 --> 00:20:06.560]   This is what we do.
[00:20:06.560 --> 00:20:08.720]   This is what an insurance claim is.
[00:20:08.720 --> 00:20:10.320]   This is what all these other things are.
[00:20:10.320 --> 00:20:11.760]   This is how we think about it.
[00:20:11.760 --> 00:20:19.200]   So that you can effectively apply the business knowledge
[00:20:20.160 --> 00:20:21.920]   to the problem of writing code.
[00:20:21.920 --> 00:20:23.760]   And that brings us full circle.
[00:20:23.760 --> 00:20:26.400]   Because you had asked me originally and you'd said,
[00:20:26.400 --> 00:20:29.040]   "Well, aren't we going to eventually have these machine learning things
[00:20:29.040 --> 00:20:30.000]   that can write code?"
[00:20:30.000 --> 00:20:32.960]   And the answer to that is probably not
[00:20:32.960 --> 00:20:37.520]   because it's the intuitive knowledge of knowing the business you're in
[00:20:37.520 --> 00:20:41.040]   that allows you to make these low-level decisions
[00:20:41.040 --> 00:20:42.560]   that the business people don't want to make.
[00:20:42.560 --> 00:20:48.400]   From that, does it follow that if you want to become a very competent programmer,
[00:20:48.400 --> 00:20:50.880]   you should try to specialize in a specific industry
[00:20:50.880 --> 00:20:53.680]   where the application of programming is best exercised?
[00:20:53.680 --> 00:20:57.600]   Or should you try to develop first a broad range of experience and expertise?
[00:20:57.600 --> 00:21:01.040]   Both, actually.
[00:21:01.040 --> 00:21:03.280]   So as you take on a job,
[00:21:03.280 --> 00:21:07.040]   you want to specialize in the business that you're in
[00:21:07.040 --> 00:21:09.360]   for a period of N years,
[00:21:09.360 --> 00:21:11.600]   whatever N is, might be two, might be three.
[00:21:11.600 --> 00:21:14.320]   Probably that short though.
[00:21:14.320 --> 00:21:18.160]   And get to know that business.
[00:21:18.160 --> 00:21:21.520]   And then see if you can move to a different business domain
[00:21:21.520 --> 00:21:24.480]   and spend two or three years on that.
[00:21:24.480 --> 00:21:28.320]   And then try another business domain and spend two or three years in that.
[00:21:28.320 --> 00:21:31.840]   And by that time, you've got a nice broad business domain.
[00:21:31.840 --> 00:21:36.080]   And that will allow you to infer other business domains.
[00:21:36.080 --> 00:21:39.040]   Because business domains have similarities and differences.
[00:21:39.040 --> 00:21:42.160]   But once you've got three or four of them in your head,
[00:21:42.160 --> 00:21:43.440]   you can start to triangulate.
[00:21:43.440 --> 00:21:47.920]   Now, when you are considering hiring somebody as a programmer
[00:21:47.920 --> 00:21:49.360]   and they don't have a lot of experience,
[00:21:49.360 --> 00:21:52.160]   you can't just look for somebody to vouch for them.
[00:21:52.160 --> 00:21:54.960]   What is it that they can do to signal to you
[00:21:54.960 --> 00:21:56.640]   that they would become a competent programmer?
[00:21:56.640 --> 00:22:00.560]   That's a heck of an interesting question.
[00:22:00.560 --> 00:22:05.280]   And one that I've struggled with for a very long time now,
[00:22:05.280 --> 00:22:06.320]   a number of decades.
[00:22:06.320 --> 00:22:09.360]   And I have found no reliable test.
[00:22:09.360 --> 00:22:12.240]   I used to make people...
[00:22:12.240 --> 00:22:15.280]   So back when I thought it was math,
[00:22:15.840 --> 00:22:20.880]   I used to make people solve Newton's method for calculating a square root.
[00:22:20.880 --> 00:22:22.640]   I just draw it on the board.
[00:22:22.640 --> 00:22:24.240]   I draw a parabola on the board and say,
[00:22:24.240 --> 00:22:25.760]   "Okay, here's the slope.
[00:22:25.760 --> 00:22:27.360]   It's the derivative of the function.
[00:22:27.360 --> 00:22:28.880]   Now, come up with an algorithm."
[00:22:28.880 --> 00:22:31.520]   And I'd let them use any language they wanted.
[00:22:31.520 --> 00:22:34.640]   And I thought that was a pretty good approach.
[00:22:34.640 --> 00:22:38.320]   And then I found people that were very good at that,
[00:22:38.320 --> 00:22:40.800]   but could not do other things.
[00:22:40.800 --> 00:22:44.080]   Then I thought, "Okay, I'm going to describe
[00:22:44.080 --> 00:22:49.520]   the Siva-Veritasthenes, beautiful algorithm for finding prime numbers.
[00:22:49.520 --> 00:22:52.480]   I'm going to describe that in simple terms
[00:22:52.480 --> 00:22:55.280]   and have them write some pseudocode
[00:22:55.280 --> 00:22:58.160]   and show me that they can actually build a doubly nested loop."
[00:22:58.160 --> 00:23:02.000]   And that was also not reliable, although it was better.
[00:23:02.000 --> 00:23:03.760]   It was not reliable.
[00:23:03.760 --> 00:23:08.720]   So the conclusion I've come to now is that
[00:23:09.520 --> 00:23:11.440]   there is no simple test.
[00:23:11.440 --> 00:23:18.400]   What you need to do is spend a fair bit of time with someone
[00:23:18.400 --> 00:23:23.200]   and observe how well they learn over a period of time
[00:23:23.200 --> 00:23:25.360]   and how well they apply that learning,
[00:23:25.360 --> 00:23:26.880]   how well they can focus,
[00:23:26.880 --> 00:23:30.560]   how well they can deal with a problem analytically.
[00:23:30.560 --> 00:23:34.000]   And that period of time is probably weeks.
[00:23:35.120 --> 00:23:39.200]   So the kind of interviewing that I would prefer to do now...
[00:23:39.200 --> 00:23:42.320]   And by the way, I don't hire people anymore.
[00:23:42.320 --> 00:23:43.600]   I'm now just kind of me.
[00:23:43.600 --> 00:23:46.960]   But I know people who do hire people.
[00:23:46.960 --> 00:23:50.080]   And one of the ways that they do it
[00:23:50.080 --> 00:23:54.160]   is to ask them to join an apprenticeship program.
[00:23:54.160 --> 00:23:56.480]   And in that apprenticeship program,
[00:23:56.480 --> 00:24:01.360]   they will be given a series of ever greater challenges,
[00:24:01.360 --> 00:24:03.760]   not all of which are programming challenges.
[00:24:03.760 --> 00:24:05.680]   Some of them are writing challenges.
[00:24:05.680 --> 00:24:07.440]   Some of them are speaking challenges.
[00:24:07.440 --> 00:24:09.680]   Some of them are presentation challenges,
[00:24:09.680 --> 00:24:15.040]   but a sequence of ever increasing challenges.
[00:24:15.040 --> 00:24:17.680]   And then at the end of that,
[00:24:17.680 --> 00:24:21.360]   an assessment is made by everyone that they have talked to
[00:24:21.360 --> 00:24:23.360]   and they're offered a job or not.
[00:24:23.360 --> 00:24:24.400]   And in some cases,
[00:24:24.400 --> 00:24:27.360]   there's a stipend salary for that apprenticeship program.
[00:24:27.360 --> 00:24:28.400]   In other cases, there's not.
[00:24:28.400 --> 00:24:31.440]   - Hmm, interesting.
[00:24:31.440 --> 00:24:32.720]   Do you suspect that the traits
[00:24:32.720 --> 00:24:34.560]   that are required to become a programmer,
[00:24:34.560 --> 00:24:37.600]   these are developed in your childhood
[00:24:37.600 --> 00:24:39.120]   through the experiences you have in early life
[00:24:39.120 --> 00:24:40.640]   or maybe through high school and middle school?
[00:24:40.640 --> 00:24:42.240]   Or is it something that some people
[00:24:42.240 --> 00:24:44.240]   are probably just born with on some level?
[00:24:44.240 --> 00:24:46.800]   - It's hard to know.
[00:24:46.800 --> 00:24:52.960]   I think there's a certain amount of just neural wiring.
[00:24:52.960 --> 00:24:56.640]   You know, some character defect
[00:24:56.640 --> 00:24:58.400]   that causes you to be a programmer.
[00:24:58.400 --> 00:25:00.560]   But not all people have.
[00:25:01.280 --> 00:25:06.480]   However, I have seen people who were not at all interested,
[00:25:06.480 --> 00:25:10.080]   acquire the interest and acquire the talent
[00:25:10.080 --> 00:25:13.840]   at different stages of life.
[00:25:13.840 --> 00:25:15.920]   My son, for example,
[00:25:15.920 --> 00:25:18.960]   who is now a programmer and a very accomplished one,
[00:25:18.960 --> 00:25:22.160]   had showed no interest at all in early grade school.
[00:25:22.160 --> 00:25:24.560]   When I got interested, I was 12 years old, right?
[00:25:24.560 --> 00:25:26.320]   So I thought, oh, okay.
[00:25:26.320 --> 00:25:28.400]   Everybody's gonna be interested at 12.
[00:25:28.400 --> 00:25:30.480]   Now, my son didn't show any interest at all
[00:25:30.480 --> 00:25:35.520]   until he left home or close to leaving home,
[00:25:35.520 --> 00:25:37.680]   late high school, early university,
[00:25:37.680 --> 00:25:41.360]   and came back with this interest and skill.
[00:25:41.360 --> 00:25:46.640]   My daughter has just turned 30
[00:25:46.640 --> 00:25:48.960]   and is suddenly very interested
[00:25:48.960 --> 00:25:52.320]   and is acquiring a significant amount of skill.
[00:25:52.320 --> 00:25:56.000]   So I've seen this happen at different stages.
[00:25:56.000 --> 00:25:59.920]   The switch turns on and all of a sudden,
[00:25:59.920 --> 00:26:04.480]   they've got all the motivation and the focus energy
[00:26:04.480 --> 00:26:06.000]   and the analytical skill they need.
[00:26:06.000 --> 00:26:08.240]   So I don't know.
[00:26:08.240 --> 00:26:10.320]   You know, it's a deep mystery to me.
[00:26:10.320 --> 00:26:13.600]   - Are there advantages to learning this material
[00:26:13.600 --> 00:26:15.840]   and adopting these skills early in life?
[00:26:15.840 --> 00:26:18.000]   Or do you get a more mature perspective
[00:26:18.000 --> 00:26:19.360]   if you learn it later on in life?
[00:26:19.360 --> 00:26:23.280]   - Had you asked me that question 20 years ago,
[00:26:23.280 --> 00:26:26.400]   I would have said there's obviously an advantage
[00:26:26.400 --> 00:26:28.320]   to teaching young children.
[00:26:28.320 --> 00:26:30.240]   I mean, if you can get the young children
[00:26:30.240 --> 00:26:32.400]   immersed into computer as well,
[00:26:32.400 --> 00:26:33.760]   obviously they're going to turn
[00:26:33.760 --> 00:26:35.040]   into much better programmers.
[00:26:35.040 --> 00:26:38.320]   And I'm not so sure that's true now.
[00:26:38.320 --> 00:26:41.920]   So the counter examples
[00:26:41.920 --> 00:26:48.880]   are the vast number of programming toys
[00:26:48.880 --> 00:26:54.240]   and they span a huge period of time.
[00:26:54.240 --> 00:26:58.000]   So nowadays you've got things like Lego mind blocks
[00:26:58.000 --> 00:27:00.400]   and or Mindstorm.
[00:27:00.400 --> 00:27:02.880]   And you've got a whole bunch of other tools
[00:27:02.880 --> 00:27:06.720]   that try to encourage young people to become programmers.
[00:27:06.720 --> 00:27:09.520]   You know, kids that are 12, 13, 14.
[00:27:09.520 --> 00:27:12.720]   In the early days, we invented languages
[00:27:12.720 --> 00:27:15.200]   that would help young people become programmers.
[00:27:15.200 --> 00:27:17.360]   The logo language, for example,
[00:27:17.360 --> 00:27:20.640]   was all about driving a little mechanical turtle
[00:27:20.640 --> 00:27:23.040]   on the floor and letting it raise a pen
[00:27:23.040 --> 00:27:24.960]   and draw on a piece of paper.
[00:27:24.960 --> 00:27:28.240]   And kids, you know, they would issue it commands,
[00:27:28.240 --> 00:27:30.640]   go forward 10, turn right 90 degrees,
[00:27:30.640 --> 00:27:34.080]   go forward 10, drawing squares and circles on a paper.
[00:27:34.080 --> 00:27:39.040]   And what we found through all of these,
[00:27:39.040 --> 00:27:40.960]   through all this long period of time
[00:27:40.960 --> 00:27:44.240]   attempting to make tools that would appeal to children
[00:27:44.240 --> 00:27:50.080]   is that it did not have a profound effect.
[00:27:50.080 --> 00:27:51.840]   There's a whole bunch of children
[00:27:51.840 --> 00:27:53.440]   that would sit and drive the turtle around
[00:27:53.440 --> 00:27:54.960]   for a little while and then lose interest
[00:27:54.960 --> 00:28:00.480]   and never develop the more interesting skills
[00:28:00.480 --> 00:28:03.200]   of putting things in variables and calling functions.
[00:28:03.200 --> 00:28:05.840]   Those just went, they didn't happen.
[00:28:05.840 --> 00:28:09.680]   And we see the same thing with things like Lego Mindstorms.
[00:28:09.680 --> 00:28:12.160]   Now there are children who do grab it
[00:28:12.160 --> 00:28:14.960]   and you can tell they want to become programmers.
[00:28:14.960 --> 00:28:16.080]   But then the question is,
[00:28:16.080 --> 00:28:18.960]   well, wouldn't they have just grabbed it anyway?
[00:28:18.960 --> 00:28:20.160]   Why did they need this tool?
[00:28:21.280 --> 00:28:24.240]   Are these educational props
[00:28:24.240 --> 00:28:30.160]   actually incentivizing more people to become programmers
[00:28:30.160 --> 00:28:32.880]   or are they just helping the ones
[00:28:32.880 --> 00:28:34.240]   who would become programmers anyway?
[00:28:34.240 --> 00:28:37.200]   And I don't know the answer to that.
[00:28:37.200 --> 00:28:38.480]   I'm skeptical nowadays.
[00:28:38.480 --> 00:28:39.440]   - Interesting.
[00:28:39.440 --> 00:28:43.200]   So you're not bullish on mandatory coding classes
[00:28:43.200 --> 00:28:44.080]   in middle and high school.
[00:28:44.080 --> 00:28:47.120]   - I think everybody should have a,
[00:28:49.760 --> 00:28:51.520]   everybody should get the experience.
[00:28:51.520 --> 00:28:52.400]   - I see.
[00:28:52.400 --> 00:28:59.200]   - Probably for a four week or a six week period,
[00:28:59.200 --> 00:29:03.440]   everybody should do a little basic programming
[00:29:03.440 --> 00:29:05.040]   or Ruby programming.
[00:29:05.040 --> 00:29:07.520]   I want to be careful there
[00:29:07.520 --> 00:29:09.280]   because turn people into Ruby
[00:29:09.280 --> 00:29:11.440]   and put, it's a very complicated language
[00:29:11.440 --> 00:29:12.160]   when you get into it.
[00:29:12.160 --> 00:29:15.360]   But maybe a little bit of coding,
[00:29:15.360 --> 00:29:16.960]   a little scripting, a little something
[00:29:16.960 --> 00:29:19.600]   so that you know basically what it's about.
[00:29:20.400 --> 00:29:21.200]   But other than that,
[00:29:21.200 --> 00:29:23.040]   I don't think there's any need
[00:29:23.040 --> 00:29:25.200]   to like push a year long course.
[00:29:25.200 --> 00:29:26.880]   I don't think that's necessary.
[00:29:26.880 --> 00:29:28.080]   I think the ones who are interested
[00:29:28.080 --> 00:29:29.200]   are gonna do that on their own.
[00:29:29.200 --> 00:29:30.560]   - Right, right.
[00:29:30.560 --> 00:29:33.920]   Let me ask you about the sense of style
[00:29:33.920 --> 00:29:35.840]   that a programmer develops over time.
[00:29:35.840 --> 00:29:38.000]   Is this at all related to what has been called
[00:29:38.000 --> 00:29:40.240]   the elusive writer's year
[00:29:40.240 --> 00:29:41.440]   where a writer over time
[00:29:41.440 --> 00:29:44.880]   develops a sense of prose and style?
[00:29:44.880 --> 00:29:47.920]   Is that sense related to the one
[00:29:47.920 --> 00:29:49.120]   that one develops for programming?
[00:29:49.120 --> 00:29:53.840]   - Michael Feathers coined a term 20 years ago
[00:29:53.840 --> 00:29:56.800]   which he called design sense.
[00:29:56.800 --> 00:30:00.560]   And he's threatened to write a book on this
[00:30:00.560 --> 00:30:01.520]   for the last 20 years.
[00:30:01.520 --> 00:30:02.720]   I haven't seen him write it yet.
[00:30:02.720 --> 00:30:05.840]   But the basic idea is that,
[00:30:05.840 --> 00:30:11.440]   yeah, there is this sense
[00:30:11.440 --> 00:30:13.440]   that a programmer develops
[00:30:13.440 --> 00:30:15.200]   over a long period of time
[00:30:16.160 --> 00:30:19.760]   that a bit of code
[00:30:19.760 --> 00:30:21.520]   or a design of a system
[00:30:21.520 --> 00:30:23.600]   or an architecture of a system
[00:30:23.600 --> 00:30:25.920]   somehow feels right.
[00:30:25.920 --> 00:30:29.600]   And it's an elusive kind of sense.
[00:30:29.600 --> 00:30:31.680]   It's the judgment of beauty.
[00:30:31.680 --> 00:30:34.080]   Oh, beautiful thing.
[00:30:34.080 --> 00:30:37.360]   And the word beauty ought to be used here
[00:30:37.360 --> 00:30:41.120]   because there are beautiful designs.
[00:30:41.120 --> 00:30:43.600]   There are beautiful architectures.
[00:30:43.600 --> 00:30:45.520]   There are beautiful functions
[00:30:45.520 --> 00:30:48.560]   which can be described as beauty
[00:30:48.560 --> 00:30:50.320]   and understood as beauty
[00:30:50.320 --> 00:30:53.200]   only by people who have the experience
[00:30:53.200 --> 00:30:54.080]   to look and say,
[00:30:54.080 --> 00:30:56.000]   "Oh my goodness, that's beautiful."
[00:30:56.000 --> 00:31:01.120]   I was watching a program on Netflix yesterday.
[00:31:01.120 --> 00:31:03.600]   It's called "Queen's Gambit."
[00:31:03.600 --> 00:31:04.400]   It's a new one.
[00:31:04.400 --> 00:31:06.080]   It's about a young girl
[00:31:06.080 --> 00:31:07.440]   who becomes a chess master.
[00:31:07.440 --> 00:31:09.840]   And in the midst of this,
[00:31:09.840 --> 00:31:10.960]   someone asked her,
[00:31:10.960 --> 00:31:12.720]   "Why are you so interested in chess?"
[00:31:12.720 --> 00:31:14.640]   And she leaned back and she said,
[00:31:14.640 --> 00:31:17.840]   "It's beautiful or it can be beautiful."
[00:31:17.840 --> 00:31:20.640]   And I think the same thing applies to software.
[00:31:20.640 --> 00:31:22.960]   - Christopher Hitchens,
[00:31:22.960 --> 00:31:24.400]   who is known for his excellent writing,
[00:31:24.400 --> 00:31:25.440]   suspected at some point
[00:31:25.440 --> 00:31:27.440]   that the sense of writing
[00:31:27.440 --> 00:31:30.800]   was tempered by a sort of musical intelligence
[00:31:30.800 --> 00:31:32.720]   about cadence and prose.
[00:31:32.720 --> 00:31:33.840]   Do you think musical intelligence
[00:31:33.840 --> 00:31:36.640]   plays into your ability to code well or beautifully?
[00:31:36.640 --> 00:31:39.280]   - Well, there is,
[00:31:39.280 --> 00:31:41.680]   and this has been known for some time,
[00:31:41.680 --> 00:31:45.040]   there is a very strong correlation
[00:31:45.040 --> 00:31:46.720]   between programmers and musicians.
[00:31:46.720 --> 00:31:50.720]   People who study music or have played an instrument
[00:31:50.720 --> 00:31:53.040]   or have developed a musical sense
[00:31:53.040 --> 00:31:54.240]   often become programmers.
[00:31:54.240 --> 00:31:57.120]   Why that's true, I don't know.
[00:31:57.120 --> 00:31:59.360]   It could be the rhythmic thing,
[00:31:59.360 --> 00:32:04.320]   the mathematical layout of the scales, who knows?
[00:32:04.320 --> 00:32:08.000]   If you look at a musical composition,
[00:32:08.000 --> 00:32:10.800]   if you look at a sheet music, it is a program.
[00:32:10.800 --> 00:32:12.560]   It's got if statements, it's got while loops,
[00:32:12.560 --> 00:32:14.480]   it's got sequence, it's got everything.
[00:32:14.480 --> 00:32:18.240]   So maybe it's something like that.
[00:32:18.240 --> 00:32:20.800]   I don't know, but there's definitely a correlation.
[00:32:20.800 --> 00:32:22.000]   - Interesting.
[00:32:22.000 --> 00:32:25.360]   So let's talk about your idea for,
[00:32:25.360 --> 00:32:28.560]   your claim that we need some sort of body
[00:32:28.560 --> 00:32:30.320]   within software engineering
[00:32:30.320 --> 00:32:33.040]   that decides who has the ethical
[00:32:33.040 --> 00:32:35.040]   and the technical competence necessary
[00:32:35.040 --> 00:32:36.800]   to remain a programmer.
[00:32:36.800 --> 00:32:39.200]   I don't know if you changed your view on this
[00:32:39.200 --> 00:32:40.800]   or if I, and I'll let you elaborate
[00:32:40.800 --> 00:32:41.920]   what you mean by this.
[00:32:41.920 --> 00:32:44.960]   But somebody who is concerned about this might say,
[00:32:44.960 --> 00:32:46.720]   well, this is exactly what has happened
[00:32:46.720 --> 00:32:49.120]   in other industries where we've got occupational licensing
[00:32:49.120 --> 00:32:52.480]   that's keeping people out of the industry
[00:32:52.480 --> 00:32:56.400]   so that the labor pool is artificially reduced
[00:32:56.400 --> 00:32:58.800]   to the advantage of the people already in the industry.
[00:32:58.800 --> 00:33:00.400]   And there's also the added wrinkle
[00:33:00.400 --> 00:33:04.240]   with the increasing calls for censorship
[00:33:04.240 --> 00:33:05.760]   and cancel culture.
[00:33:05.760 --> 00:33:07.520]   We could have expect that this body
[00:33:07.520 --> 00:33:10.720]   might itself become a tool for removing people
[00:33:10.720 --> 00:33:12.800]   who challenge orthodoxies.
[00:33:12.800 --> 00:33:14.160]   How do you respond to these challenges?
[00:33:14.160 --> 00:33:17.280]   - Well, so the problem,
[00:33:17.280 --> 00:33:23.600]   the problem is that programming has become
[00:33:23.600 --> 00:33:28.640]   an entirely essential job function
[00:33:28.640 --> 00:33:30.160]   for our society to exist.
[00:33:30.160 --> 00:33:34.560]   Human society can no longer exist without programmers.
[00:33:34.560 --> 00:33:38.560]   And that dependency is growing at an exponential rate.
[00:33:38.560 --> 00:33:40.880]   So you look around the room here
[00:33:40.880 --> 00:33:42.480]   and you'll just see dozens and dozens
[00:33:42.480 --> 00:33:45.360]   of little electronic things that have code running in them
[00:33:45.360 --> 00:33:48.640]   that just make life doable.
[00:33:48.640 --> 00:33:51.760]   And all of the things that we used to depend upon
[00:33:51.760 --> 00:33:54.080]   that did not have code running in them
[00:33:54.080 --> 00:33:55.840]   all now have code running in them.
[00:33:55.840 --> 00:33:57.840]   So your microwave oven and your refrigerator
[00:33:57.840 --> 00:34:00.400]   and your car, telephone, your television
[00:34:00.400 --> 00:34:02.320]   all has code running in it.
[00:34:02.320 --> 00:34:05.440]   Our society can't exist anymore without programmers.
[00:34:05.440 --> 00:34:11.520]   And there is no constraint on programmers
[00:34:11.520 --> 00:34:14.320]   to behave ethically, to have any standards,
[00:34:14.320 --> 00:34:15.760]   to have any disciplines.
[00:34:15.760 --> 00:34:17.360]   So that's an unstable situation.
[00:34:17.360 --> 00:34:18.400]   It can't go on like that.
[00:34:18.400 --> 00:34:21.280]   How do we address it?
[00:34:21.280 --> 00:34:26.080]   Do we need something akin to the AMA,
[00:34:26.080 --> 00:34:28.000]   the American Medical Association
[00:34:28.000 --> 00:34:31.200]   who provides licensure for doctors?
[00:34:31.920 --> 00:34:34.960]   Or do we need something else?
[00:34:34.960 --> 00:34:37.680]   Do we need maybe a guild structure?
[00:34:37.680 --> 00:34:41.360]   Maybe a whole set of little organizations
[00:34:41.360 --> 00:34:44.960]   that license their own programmers
[00:34:44.960 --> 00:34:49.200]   with different sets of standards and ethics and disciplines
[00:34:49.200 --> 00:34:51.600]   and then let the market decide,
[00:34:51.600 --> 00:34:54.000]   "Oh, those guys did better than those guys.
[00:34:54.000 --> 00:34:54.960]   "I think we'll hire them."
[00:34:54.960 --> 00:34:57.040]   I don't know where that's gonna come down.
[00:34:58.560 --> 00:35:03.440]   My fear is that it will be forced upon us by government
[00:35:03.440 --> 00:35:06.480]   before we can develop that solution.
[00:35:06.480 --> 00:35:09.840]   And I'm hoping that we can develop that solution
[00:35:09.840 --> 00:35:13.360]   before government sticks their little fingers in there
[00:35:13.360 --> 00:35:14.720]   and screws it up completely.
[00:35:14.720 --> 00:35:18.800]   There are a number of companies that have begun to do this.
[00:35:18.800 --> 00:35:20.880]   So you look out in the world out there,
[00:35:20.880 --> 00:35:23.200]   especially software consulting firms.
[00:35:23.200 --> 00:35:25.280]   And there are software consulting firms out there
[00:35:25.280 --> 00:35:27.280]   that have based themselves
[00:35:27.280 --> 00:35:29.280]   on a set of principles, ethics, and disciplines.
[00:35:29.280 --> 00:35:32.000]   And they advertise themselves that way.
[00:35:32.000 --> 00:35:35.120]   And I think there will be more and more of that.
[00:35:35.120 --> 00:35:37.040]   So that's kind of the direction
[00:35:37.040 --> 00:35:39.360]   I think the industry is gonna go.
[00:35:39.360 --> 00:35:41.360]   At least I hope it goes that way.
[00:35:41.360 --> 00:35:42.560]   And I hope we get there
[00:35:42.560 --> 00:35:44.640]   before government sticks their foot in it
[00:35:44.640 --> 00:35:46.160]   and kicks us all to hell.
[00:35:46.160 --> 00:35:48.000]   (laughing)
[00:35:48.000 --> 00:35:48.640]   - I hope so too.
[00:35:48.640 --> 00:35:53.120]   I wanted to ask you why tech of all industries
[00:35:53.120 --> 00:35:54.880]   seems to be so political.
[00:35:54.880 --> 00:35:57.280]   In the sense that specific companies
[00:35:57.280 --> 00:35:59.520]   seem to have a clear political orientation
[00:35:59.520 --> 00:36:04.080]   that doesn't seem to be true in many other areas of work.
[00:36:04.080 --> 00:36:05.440]   Do you have a sense of why that is?
[00:36:05.440 --> 00:36:09.920]   - No.
[00:36:09.920 --> 00:36:14.080]   Well, yes and no, I guess.
[00:36:14.080 --> 00:36:17.120]   And it's been a deep puzzle.
[00:36:17.120 --> 00:36:22.720]   If you, let's do this differently.
[00:36:23.920 --> 00:36:28.800]   If you look at the political bias geographically, right?
[00:36:28.800 --> 00:36:31.360]   There is a definite political bias in the United States.
[00:36:31.360 --> 00:36:32.400]   You've got the two coasts.
[00:36:32.400 --> 00:36:34.720]   They tend to be liberal, blue states on each coast.
[00:36:34.720 --> 00:36:37.840]   Cities tend to be more liberal.
[00:36:37.840 --> 00:36:41.200]   Rural areas tend to be more conservative.
[00:36:41.200 --> 00:36:43.280]   The Midwest tends to be more conservative.
[00:36:43.280 --> 00:36:47.520]   If you go to a company in Kansas City
[00:36:47.520 --> 00:36:52.800]   and you find a company there that has a hundred programmers,
[00:36:53.600 --> 00:36:55.840]   odds are those programmers are gonna be conservative.
[00:36:55.840 --> 00:36:59.760]   It's just, you know, because of the geographical bias.
[00:36:59.760 --> 00:37:00.800]   Go to San Francisco,
[00:37:00.800 --> 00:37:04.160]   odds are the programmers there are going to be liberal.
[00:37:04.160 --> 00:37:07.920]   That's just the geographical bias.
[00:37:07.920 --> 00:37:12.400]   Is there anything else in software
[00:37:12.400 --> 00:37:17.520]   that drives people in a certain political direction?
[00:37:19.520 --> 00:37:20.240]   Well, maybe.
[00:37:20.240 --> 00:37:25.520]   It turns out to be easy to become a programmer.
[00:37:25.520 --> 00:37:27.440]   We've talked about this before, right?
[00:37:27.440 --> 00:37:29.520]   You don't really need to go to university.
[00:37:29.520 --> 00:37:35.600]   You don't really need to get a full education, right?
[00:37:35.600 --> 00:37:39.440]   You can become a programmer without a lot of experience.
[00:37:39.440 --> 00:37:43.760]   And because our industry continues to invent
[00:37:43.760 --> 00:37:49.360]   new schemes all along, right?
[00:37:49.360 --> 00:37:51.680]   There are people who can jump into these schemes very early.
[00:37:51.680 --> 00:37:53.040]   So for example, HTML.
[00:37:53.040 --> 00:37:56.880]   HTML was invented, you know, 20 years ago.
[00:37:56.880 --> 00:37:59.520]   And a whole bunch of high school kids
[00:37:59.520 --> 00:38:01.360]   suddenly got really good at HTML.
[00:38:01.360 --> 00:38:03.040]   And of course they went out to get jobs
[00:38:03.040 --> 00:38:06.160]   without a lot of university training,
[00:38:06.160 --> 00:38:08.000]   without a lot of anything, right?
[00:38:08.000 --> 00:38:09.200]   So it's easy.
[00:38:09.200 --> 00:38:16.480]   There's a low barrier to acceptance early on.
[00:38:18.320 --> 00:38:21.920]   And that I think has led to a good thing,
[00:38:21.920 --> 00:38:25.440]   which is a bunch of marginalized folks.
[00:38:25.440 --> 00:38:27.760]   Folks who live in marginalized communities
[00:38:27.760 --> 00:38:29.760]   manage to get in very easily.
[00:38:29.760 --> 00:38:34.000]   And they get experienced and they develop skills.
[00:38:34.000 --> 00:38:35.040]   And that's also good.
[00:38:35.040 --> 00:38:39.920]   And then I think, and this is a guess on my part,
[00:38:39.920 --> 00:38:46.080]   I think they use that skill and that technology
[00:38:46.080 --> 00:38:50.640]   that gives them a voice and that voice has been turned.
[00:38:50.640 --> 00:38:55.440]   And in a way that is sometimes very detrimental.
[00:38:55.440 --> 00:38:57.760]   Now, I don't want to cast aspersions
[00:38:57.760 --> 00:38:59.600]   on every marginalized community,
[00:38:59.600 --> 00:39:02.720]   but I have noticed that there are some
[00:39:02.720 --> 00:39:05.360]   that suddenly develop a very loud voice.
[00:39:05.360 --> 00:39:08.720]   And in a lot of cases,
[00:39:08.720 --> 00:39:10.880]   they wind up driving the cancel culture.
[00:39:12.960 --> 00:39:15.920]   Just the way that looks like it's been happening
[00:39:15.920 --> 00:39:19.440]   from my middle age, no, I'm not middle-aged.
[00:39:19.440 --> 00:39:20.800]   I'm actually old now.
[00:39:20.800 --> 00:39:25.520]   From my old conservative white bias, right?
[00:39:25.520 --> 00:39:26.880]   That's what it looks like to me.
[00:39:26.880 --> 00:39:28.080]   - Interesting.
[00:39:28.080 --> 00:39:30.480]   Let me ask you about quotas.
[00:39:30.480 --> 00:39:33.600]   I think you let out a really good argument in your blog
[00:39:33.600 --> 00:39:37.520]   about why quotas don't necessarily help
[00:39:37.520 --> 00:39:38.480]   the groups you're trying to help.
[00:39:38.480 --> 00:39:40.480]   Does the argument you laid out there,
[00:39:40.480 --> 00:39:41.520]   and I'll let you explain it,
[00:39:42.480 --> 00:39:46.000]   apply and generalize to other places
[00:39:46.000 --> 00:39:47.760]   where things like quotas are applied?
[00:39:47.760 --> 00:39:49.040]   Like universities, for example.
[00:39:49.040 --> 00:39:52.240]   - I think it does.
[00:39:52.240 --> 00:39:53.280]   I think it always does.
[00:39:53.280 --> 00:39:56.480]   I mean, the idea behind a quota
[00:39:56.480 --> 00:39:59.280]   is always very well-intentioned, right?
[00:39:59.280 --> 00:40:01.280]   There's a marginalized group.
[00:40:01.280 --> 00:40:03.840]   They're not getting serviced properly.
[00:40:03.840 --> 00:40:07.200]   We need to relax the barrier of entry
[00:40:07.200 --> 00:40:08.880]   for that marginalized group
[00:40:08.880 --> 00:40:10.560]   so that more of them can join.
[00:40:10.560 --> 00:40:14.320]   Well-intentioned, everybody wants the best.
[00:40:14.320 --> 00:40:16.880]   But what's the end result?
[00:40:16.880 --> 00:40:20.880]   The end result is that you lower the standards.
[00:40:20.880 --> 00:40:22.240]   The standards have to come down,
[00:40:22.240 --> 00:40:24.320]   which hurts the entire industry.
[00:40:24.320 --> 00:40:29.680]   And it doesn't help the marginalized folks
[00:40:29.680 --> 00:40:32.320]   to let them in under low standards,
[00:40:32.320 --> 00:40:35.840]   but expect the high standards on exit, right?
[00:40:35.840 --> 00:40:37.760]   Because then you'll see this failure.
[00:40:37.760 --> 00:40:39.200]   And we see that in universities
[00:40:39.200 --> 00:40:42.560]   and we see it in employment as well,
[00:40:42.560 --> 00:40:45.200]   is that the dropout rate or the failure rate is higher.
[00:40:45.200 --> 00:40:46.480]   It doesn't help.
[00:40:46.480 --> 00:40:49.920]   I once sat with a woman, a very accomplished woman,
[00:40:49.920 --> 00:40:52.320]   and we were at a conference
[00:40:52.320 --> 00:40:56.160]   and I was giving a keynote and she was giving a keynote.
[00:40:56.160 --> 00:40:57.760]   And we were just talking about this issue.
[00:40:57.760 --> 00:40:59.120]   And she looked at me and she said,
[00:40:59.120 --> 00:41:02.880]   "I hope to hell that they did not ask me
[00:41:02.880 --> 00:41:04.880]   to do this keynote just because I'm a woman."
[00:41:06.000 --> 00:41:10.080]   And I could feel that angst,
[00:41:10.080 --> 00:41:16.000]   the devaluing of her ability to do a keynote talks
[00:41:16.000 --> 00:41:18.800]   because she was invited just to become a woman.
[00:41:18.800 --> 00:41:22.960]   So her fear was that she was being devalued
[00:41:22.960 --> 00:41:27.440]   by a quota system that she didn't even know that existed.
[00:41:27.440 --> 00:41:31.520]   I think in general,
[00:41:31.520 --> 00:41:34.480]   the only way to deal with issues like this
[00:41:34.480 --> 00:41:36.880]   is to do it entirely on merit.
[00:41:36.880 --> 00:41:39.360]   If you're going to be a programmer,
[00:41:39.360 --> 00:41:42.480]   I'm perfectly happy to hire anybody.
[00:41:42.480 --> 00:41:45.920]   I don't care what your political bias is,
[00:41:45.920 --> 00:41:49.440]   your sexual biases, your racial situation.
[00:41:49.440 --> 00:41:50.880]   I don't care about any of that stuff.
[00:41:50.880 --> 00:41:52.800]   As long as you can write the code,
[00:41:52.800 --> 00:41:54.000]   I'm happy to work with you.
[00:41:54.000 --> 00:41:57.360]   I don't want to suddenly
[00:41:57.360 --> 00:42:00.720]   or I don't want to relax the standards
[00:42:00.720 --> 00:42:02.240]   for a certain subgroup.
[00:42:02.240 --> 00:42:04.240]   I don't think that's fair to anybody.
[00:42:04.240 --> 00:42:04.740]   Just me.
[00:42:04.740 --> 00:42:06.480]   Yeah, I completely agree.
[00:42:06.480 --> 00:42:09.600]   Malcolm Gladwell was in a debate once.
[00:42:09.600 --> 00:42:12.000]   I actually really like Malcolm Gladwell,
[00:42:12.000 --> 00:42:13.600]   but he started off by saying,
[00:42:13.600 --> 00:42:14.640]   first of all, I think it's scandal
[00:42:14.640 --> 00:42:16.720]   that nobody on this stage is a woman.
[00:42:16.720 --> 00:42:17.680]   And there's a point there,
[00:42:17.680 --> 00:42:20.000]   but then I thought about it and I realized,
[00:42:20.000 --> 00:42:22.800]   well, imagine being the woman who just came on stage
[00:42:22.800 --> 00:42:24.560]   because Malcolm Gladwell wanted a woman.
[00:42:24.560 --> 00:42:25.120]   You know what I mean?
[00:42:25.120 --> 00:42:26.880]   Like imagine being in that situation.
[00:42:26.880 --> 00:42:30.800]   Anyways, let me ask you finally
[00:42:30.800 --> 00:42:33.040]   about advice you would give to a 20-year-old
[00:42:33.040 --> 00:42:34.640]   who wants to become a programmer.
[00:42:34.640 --> 00:42:38.400]   Well, OK, becoming a programmer
[00:42:38.400 --> 00:42:42.240]   is not particularly difficult in our day and age yet.
[00:42:42.240 --> 00:42:43.920]   It may be at some point in time,
[00:42:43.920 --> 00:42:44.800]   but right now it's not.
[00:42:44.800 --> 00:42:48.640]   If you think you want to be a programmer
[00:42:48.640 --> 00:42:50.640]   and you think you have the aptitude,
[00:42:50.640 --> 00:42:55.520]   it is stupidly simple to get on YouTube now
[00:42:55.520 --> 00:42:58.880]   or get on a bunch of other websites and learn to code.
[00:42:58.880 --> 00:43:01.760]   And it doesn't take a lot of effort.
[00:43:01.760 --> 00:43:03.040]   If you've got a laptop,
[00:43:03.040 --> 00:43:04.960]   if you've got a computer at your disposal,
[00:43:04.960 --> 00:43:06.880]   if you can go onto YouTube
[00:43:06.880 --> 00:43:09.120]   or any of the other sites out there,
[00:43:09.120 --> 00:43:11.840]   just find some site that'll walk you
[00:43:11.840 --> 00:43:13.760]   through an initial Java program
[00:43:13.760 --> 00:43:16.960]   and then experiment with that as much as you can.
[00:43:16.960 --> 00:43:19.520]   Learn how to write this code,
[00:43:19.520 --> 00:43:21.280]   read other people's code,
[00:43:21.280 --> 00:43:24.000]   go onto GitHub, download their code,
[00:43:24.000 --> 00:43:25.760]   read it, understand it.
[00:43:25.760 --> 00:43:28.240]   It'll be hard, but that's OK.
[00:43:28.240 --> 00:43:29.120]   You can do it.
[00:43:29.120 --> 00:43:31.200]   There's a whole bunch of books out there,
[00:43:31.200 --> 00:43:34.080]   tons and tons and tons of very good books
[00:43:34.080 --> 00:43:35.120]   that you can read.
[00:43:35.120 --> 00:43:36.560]   Start out with simple books
[00:43:36.560 --> 00:43:38.160]   like "The Joy of Java"
[00:43:38.160 --> 00:43:41.680]   or "Java for Dummies in 10 Days"
[00:43:41.680 --> 00:43:44.480]   or "Learn C in 21 Days."
[00:43:44.480 --> 00:43:45.520]   Any one of these books
[00:43:45.520 --> 00:43:48.720]   that will just help you immensely.
[00:43:48.720 --> 00:43:51.280]   Find a mentor,
[00:43:51.280 --> 00:43:53.680]   someone who's been at it for a while.
[00:43:53.680 --> 00:43:56.800]   Most of them will be overjoyed
[00:43:56.800 --> 00:43:58.880]   to have someone that they can teach
[00:44:00.160 --> 00:44:01.600]   and work with and help.
[00:44:01.600 --> 00:44:06.880]   If you can get into a trade school
[00:44:06.880 --> 00:44:08.160]   for programming,
[00:44:08.160 --> 00:44:09.200]   that would be great.
[00:44:09.200 --> 00:44:11.280]   Not necessary, but it would be great.
[00:44:11.280 --> 00:44:14.960]   If you've got the means to go to university
[00:44:14.960 --> 00:44:17.840]   and you want to spend the ridiculous amounts of money
[00:44:17.840 --> 00:44:19.600]   that universities now cost
[00:44:19.600 --> 00:44:21.040]   and go into horrific debt
[00:44:21.040 --> 00:44:22.640]   for the rest of your life,
[00:44:22.640 --> 00:44:25.040]   OK, you can do that too.
[00:44:25.040 --> 00:44:26.480]   I'm not going to stop you.
[00:44:26.480 --> 00:44:27.600]   And you'll learn a whole bunch
[00:44:27.600 --> 00:44:29.360]   of really cool stuff there,
[00:44:29.360 --> 00:44:30.480]   stuff that some of which
[00:44:30.480 --> 00:44:34.240]   you'll even be able to apply later on in your career.
[00:44:34.240 --> 00:44:37.920]   But if you don't have that means,
[00:44:37.920 --> 00:44:40.160]   if you don't have the means to go to university,
[00:44:40.160 --> 00:44:41.680]   that's OK.
[00:44:41.680 --> 00:44:43.360]   I mean, you can get this.
[00:44:43.360 --> 00:44:45.280]   You can acquire these skills.
[00:44:45.280 --> 00:44:47.040]   You can become a programmer
[00:44:47.040 --> 00:44:49.200]   with a minimum amount of investment.
[00:44:49.200 --> 00:44:52.400]   Just find some people to mentor you along.
[00:44:52.400 --> 00:44:55.680]   Find a company that's willing to hire a beginner.
[00:44:55.680 --> 00:44:56.480]   And there are a lot
[00:44:56.480 --> 00:44:58.480]   because the demand is immensely high right now.
[00:44:58.480 --> 00:45:00.880]   And we'll continue very high for a long time.
[00:45:00.880 --> 00:45:04.480]   And find a way to get in.
[00:45:04.480 --> 00:45:06.720]   And it's not that hard.
[00:45:06.720 --> 00:45:08.640]   So that would be my advice.
[00:45:08.640 --> 00:45:10.800]   Read like crazy.
[00:45:10.800 --> 00:45:13.520]   Read, inhale as much as you can.
[00:45:13.520 --> 00:45:15.200]   Study like crazy.
[00:45:15.200 --> 00:45:18.640]   Watch videos and do exercises.
[00:45:18.640 --> 00:45:21.520]   Just fill your brain with this stuff.
[00:45:21.520 --> 00:45:24.800]   And then it ought to be simple after that.
[00:45:27.520 --> 00:45:28.320]   Excellent.
[00:45:28.320 --> 00:45:30.960]   Well, thank you very much for talking with me today.
[00:45:30.960 --> 00:45:31.680]   This is very fascinating.
[00:45:31.680 --> 00:45:32.960]   Oh, it's a pleasure.
[00:45:32.960 --> 00:45:34.000]   I enjoyed it very much.
[00:45:34.000 --> 00:45:36.560]   Hey, if you enjoyed this podcast,
[00:45:36.560 --> 00:45:38.000]   please consider sharing it with your friends
[00:45:38.000 --> 00:45:39.600]   and posting it on social media.
[00:45:39.600 --> 00:45:41.680]   Word of mouth is incredibly valuable
[00:45:41.680 --> 00:45:43.520]   for a new and a small podcast like this one.
[00:45:43.520 --> 00:45:50.080]   So thanks for watching.

