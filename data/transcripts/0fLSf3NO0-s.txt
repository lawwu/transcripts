
[00:00:00.000 --> 00:00:07.000]   First, we have shirts, and we'll give those out tomorrow and Friday, if you're here for the shirts.
[00:00:07.000 --> 00:00:13.000]   If you're here for the knowledge, today our speaker is Sertac Karaman.
[00:00:13.000 --> 00:00:17.000]   He is a professor here at MIT in the Aero-Asteroid Department.
[00:00:17.000 --> 00:00:24.000]   He builds and studies autonomous vehicles that move on land and in the air.
[00:00:24.000 --> 00:00:30.000]   That includes ones that have 18 wheels and two wheels and everything in between.
[00:00:30.000 --> 00:00:36.000]   Robots that move fast and aggressively, and robots that move slowly and safely.
[00:00:36.000 --> 00:00:45.000]   He takes both the formal optimization-based approach and the data-driven, deep learning approach to robotics.
[00:00:45.000 --> 00:00:50.000]   He's a mentor to me and many other researchers here at MIT and beyond.
[00:00:50.000 --> 00:00:57.000]   While he is one of the leading experts in the world in building autonomous vehicles,
[00:00:57.000 --> 00:01:01.000]   for the nerds out there, he still programs.
[00:01:01.000 --> 00:01:07.000]   He programs on a Kinesis keyboard, uses Emacs, which is how you know he's legit.
[00:01:07.000 --> 00:01:13.000]   So please give a warm welcome to Sertac.
[00:01:13.000 --> 00:01:16.000]   Thank you.
[00:01:16.000 --> 00:01:18.000]   Thanks a lot, Lex.
[00:01:18.000 --> 00:01:22.000]   I really had the pleasure to work with Lex for some time.
[00:01:22.000 --> 00:01:27.000]   It seems like this class, him and the TAs have put together some amazing class.
[00:01:27.000 --> 00:01:29.000]   I'm really happy to be here.
[00:01:29.000 --> 00:01:31.000]   Thank you so much for joining.
[00:01:31.000 --> 00:01:35.000]   He gave me this title, "Past, Present, Future of Motion Planning" or something.
[00:01:35.000 --> 00:01:37.000]   Hopefully that's not quite exactly what you were expecting.
[00:01:37.000 --> 00:01:41.000]   So I took a whole bunch of slides from different talks and put them together.
[00:01:41.000 --> 00:01:48.000]   I am hoping to just kind of go through all, you know, as much as I can to tell you some of the interesting things,
[00:01:48.000 --> 00:01:52.000]   I think, in the domain that's happening and touch upon motion planning at some point.
[00:01:52.000 --> 00:01:57.000]   Maybe a good starting point would be to tell you a little bit about my background.
[00:01:57.000 --> 00:02:04.000]   It is exactly a decade, probably today, that I shook John Lennart's hand, who you've met before.
[00:02:04.000 --> 00:02:08.000]   I shook John Lennart's hand as a graduate student and joined the DARPA Urban Challenge team.
[00:02:08.000 --> 00:02:11.000]   It's been exactly a decade off of it.
[00:02:11.000 --> 00:02:14.000]   We worked through it with a number of people.
[00:02:14.000 --> 00:02:16.000]   Some of them are in the audience.
[00:02:16.000 --> 00:02:18.000]   I can count some.
[00:02:18.000 --> 00:02:24.000]   And at the time that we were doing these kind of things, back in the day, it was an academic project.
[00:02:24.000 --> 00:02:30.000]   You can look at the DARPA Urban Challenge teams and you'll recognize they're all university teams, at least all the finishers.
[00:02:30.000 --> 00:02:36.000]   And it came from an academic project to the thing that's going to change the world in 10 years.
[00:02:36.000 --> 00:02:42.000]   So I hope to give you a bit of a history and some thoughts on that as well.
[00:02:42.000 --> 00:02:43.000]   Let me start with my background.
[00:02:43.000 --> 00:02:46.000]   So I started graduate school with this.
[00:02:46.000 --> 00:02:49.000]   We built these beasts that I'm going to talk to you about a little bit.
[00:02:49.000 --> 00:02:53.000]   I wonder if John Lennart talked at all, but I'll give you some details.
[00:02:53.000 --> 00:02:56.000]   This was our entry to the DARPA Urban Challenge.
[00:02:56.000 --> 00:03:02.000]   It was a Land Rover LR3 that we made autonomous that navigated through that course, and it was one of the six finishers.
[00:03:02.000 --> 00:03:06.000]   A number of my friends went out and they did their own careers.
[00:03:06.000 --> 00:03:08.000]   With a number of others, we stayed here at MIT.
[00:03:08.000 --> 00:03:10.000]   We built a number of other autonomous vehicles.
[00:03:10.000 --> 00:03:12.000]   Let me show you.
[00:03:12.000 --> 00:03:19.000]   One thing that we have done that I was kind of doing the motion planning lead for was this autonomous forklift.
[00:03:19.000 --> 00:03:23.000]   It was a forklift that you could literally take a megaphone and speak to.
[00:03:23.000 --> 00:03:26.000]   You could say, "Forklift, go to XYZ," and it would go to that location.
[00:03:26.000 --> 00:03:30.000]   Here it's trying to go to receiving, which happens to be an area where trucks pull up with pallets on it
[00:03:30.000 --> 00:03:34.000]   so that you can kind of pick these pallets up and you can put a mouse back.
[00:03:34.000 --> 00:03:37.000]   It's going to go there. It has a front camera. It looks through that camera.
[00:03:37.000 --> 00:03:41.000]   It beams that camera image to a handheld tablet device made by Nokia.
[00:03:41.000 --> 00:03:44.000]   Back in the day, there was a company called Nokia.
[00:03:44.000 --> 00:03:48.000]   They would make these phones and handheld devices so you could see what it's seeing.
[00:03:48.000 --> 00:03:50.000]   You would circle so you didn't have tapping.
[00:03:50.000 --> 00:03:52.000]   Back then, you had these pen gestures.
[00:03:52.000 --> 00:03:56.000]   You could circle something, and the thing would scan it and take a look at it.
[00:03:56.000 --> 00:04:00.000]   [unclear]
[00:04:00.000 --> 00:04:03.000]   Let me just kind of go through this because it's kind of a bit slow.
[00:04:03.000 --> 00:04:05.000]   It'll scan through the pallet. It'll pick it up.
[00:04:05.000 --> 00:04:11.000]   One thing I would like to show you guys is that once that's done, you can also talk to a tablet.
[00:04:11.000 --> 00:04:17.000]   The tablet would recognize your voice, and then it would command the robot to do that kind of thing.
[00:04:17.000 --> 00:04:25.000]   This was before autonomous cars, before iPhone, before, I don't know, Alexa, before Siri and things like that.
[00:04:25.000 --> 00:04:31.000]   I spent a couple years doing this type of project that really shaped up my PhD thesis.
[00:04:31.000 --> 00:04:34.000]   Later, when I started as a faculty, I also worked on a number of things.
[00:04:34.000 --> 00:04:35.000]   Let me show you one.
[00:04:35.000 --> 00:04:42.000]   We built autonomous golf carts in Singapore's NUS, National University of Singapore campuses,
[00:04:42.000 --> 00:04:45.000]   to go there and do mobility on demand and so on.
[00:04:45.000 --> 00:04:49.000]   The one thing that I ended up doing there was throughout these projects,
[00:04:49.000 --> 00:04:52.000]   I focused mainly on motion planning that you were expecting.
[00:04:52.000 --> 00:04:56.000]   The one algorithm that I was working on was called Rapidly Exploring Random Tree.
[00:04:56.000 --> 00:04:58.000]   The idea is quite simple.
[00:04:58.000 --> 00:05:03.000]   You're starting in the middle of--this is the area that you're looking at.
[00:05:03.000 --> 00:05:06.000]   There's that orange dot that you're starting from.
[00:05:06.000 --> 00:05:08.000]   You want to go to the magenta goal region.
[00:05:08.000 --> 00:05:10.000]   There's these red obstacles.
[00:05:10.000 --> 00:05:13.000]   You want to find the path that starts from the initial condition and goes to the goal.
[00:05:13.000 --> 00:05:16.000]   That's the very basic motion planning problem.
[00:05:16.000 --> 00:05:19.000]   It turns out this problem is computationally pretty challenging,
[00:05:19.000 --> 00:05:22.000]   especially as the number of dimensions of this problem is two-dimensional.
[00:05:22.000 --> 00:05:26.000]   But if you increase the number of dimensions, you can prove that any complete algorithm,
[00:05:26.000 --> 00:05:31.000]   meaning any algorithm that returns a solution when one exists and returns failure otherwise,
[00:05:31.000 --> 00:05:33.000]   will scale exponentially.
[00:05:33.000 --> 00:05:34.000]   It's computation time.
[00:05:34.000 --> 00:05:38.000]   So at some point, you're going to run out of memory or time to do these things.
[00:05:38.000 --> 00:05:41.000]   The algorithm that I was working on was called Rapidly Exploring Random Tree.
[00:05:41.000 --> 00:05:42.000]   The idea is simple.
[00:05:42.000 --> 00:05:44.000]   You just land on a bunch of samples.
[00:05:44.000 --> 00:05:50.000]   Every time you put a random sample, you connect it to the nearest node in a tree of trajectories that you're building.
[00:05:50.000 --> 00:05:55.000]   And in this way, you sort of rapidly explore the state space to find a whole bunch of paths.
[00:05:55.000 --> 00:05:58.000]   Some of these paths may reach the goal, so that's the path that you pick.
[00:05:58.000 --> 00:06:00.000]   So it's going to run in a second.
[00:06:00.000 --> 00:06:06.000]   As you can see, it's just sampling the environment, trying to build this set of trajectories that don't collide the obstacles.
[00:06:06.000 --> 00:06:09.000]   If your trajectory collides with an obstacle, you just kind of delete it,
[00:06:09.000 --> 00:06:13.000]   and you move on with other samples, and then you would build this kind of a tree.
[00:06:13.000 --> 00:06:19.000]   It's an algorithm that's kind of pretty widely used, and it goes well beyond these kind of simple cases.
[00:06:19.000 --> 00:06:24.000]   For example, in our urban challenge kind of entry, we were using this algorithm.
[00:06:24.000 --> 00:06:26.000]   So here you're seeing the algorithm in action.
[00:06:26.000 --> 00:06:32.000]   So we're trying to park at a location during what DARPA called the NQE event.
[00:06:32.000 --> 00:06:37.000]   So you can see a whole bunch of cars that our vehicle is seeing generating this map.
[00:06:37.000 --> 00:06:38.000]   Red are obstacles.
[00:06:38.000 --> 00:06:40.000]   Black is the drivable region.
[00:06:40.000 --> 00:06:42.000]   It's going to try to park into it.
[00:06:42.000 --> 00:06:43.000]   It's going to unpark.
[00:06:43.000 --> 00:06:50.000]   You're seeing something hairy here, so that's a set of trajectories that are generated by the robot, by the RRT algorithm.
[00:06:50.000 --> 00:06:57.000]   So it's trying to unpark now, go there, so as you can see, the trajectories are going back and then going towards the obstacles.
[00:06:57.000 --> 00:07:00.000]   It's generating these trajectories, picking the best one.
[00:07:00.000 --> 00:07:02.000]   So we've used this algorithm throughout the race.
[00:07:02.000 --> 00:07:03.000]   It worked okay.
[00:07:03.000 --> 00:07:06.000]   So you can see the performance as it's running.
[00:07:06.000 --> 00:07:11.000]   So this is a video that's made about 30 times faster, kind of showing you how the thing works.
[00:07:11.000 --> 00:07:18.000]   When we switched to the forklift kind of algorithm, forklift platform, I started working on this.
[00:07:18.000 --> 00:07:26.000]   And the one thing that we realized is that, you know, the forklift tries to go here to park in front of a truck, and it finds this trajectory.
[00:07:26.000 --> 00:07:32.000]   At some point, it discovers there's an obstacle here, and it finds this looping trajectory, and it never gets out of that loop.
[00:07:32.000 --> 00:07:39.000]   You would think that it's trying to minimize the path length, so you would think that it would be easier to come up with something that just kind of turns left and aligns.
[00:07:39.000 --> 00:07:44.000]   But it turns out that once you have that loop, even if you add more samples to it, you're stuck with that loop.
[00:07:44.000 --> 00:07:48.000]   And so you would never improve this type of trajectory.
[00:07:48.000 --> 00:07:55.000]   So back in the day, Professor Seth Teller, who passed away, unfortunately, a couple years ago, but he really pushed me.
[00:07:55.000 --> 00:08:03.000]   He was telling me this doesn't work, and every time it just makes this loop right in front of the army generals who are the sponsor, and it just looks ridiculous.
[00:08:03.000 --> 00:08:04.000]   You need to fix this kind of thing.
[00:08:04.000 --> 00:08:10.000]   And trying to find a fix for it, we realized that the algorithm actually has some fundamental flaws in it.
[00:08:10.000 --> 00:08:17.000]   So specifically, we were able to kind of write down a formal proof that the RRT algorithm actually fails to converge to optimal solutions.
[00:08:17.000 --> 00:08:18.000]   So this is kind of something interesting.
[00:08:18.000 --> 00:08:23.000]   So you would think that if you had more samples, you would get better and better trajectories.
[00:08:23.000 --> 00:08:28.000]   But it turns out that the first few trajectories that you found, it just constrains you.
[00:08:28.000 --> 00:08:33.000]   So it closes the space that you want to search, and you're stuck with bad trajectories.
[00:08:33.000 --> 00:08:35.000]   And this almost always happens.
[00:08:35.000 --> 00:08:36.000]   Sometimes you're lucky.
[00:08:36.000 --> 00:08:38.000]   Your bad trajectory is kind of good enough.
[00:08:38.000 --> 00:08:41.000]   But most of the time, it's pretty bad.
[00:08:41.000 --> 00:08:53.000]   We were able to come up with another algorithm that we called RRT*, which just does a little bit more work, but guarantees asymptotic optimality, meaning it will always converge to optimum solutions.
[00:08:53.000 --> 00:08:56.000]   And the computational difference between the two is very little.
[00:08:56.000 --> 00:09:01.000]   If you were to run them side by side, RRT* tree would look like this.
[00:09:01.000 --> 00:09:07.000]   What it's doing is it's just looking at the paths locally, and it's just kind of correcting them locally just a little bit.
[00:09:07.000 --> 00:09:13.000]   And that little bit correction is enough to converge to globally optimal trajectories.
[00:09:13.000 --> 00:09:18.000]   So that turned out to be my doctoral thesis back in 2011, and we applied it to a number of things.
[00:09:18.000 --> 00:09:20.000]   Let me show you one simulation scenario.
[00:09:20.000 --> 00:09:26.000]   Imagine a race car coming into a turn, wants to turn very quickly, generates these trajectories.
[00:09:26.000 --> 00:09:37.000]   So the right thing to do is to kind of slow down a little bit, start skidding, hit one end of the road, now start speeding up and go as fast as possible so that you hit the other end of the road and you complete the turn.
[00:09:37.000 --> 00:09:41.000]   These kind of things would come out just naturally from the algorithm.
[00:09:41.000 --> 00:09:42.000]   You wouldn't have to program.
[00:09:42.000 --> 00:09:48.000]   You have to do these kind of things, but you just run the algorithm and this is the best trajectory it finds.
[00:09:48.000 --> 00:09:53.000]   It would be impossible to get something like this from an RRT.
[00:09:53.000 --> 00:10:02.000]   We applied it to a number of other robots as well, I don't know, like PR2 type robots or these autonomous forklifts and got good results out of it.
[00:10:02.000 --> 00:10:10.000]   So that kind of maybe gives you a bit of an idea of my background, meaning like my graduate school experience a little bit and the PhD.
[00:10:10.000 --> 00:10:15.000]   Let me kind of tell you a bit quickly what my research group does.
[00:10:15.000 --> 00:10:23.000]   I always say sort of, so we do a lot of things in a fortunate and unfortunate way, so it's hard to find a focus sometimes admittedly.
[00:10:23.000 --> 00:10:26.000]   But I usually tell people that we work on autonomous vehicles.
[00:10:26.000 --> 00:10:34.000]   The problem is quite interesting both at the vehicle level, meaning how are you going to build these autonomous vehicles individually, and also interesting at a systems level.
[00:10:34.000 --> 00:10:40.000]   When you think about it, most of the autonomous vehicle is most valuable if you put them into a system that they can work.
[00:10:40.000 --> 00:10:46.000]   Let me give you some examples. So a system of autonomous vehicles would be, for example, this Kiva system scenario.
[00:10:46.000 --> 00:10:56.000]   You know, nowadays you buy something from Amazon, the way you buy two books, the way it's packed is that books are brought by robots to a picker and the picker just puts them into the same box and sends it to you.
[00:10:56.000 --> 00:11:02.000]   So this is done by 500 autonomous vehicles, for example, that would be a good example of a system.
[00:11:02.000 --> 00:11:08.000]   Another one is that there are ports around there in the world, you know, that are working just completely with autonomous vehicles and cranes.
[00:11:08.000 --> 00:11:19.000]   If you project a little bit forward, you can think maybe, you know, you can have drone delivery systems and they maybe don't have enough batteries, so they have to relay packages to one another, so you need to build a system of autonomous vehicles.
[00:11:19.000 --> 00:11:29.000]   Or if you have, I don't know, like autonomous cars, maybe it's best to use them in like an Uber-like scenario, so you can have autonomous taxis that they can work together and such.
[00:11:29.000 --> 00:11:36.000]   So let me tell you a bit more on the vehicle level problems and the system level problems, some of the crazy things that we try to do.
[00:11:36.000 --> 00:11:41.000]   On the vehicle level, we're interested in all aspects of both perception and planning.
[00:11:41.000 --> 00:11:54.000]   Usually, challenges are sort of either complexity or either computational complexity, so it's very hard just computationally, so you really need to innovate, or it's just the system becomes very complex, so you need to figure that out.
[00:11:54.000 --> 00:12:00.000]   We're, for example, recently motivated by really fast and agile kind of vehicles, how we can build that.
[00:12:00.000 --> 00:12:09.000]   Like one thing that we were motivated, for example, is sort of like imagine there's a drone flying and you want to catch it in the fly.
[00:12:09.000 --> 00:12:13.000]   I wonder if this is going to play.
[00:12:13.000 --> 00:12:19.000]   So, you know, it turns out that Netherlands police, some people fly UAVs around and you somehow want to take it down.
[00:12:19.000 --> 00:12:23.000]   It's not like you can shoot at it, so people train eagles and things like that.
[00:12:23.000 --> 00:12:29.000]   So we thought it would be great to actually build these types of robots that we try to in our group.
[00:12:29.000 --> 00:12:37.000]   So you can, once you start to do these kind of things, you wonder like how much I can push the boundaries of very, very agile vehicles and systems.
[00:12:37.000 --> 00:12:42.000]   So here you're going to see a falcon diving for a prey.
[00:12:42.000 --> 00:12:46.000]   You're going to see a goose right at the last like a split second.
[00:12:46.000 --> 00:12:49.000]   So if you look at the scene from a 20 hertz camera, this is what you would see.
[00:12:49.000 --> 00:12:51.000]   So they are definitely much faster.
[00:12:51.000 --> 00:12:56.000]   They do very complicated, you know, planning and maneuvering to be able to do these kind of things.
[00:12:56.000 --> 00:13:02.000]   So, you know, in the research group, we look at a number of different perception problems where you're multi agents, you have ultra high rate cameras.
[00:13:02.000 --> 00:13:06.000]   Like, for example, we have drones with 200 hertz cameras on them.
[00:13:06.000 --> 00:13:12.000]   And so you're trying to understand the person that you're tracking, its dynamics, its intentions.
[00:13:12.000 --> 00:13:17.000]   On the control level, you're trying to pull off really complicated maneuvers like the one that you've seen in the race car.
[00:13:17.000 --> 00:13:20.000]   But you want to do it in real time at like a kilohertz probably.
[00:13:20.000 --> 00:13:23.000]   So how can you do these types of things?
[00:13:23.000 --> 00:13:26.000]   We use a lot high performance computing.
[00:13:26.000 --> 00:13:29.000]   So, for example, the drones that we have actually have GPUs on them.
[00:13:29.000 --> 00:13:30.000]   They fly GPUs.
[00:13:30.000 --> 00:13:33.000]   They fly like teraflop computers to be able to do these kind of things.
[00:13:33.000 --> 00:13:37.000]   We also use them offline like the deep learning computers that you would use normally.
[00:13:37.000 --> 00:13:44.000]   We have access to things like DGX1 and so on that we use that to compute controllers, for example.
[00:13:44.000 --> 00:13:49.000]   Here's an example of, I don't know, like one GPU drone just kind of passing through a window.
[00:13:49.000 --> 00:13:51.000]   This is from a long time ago.
[00:13:51.000 --> 00:13:55.000]   These are the controllers that we would compute on supercomputers that we would deploy.
[00:13:55.000 --> 00:14:00.000]   And on the perception side, for example, we're looking at things where like you can use visual macronometry.
[00:14:00.000 --> 00:14:05.000]   You can just have a camera and just look through the world from the camera and try to understand your own position.
[00:14:05.000 --> 00:14:11.000]   So we have certain algorithms to pick the features just right so that you can do these things with just like 10 features or something like that.
[00:14:11.000 --> 00:14:14.000]   So it is computationally very efficient.
[00:14:14.000 --> 00:14:18.000]   On the systems aspects of things, when you put them together--yeah.
[00:14:18.000 --> 00:14:26.000]   [Audience member] What exactly do you mean by computing controllers, like finding the best constants for controllers?
[00:14:26.000 --> 00:14:28.000]   [Yuval] Yeah, so this is maybe kind of--
[00:14:28.000 --> 00:14:29.000]   [Audience member] Could you repeat the question?
[00:14:29.000 --> 00:14:32.000]   [Yuval] Yeah, so the question was what do you mean by sort of computing the controllers?
[00:14:32.000 --> 00:14:35.000]   Would you want to find the best constants?
[00:14:35.000 --> 00:14:38.000]   So controllers are actually pretty complicated objects.
[00:14:38.000 --> 00:14:40.000]   So you have a drone.
[00:14:40.000 --> 00:14:45.000]   It has--suppose it has six--it has actually 12 degrees of freedom, but suppose it has six degrees of freedom.
[00:14:45.000 --> 00:14:47.000]   It's a six-dimensional space.
[00:14:47.000 --> 00:14:50.000]   Six-dimensional space is very, very large.
[00:14:50.000 --> 00:14:56.000]   Suppose you discretize every dimension with 200 points, so six-dimensional position and orientation.
[00:14:56.000 --> 00:15:02.000]   200 points, 200 to the 6th would be thousands of trillions.
[00:15:02.000 --> 00:15:06.000]   If you were to write one byte for every point in the space--
[00:15:06.000 --> 00:15:07.000]   are you looking at the state space?
[00:15:07.000 --> 00:15:10.000]   For every point in the state space, what's the action that I'm going to do?
[00:15:10.000 --> 00:15:14.000]   If I end up at that position and orientation, what action should I do?
[00:15:14.000 --> 00:15:20.000]   If you use one byte to write it in the memory, it would make 2.5 petabytes of this controller.
[00:15:20.000 --> 00:15:21.000]   It's pretty large.
[00:15:21.000 --> 00:15:25.000]   When you think about it, you don't really need--
[00:15:25.000 --> 00:15:30.000]   it would be very surprising if that maneuver really--to be able to describe it like in information theoretic terms.
[00:15:30.000 --> 00:15:34.000]   To be able to describe it, it would be very surprising if it requires thousands of trillions of parameters.
[00:15:34.000 --> 00:15:37.000]   I mean, how complicated is it, really?
[00:15:37.000 --> 00:15:40.000]   So millions, maybe, but trillions, seriously?
[00:15:40.000 --> 00:15:46.000]   So what we do is, to be able to compute these things, we take very simple controllers, like for example, zero.
[00:15:46.000 --> 00:15:47.000]   Don't do anything.
[00:15:47.000 --> 00:15:52.000]   We compress them, like as in data compression, and then we work on the compressed versions.
[00:15:52.000 --> 00:15:59.000]   And then that compressed version grows up to a level that comes down to something like 2 megabytes.
[00:15:59.000 --> 00:16:05.000]   That's probably essentially what you would need, rather than 3 terabytes, for example.
[00:16:05.000 --> 00:16:09.000]   We use kind of singular value decomposition type techniques to do compression.
[00:16:09.000 --> 00:16:13.000]   You may have done the same thing using images, for example.
[00:16:13.000 --> 00:16:17.000]   If you compress an image, JPEG, you save an order of magnitude.
[00:16:17.000 --> 00:16:19.000]   No surprise, right?
[00:16:19.000 --> 00:16:24.000]   If you compress video, you save two, three orders of magnitude, because video is three-dimensional.
[00:16:24.000 --> 00:16:27.000]   As you increase the dimensions, there's more to compress.
[00:16:27.000 --> 00:16:33.000]   So when you compress this way, this saves ten orders of magnitude, which honestly is no surprise, when you think about it a little bit.
[00:16:33.000 --> 00:16:36.000]   So those are the control, like the planning and control algorithms that we use.
[00:16:36.000 --> 00:16:38.000]   These run on supercomputers still.
[00:16:38.000 --> 00:16:41.000]   So we compute them in, I don't know, five minutes.
[00:16:41.000 --> 00:16:46.000]   That gives you a lookup table that's 2 megabytes you put in so that you can quickly execute it.
[00:16:46.000 --> 00:16:49.000]   That lookup table is essential if you want to do a kilohertz control.
[00:16:49.000 --> 00:16:54.000]   You won't be able to compute a trajectory at that rate.
[00:16:54.000 --> 00:17:02.000]   Okay. That question came in, and that's the whole talk in terms of present of motion planning, and I can show you some other stuff.
[00:17:02.000 --> 00:17:05.000]   And there's a lot to do, especially in terms of agility on the systems domain as well.
[00:17:05.000 --> 00:17:14.000]   Like, I don't know, I pulled up -- this is not the kind of stuff that -- the only stuff that we do, but I pulled up the most interesting thing, I think, maybe the most crazy thing of my hard disk.
[00:17:14.000 --> 00:17:17.000]   Imagine you have a whole bunch of vehicles coming to an intersection.
[00:17:17.000 --> 00:17:19.000]   Suppose they're fully autonomous.
[00:17:19.000 --> 00:17:24.000]   How would you make it so that they would pass through the intersection as fast as possible?
[00:17:24.000 --> 00:17:25.000]   Okay.
[00:17:25.000 --> 00:17:29.000]   So if you were to really utilize algorithms that would do that, here is what I would look like.
[00:17:29.000 --> 00:17:33.000]   So you would have vehicles coming in, and you could -- it looks like --
[00:17:33.000 --> 00:17:42.000]   so you probably don't want to sit in this vehicle, but just sort of like -- just to understand the fundamental limits of the situation, just to understand how far you can push these things.
[00:17:42.000 --> 00:17:51.000]   You can see it looks like they're getting very lucky, but really what's happening is that they're just speeding and slowing down just so little so that they can avoid one another.
[00:17:51.000 --> 00:18:00.000]   So you can actually sit down and do some math and try to understand, you know, given the dynamics, like your acceleration/deceleration limits, how fast you can push these things.
[00:18:00.000 --> 00:18:08.000]   Maybe it doesn't immediately apply to self-driving cars, but certainly you can use it in warehouses and things like that, which would actually improve operations quite a bit.
[00:18:08.000 --> 00:18:10.000]   I wonder if any of you have seen Kiva Systems' warehouses.
[00:18:10.000 --> 00:18:12.000]   You look at it, most of the robots are stopped.
[00:18:12.000 --> 00:18:15.000]   They're just sitting there.
[00:18:15.000 --> 00:18:32.000]   [ Inaudible ]
[00:18:32.000 --> 00:18:37.000]   Yeah, so the question is, is there anyone sort of working on robustness aspects of distributed control?
[00:18:37.000 --> 00:18:38.000]   Yeah, so that's a good point.
[00:18:38.000 --> 00:18:40.000]   It's very right.
[00:18:40.000 --> 00:18:43.000]   We have looked at things like from the theoretical perspective.
[00:18:43.000 --> 00:18:49.000]   It turns out that, like even in this case, there's something like a critical density of these things.
[00:18:49.000 --> 00:18:52.000]   So below the critical density, things are very simple.
[00:18:52.000 --> 00:18:54.000]   You're going to be robust.
[00:18:54.000 --> 00:18:57.000]   You're going to be able to find paths, and you're going to be able to execute.
[00:18:57.000 --> 00:19:00.000]   Above the critical density, things are very hard.
[00:19:00.000 --> 00:19:01.000]   It's very fragile.
[00:19:01.000 --> 00:19:05.000]   Like if something fails, you just kind of -- the whole system will crash into one another.
[00:19:05.000 --> 00:19:08.000]   And this is no surprise either.
[00:19:08.000 --> 00:19:12.000]   Like this is kind of the physics of many, you know, just like you see it everywhere.
[00:19:12.000 --> 00:19:16.000]   I mean, it's the same thing as, I don't know, you heat this thing, there's a critical temperature.
[00:19:16.000 --> 00:19:18.000]   Above it, it looks different.
[00:19:18.000 --> 00:19:21.000]   Below it, it looks like a liquid.
[00:19:21.000 --> 00:19:26.000]   You can use the same kind of thinking or theoretical arguments to come up with these types of things.
[00:19:26.000 --> 00:19:33.000]   And I know that a lot of people work on specific controllers for vehicle level to guarantee robustness and so on.
[00:19:33.000 --> 00:19:40.000]   Probably those are the kind of things that one needs to do before implementing these types of algorithms.
[00:19:40.000 --> 00:19:49.000]   But we're sort of -- like in the current existing, like, multi-vehicle setups, like Kiva systems or ports and things like that,
[00:19:49.000 --> 00:19:52.000]   we are far away from this kind of thing.
[00:19:52.000 --> 00:19:55.000]   The main problem, some of it is control.
[00:19:55.000 --> 00:19:59.000]   Like we don't understand the control aspects, but we also don't trust our sensors and things like that.
[00:19:59.000 --> 00:20:01.000]   So that's another big problem.
[00:20:01.000 --> 00:20:09.000]   So probably more of the research is on the -- not research, but implementation is on the sensor side, I'd say.
[00:20:09.000 --> 00:20:11.000]   Okay.
[00:20:11.000 --> 00:20:20.000]   So, yeah, so we have been doing a number of other projects currently as well on autonomous vehicles.
[00:20:20.000 --> 00:20:23.000]   If you're interested in any one of them, let me know.
[00:20:23.000 --> 00:20:27.000]   I'm not going to show you videos, but let me just kind of tell you with one slide and a few pictures.
[00:20:27.000 --> 00:20:30.000]   This was several slides, but I felt really bad.
[00:20:30.000 --> 00:20:33.000]   So we have an autonomous tricycle.
[00:20:33.000 --> 00:20:38.000]   That may sound funny, but it's actually pretty hard to test with autonomous vehicles.
[00:20:38.000 --> 00:20:43.000]   So we currently have five of these, and we're hoping to build 30 so that we can put them in --
[00:20:43.000 --> 00:20:50.000]   they're currently in a little robot-enclosed area in Taiwan, and they're just driving around collecting data so that we can --
[00:20:50.000 --> 00:20:54.000]   for example, you can feed them into deep learning algorithms.
[00:20:54.000 --> 00:21:00.000]   We also have in ABI's warehouses, we have one of these robots.
[00:21:00.000 --> 00:21:02.000]   It's a warehouse robot.
[00:21:02.000 --> 00:21:06.000]   It's supposed to be kind of like -- I'm sure you know what we think robotics is.
[00:21:06.000 --> 00:21:08.000]   They make this robot arm.
[00:21:08.000 --> 00:21:10.000]   It's supposed to be very easy you can interact with.
[00:21:10.000 --> 00:21:12.000]   So imagine a warehouse robot that way.
[00:21:12.000 --> 00:21:13.000]   You can just talk to it.
[00:21:13.000 --> 00:21:15.000]   You can tell it stuff to do, and it can do that.
[00:21:15.000 --> 00:21:16.000]   You can show it.
[00:21:16.000 --> 00:21:17.000]   You can hop on it.
[00:21:17.000 --> 00:21:19.000]   You can do it yourself type of thing.
[00:21:19.000 --> 00:21:31.000]   I am also a lead PI together with sort of working with Daniela Rus on MIT's effort with Stanford and Toyota to build safer vehicles.
[00:21:31.000 --> 00:21:35.000]   And finally, I'm still a PI on the MIT-Singapore partnership.
[00:21:35.000 --> 00:21:37.000]   We are now from golf carts.
[00:21:37.000 --> 00:21:47.000]   We've moved into doing these electric vehicles, and we're working on basically integrating a lot of electric vehicles together to make them kind of work nicer.
[00:21:47.000 --> 00:21:55.000]   We're also kind of now looking into an autonomous kind of wheelchair that's also in that project that I didn't show here.
[00:21:55.000 --> 00:21:58.000]   So my group works on like a number of other projects in this domain.
[00:21:58.000 --> 00:22:01.000]   Admittedly, my group is a bit more on the theory side as well.
[00:22:01.000 --> 00:22:05.000]   So maybe like half the group is a bit theory-oriented.
[00:22:05.000 --> 00:22:07.000]   The other half is more experimental.
[00:22:07.000 --> 00:22:10.000]   I usually say we have quite a spectrum in the group.
[00:22:10.000 --> 00:22:15.000]   So we would have mathematicians, like I would have people who don't have any engineering degrees.
[00:22:15.000 --> 00:22:21.000]   Like, for example, we have one postdoc who is a mathematician by training, is a postdoctoral scholar here.
[00:22:21.000 --> 00:22:28.000]   We have two undergraduate students whose undergraduate degrees are from mathematics.
[00:22:28.000 --> 00:22:37.000]   On the other hand, we have sort of mechanical engineers and so on who would actually build these things throughout the group, and we're funded by a number of people throughout.
[00:22:37.000 --> 00:22:44.000]   So, okay, that was supposed to be like a quick summary, an entrance into what I was going to talk about.
[00:22:44.000 --> 00:22:53.000]   So let me kind of tell you maybe our DARPA Urban Challenge effort so that I can tell you a little bit more about how we implemented these motion planning algorithms.
[00:22:53.000 --> 00:23:00.000]   If time allows, I could talk more broadly about motion planning algorithms, but I don't think we'll get a chance to, okay?
[00:23:00.000 --> 00:23:04.000]   So I'm going to start with this effort, the DARPA Urban Challenge.
[00:23:04.000 --> 00:23:06.000]   I'm sure many of you have heard.
[00:23:06.000 --> 00:23:15.000]   People usually believe that it kind of just kick-started all this autonomous vehicles type bonanza that's been going on.
[00:23:15.000 --> 00:23:16.000]   Let me introduce to you a little bit.
[00:23:16.000 --> 00:23:21.000]   So this is -- DARPA did things called DARPA Grand Challenge 1 and 2.
[00:23:21.000 --> 00:23:24.000]   I'll tell you in a second what they are, but this is the third one essentially.
[00:23:24.000 --> 00:23:30.000]   The idea is that you would take a street legal vehicle, you would instrument it with sensors and computers,
[00:23:30.000 --> 00:23:35.000]   and you would enter this race to drive 60 miles in under six hours in an urban traffic.
[00:23:35.000 --> 00:23:38.000]   There's other vehicles driving around as well.
[00:23:38.000 --> 00:23:40.000]   So DARPA proposed this back in 2006.
[00:23:40.000 --> 00:23:44.000]   They did the race in November 2007.
[00:23:44.000 --> 00:23:46.000]   It was pretty hard.
[00:23:46.000 --> 00:23:49.000]   You would have to do a lot of different things like U-turns, K-point turns.
[00:23:49.000 --> 00:23:52.000]   You'd have to be careful with stop signs and so on.
[00:23:52.000 --> 00:23:57.000]   It was pretty complicated, but if you win it, they would give you $2 million, so it was a good incentive.
[00:23:57.000 --> 00:23:59.000]   89 teams entered the race.
[00:23:59.000 --> 00:24:05.000]   We usually say it's MIT's first serious entry, but MIT's non-serious entry was, I guess,
[00:24:05.000 --> 00:24:12.000]   a team that later turned into Cruise Automation, which GM ended up buying for a billion dollars.
[00:24:12.000 --> 00:24:16.000]   So this is a serious one of our entries.
[00:24:16.000 --> 00:24:21.000]   They just went there to have fun, I think, and then later they continued their interest in autonomous cars
[00:24:21.000 --> 00:24:24.000]   and built Cruise Automation, did a great job.
[00:24:24.000 --> 00:24:28.000]   We went after, we were not directly connected to that team.
[00:24:28.000 --> 00:24:32.000]   Our team had mainly MIT faculty, postdocs, and students.
[00:24:32.000 --> 00:24:35.000]   So we had eight full-time graduate students, kind of roughly.
[00:24:35.000 --> 00:24:36.000]   I was one of them.
[00:24:36.000 --> 00:24:38.000]   You can see me right here.
[00:24:38.000 --> 00:24:41.000]   I looked different back then.
[00:24:41.000 --> 00:24:47.000]   We had a lot of support from Draper Laboratory, mainly on the sort of system integration, vehicle integration support.
[00:24:47.000 --> 00:24:50.000]   Some of them are in the audience.
[00:24:50.000 --> 00:24:54.000]   And we also had some vehicle engineering support from Olin College.
[00:24:54.000 --> 00:25:01.000]   We had a first version of the vehicle where cables were coming out, and then Olin College came in and they packaged it nicely.
[00:25:01.000 --> 00:25:02.000]   We built a vehicle.
[00:25:02.000 --> 00:25:03.000]   It looked like this.
[00:25:03.000 --> 00:25:05.000]   We took a Land Rover MR3.
[00:25:05.000 --> 00:25:07.000]   Land Rover was one of the sponsors.
[00:25:07.000 --> 00:25:12.000]   But also it was nice that the vehicle was pretty big.
[00:25:12.000 --> 00:25:16.000]   We put an EMC driver wire system to it.
[00:25:16.000 --> 00:25:19.000]   So this is kind of a driver wire system for people who are disabled.
[00:25:19.000 --> 00:25:26.000]   Like, for example, if you can't use your legs, they would give you like a little joystick-type device so that you can actuate, you know, gas and brake.
[00:25:26.000 --> 00:25:27.000]   So it came very handy.
[00:25:27.000 --> 00:25:30.000]   We used it to make our vehicle driver wire.
[00:25:30.000 --> 00:25:32.000]   We needed to put a lot of sensors on it.
[00:25:32.000 --> 00:25:37.000]   So I'm going to say -- I wish this wasn't recorded, but hey.
[00:25:37.000 --> 00:25:39.000]   So I think our situation was the following.
[00:25:39.000 --> 00:25:42.000]   There was a lot of other teams out there, and they were very experienced.
[00:25:42.000 --> 00:25:46.000]   They had done the other grand challenges before and so on.
[00:25:46.000 --> 00:25:48.000]   We were not as experienced.
[00:25:48.000 --> 00:25:52.000]   I would say that our team was talented but not experienced.
[00:25:52.000 --> 00:25:55.000]   And we had a lot of sponsors, so we had a lot of money.
[00:25:55.000 --> 00:26:02.000]   So our strategy turned into if it fits on the vehicle, let's put it on the vehicle, and we'll figure out a way to use it.
[00:26:02.000 --> 00:26:05.000]   If we don't use it, it's dead weight, we'll just kind of carry it.
[00:26:05.000 --> 00:26:16.000]   So with that mindset, we ended up with five cameras, 16 radars, 12 planar laser scanners, one 3D laser scanner, and one GPS AMU unit.
[00:26:16.000 --> 00:26:17.000]   This was a lot of sensors.
[00:26:17.000 --> 00:26:19.000]   They generated a lot of data.
[00:26:19.000 --> 00:26:20.000]   You had to process it.
[00:26:20.000 --> 00:26:28.000]   So we had to buy a 40 CPU, 40 gigs of RAM, quanta computer that normally at that time would run on like a Google server type thing.
[00:26:28.000 --> 00:26:29.000]   It was a server rack.
[00:26:29.000 --> 00:26:35.000]   Ten computers, essentially, that we had to put in.
[00:26:35.000 --> 00:26:42.000]   So we used to joke that this was like the fastest mobile computer on campus or something, like both in terms of speed and compute power.
[00:26:42.000 --> 00:26:47.000]   Now, this required a lot of energy, so we put on an internally mounted generator.
[00:26:47.000 --> 00:26:50.000]   Now, this generates a lot of heat, so we put an air conditioner on top.
[00:26:50.000 --> 00:26:51.000]   You can kind of see it here.
[00:26:51.000 --> 00:26:53.000]   So that became our vehicle.
[00:26:53.000 --> 00:27:03.000]   One thing to note, though, is that we just had -- the number of sensors was -- or the number of computers was large, but the sensor suit was very similar to the other people who had finished.
[00:27:03.000 --> 00:27:08.000]   One important sensor was this 3D laser scanner that I'm going to show you in a second.
[00:27:08.000 --> 00:27:10.000]   So this is the thing that sits on top of the vehicle.
[00:27:10.000 --> 00:27:28.000]   It looks like the Kentucky fried chicken type of bucket, and essentially what it has is that probably a lot of people here are familiar, but it has 64 lasers that measure range, and those 64 lasers are stacked up on a vertical plane, and that plane will turn in 15 hertz.
[00:27:28.000 --> 00:27:30.000]   So it will give you a 3D point cloud.
[00:27:30.000 --> 00:27:35.000]   If you drive with it in Harvard Square, here is what the raw data will look like.
[00:27:35.000 --> 00:27:37.000]   This is colored by height.
[00:27:37.000 --> 00:27:47.000]   You're just looking at raw data, and you can easily pick up, I don't know, a bus here, another building, maybe a person, a bunch of others, so it gives you great data already.
[00:27:47.000 --> 00:27:50.000]   Like, you could work with this, right?
[00:27:50.000 --> 00:27:53.000]   So we taught, so other teams taught.
[00:27:53.000 --> 00:27:56.000]   This sensor is made by a company called Velodyne.
[00:27:56.000 --> 00:28:01.000]   It came pretty much just in time for the urban challenge.
[00:28:01.000 --> 00:28:06.000]   My guess is that if you didn't have this 3D point cloud, it would be pretty hard to complete that challenge.
[00:28:06.000 --> 00:28:13.000]   There was only one team that didn't have it and complete it, and they had a 2D laser scanner that was kind of turning like they essentially built their own Velodyne.
[00:28:13.000 --> 00:28:16.000]   Okay?
[00:28:16.000 --> 00:28:19.000]   So we had also this sort of 12 planar laser scanners.
[00:28:19.000 --> 00:28:22.000]   You would need these kind of things to cover the blind spots of the vehicle.
[00:28:22.000 --> 00:28:26.000]   The thing is on top, so you're not seeing kind of very nearby.
[00:28:26.000 --> 00:28:30.000]   We had five on the push brooms looking down and seven on the skirts.
[00:28:30.000 --> 00:28:32.000]   So this is kind of what it would look like.
[00:28:32.000 --> 00:28:37.000]   So you're seeing the curbs here and a bunch of other things, and the vehicles are very close to you.
[00:28:37.000 --> 00:28:39.000]   You can still see them.
[00:28:39.000 --> 00:28:41.000]   We had 16 radars.
[00:28:41.000 --> 00:28:42.000]   Radars are great.
[00:28:42.000 --> 00:28:43.000]   They can see very far.
[00:28:43.000 --> 00:28:45.000]   Like, laser scanners would see 70 meters.
[00:28:45.000 --> 00:28:47.000]   Radars would see twice as much.
[00:28:47.000 --> 00:28:50.000]   The problem is that they have a very narrow field of view.
[00:28:50.000 --> 00:28:58.000]   So we needed 16 of them to cover 27 degrees around the vehicle, 207 degrees around the vehicle, 270 degrees.
[00:28:58.000 --> 00:29:01.000]   So, you know, you can park somewhere and you can see this is meters per second.
[00:29:01.000 --> 00:29:04.000]   You can see a whole bunch of other vehicles kind of coming through.
[00:29:04.000 --> 00:29:06.000]   It helps quite a bit.
[00:29:06.000 --> 00:29:09.000]   And finally, we had five cameras in this configuration.
[00:29:09.000 --> 00:29:12.000]   We were using cameras to actually look at lane markings.
[00:29:12.000 --> 00:29:18.000]   I think actually we were the only finishing team that was using cameras for any purpose of any kind.
[00:29:18.000 --> 00:29:21.000]   The other vehicles were just kind of working with the laser scanner.
[00:29:21.000 --> 00:29:27.000]   I mean, we were mainly working with the laser scanner, but we were picking up lane markings with this.
[00:29:27.000 --> 00:29:33.000]   When we bought this GPS AMU unit, it was an expensive thing, but it would give you your position you would go with.
[00:29:33.000 --> 00:29:37.000]   The algorithmic stack, it gets pretty complicated.
[00:29:37.000 --> 00:29:47.000]   I think by the end of the race, we would probably have, like, the active code that was running could be order hundreds of thousands of lines of C code.
[00:29:47.000 --> 00:29:49.000]   So maybe like 200,000.
[00:29:49.000 --> 00:29:53.000]   I remember the forklift, and that was about half a million lines of code.
[00:29:53.000 --> 00:29:55.000]   I think this was a bit less.
[00:29:55.000 --> 00:30:04.000]   But it would count, like, 100 processes that are running, sending messages to one another on that 40-core system that you've seen.
[00:30:04.000 --> 00:30:07.000]   So that would generate a huge software diagram.
[00:30:07.000 --> 00:30:09.000]   So I simplified it for you.
[00:30:09.000 --> 00:30:11.000]   It turned into this.
[00:30:11.000 --> 00:30:13.000]   You have some sensors.
[00:30:13.000 --> 00:30:14.000]   You get that data.
[00:30:14.000 --> 00:30:16.000]   You process it through perception algorithms.
[00:30:16.000 --> 00:30:20.000]   You generate a map of the environment close to the robot.
[00:30:20.000 --> 00:30:22.000]   And you have this three-tier stack.
[00:30:22.000 --> 00:30:25.000]   You have a navigator, much like your Google Maps.
[00:30:25.000 --> 00:30:29.000]   It would compute a map to get to your next goal, which may be kilometers away.
[00:30:29.000 --> 00:30:36.000]   And it would also give you the next waypoint that you should hit that would hopefully be within your grid map.
[00:30:36.000 --> 00:30:45.000]   And there's a motion planner that looks at the map, sees all the obstacles and everything, sees the goal point, and finds a path to get to the goal point using the RRT.
[00:30:45.000 --> 00:30:51.000]   And then once that trajectory is computed, it is passed to a controller that actually steers the vehicle that way.
[00:30:51.000 --> 00:30:54.000]   So I've already shown you how the motion planner works.
[00:30:54.000 --> 00:30:55.000]   It just kind of computes these things.
[00:30:55.000 --> 00:30:57.000]   So here's the goal point.
[00:30:57.000 --> 00:31:00.000]   Our car finds a path to get there.
[00:31:00.000 --> 00:31:04.000]   And you can run these things together to get, like, a good behavior.
[00:31:04.000 --> 00:31:06.000]   It doesn't always go well.
[00:31:06.000 --> 00:31:09.000]   Let me show you what doesn't work in this kind of -- yeah.
[00:31:09.000 --> 00:31:26.000]   [ Inaudible ]
[00:31:26.000 --> 00:31:30.000]   Yeah, so we had, like, honestly -- so here are a couple of honest things.
[00:31:30.000 --> 00:31:34.000]   So we had -- one thing is that we had a pretty good simulation system going.
[00:31:34.000 --> 00:31:36.000]   For motion planning and things like that, it helped a lot.
[00:31:36.000 --> 00:31:44.000]   Like, on the day of the -- on the -- sort of, like, the day before the race, my 24/7 job was to keep simulating our algorithms.
[00:31:44.000 --> 00:31:48.000]   Like, I had two computers, kind of start simulation here, start there, look at it.
[00:31:48.000 --> 00:31:51.000]   If one fails, log it and send it out.
[00:31:51.000 --> 00:31:53.000]   So simulation really helped.
[00:31:53.000 --> 00:32:02.000]   We had done some testing, but I don't think we actually -- I think the race itself was the furthest that we had driven without any human intervention.
[00:32:02.000 --> 00:32:04.000]   Like, before then, we hadn't done that much.
[00:32:04.000 --> 00:32:06.000]   I think this was, like, 60 miles.
[00:32:06.000 --> 00:32:12.000]   If I remember this correctly, we had done, like, a 20-mile stretch or something like that, but we hadn't done as many.
[00:32:12.000 --> 00:32:18.000]   So admittedly, we didn't have too much on the testing front going.
[00:32:18.000 --> 00:32:22.000]   The only reason why was because it's just we didn't have time to do this kind of thing.
[00:32:22.000 --> 00:32:32.000]   We -- so, I mean, we started maybe a year before that we put together some of the infrastructure, like, this message sending and things like that.
[00:32:32.000 --> 00:32:38.000]   But the vehicle itself, to test it in reality, the vehicle -- I think the race was in November.
[00:32:38.000 --> 00:32:45.000]   We probably got this vehicle -- I mean, we had another vehicle before, but we got this one clean, I think it was April.
[00:32:45.000 --> 00:32:47.000]   And then we put the sensors on or something like that.
[00:32:47.000 --> 00:32:53.000]   So really, it was just the summertime that we had to test, and admittedly, we couldn't test much.
[00:32:53.000 --> 00:32:56.000]   And Draper Laboratory helped out a lot with the testing.
[00:32:56.000 --> 00:32:59.000]   If we didn't have that, we probably wouldn't test any.
[00:32:59.000 --> 00:33:02.000]   So we would probably just kind of fail outright or something.
[00:33:02.000 --> 00:33:04.000]   In this kind of thing, testing is very important.
[00:33:04.000 --> 00:33:06.000]   It will be very important for future as well.
[00:33:06.000 --> 00:33:08.000]   Simulation will be very important.
[00:33:08.000 --> 00:33:10.000]   Simulation has come a long way, actually.
[00:33:10.000 --> 00:33:13.000]   Like, nowadays, you can -- I mean, you guys are working with simulators, you can see,
[00:33:13.000 --> 00:33:18.000]   but there's a lot of other things that people are going to put out in the next year or two.
[00:33:18.000 --> 00:33:26.000]   And, you know, like, we can nowadays render things that you can show it to people, and it's very hard to -- like, people don't see that it's a rendering.
[00:33:26.000 --> 00:33:43.000]   [ Inaudible ]
[00:33:43.000 --> 00:33:45.000]   Ours wasn't back then.
[00:33:45.000 --> 00:33:47.000]   I think that would be probably the right thing to do right now.
[00:33:47.000 --> 00:33:53.000]   But back then, we had this one platform that, you know, you could just run the whole software stack.
[00:33:53.000 --> 00:33:58.000]   But if you start up a simulator, it would actually simulate all the sensor data and everything.
[00:33:58.000 --> 00:34:05.000]   If you don't start a simulator, then the processes will be waiting for the data to come in, so you could put it on a real vehicle or something.
[00:34:05.000 --> 00:34:08.000]   So back then, we thought that would be the best thing to do.
[00:34:08.000 --> 00:34:10.000]   [ Inaudible ]
[00:34:10.000 --> 00:34:17.000]   The question was, was your simulated environment and your development environment separate or integrated?
[00:34:17.000 --> 00:34:19.000]   They were very integrated.
[00:34:19.000 --> 00:34:22.000]   Right now, I think you would do things differently.
[00:34:22.000 --> 00:34:24.000]   Any other questions?
[00:34:24.000 --> 00:34:34.000]   Yeah, there's kind of a lot to talk about, so I thought that it would be just kind of great to give you guys some ideas, given the course in autonomous vehicles.
[00:34:34.000 --> 00:34:38.000]   So here's an example of a case that we got into.
[00:34:38.000 --> 00:34:43.000]   So what's happening here is we arrive at an intersection, and there's another car.
[00:34:43.000 --> 00:34:48.000]   It's Cornell's car, and they're just sitting right in the middle of the intersection, and they don't seem to be moving.
[00:34:48.000 --> 00:34:51.000]   I think they've been sitting there for a few minutes before we even arrived.
[00:34:51.000 --> 00:35:06.000]   So DARPA decided that they should let us go, and we're probably going to take over, and we'll do great, and it's going to be an important moment in robotics history, that for the first time, you know, a robot takes over another robot while the other robot is stuck, and it's going to be great.
[00:35:06.000 --> 00:35:08.000]   So they decide to go forward with this.
[00:35:08.000 --> 00:35:11.000]   So here is how we're seeing things from inside our car.
[00:35:11.000 --> 00:35:14.000]   Our car is right here, wants to go there.
[00:35:14.000 --> 00:35:15.000]   RRT generates trajectories.
[00:35:15.000 --> 00:35:16.000]   There's an object here.
[00:35:16.000 --> 00:35:17.000]   That's the car that we're seeing.
[00:35:17.000 --> 00:35:20.000]   We're not seeing all of it, but we're seeing enough fraction of it.
[00:35:20.000 --> 00:35:24.000]   So we're going to play it a little bit.
[00:35:24.000 --> 00:35:29.000]   So, you know, like, we're actually able to turn around it, so I think I need to stop it somewhere, but let's look at here.
[00:35:29.000 --> 00:35:31.000]   So we've seen the whole car.
[00:35:31.000 --> 00:35:34.000]   The new goal point is further away.
[00:35:34.000 --> 00:35:35.000]   We're generating these trajectories.
[00:35:35.000 --> 00:35:37.000]   It looks great.
[00:35:37.000 --> 00:35:42.000]   It turns out that this car is just somehow stuck for some reason, so we wrote a paper together with them.
[00:35:42.000 --> 00:35:55.000]   It's not unclear to them either, but my understanding is that they think that the obstacle is on top of the car, and the way the algorithm is written is it just kind of generates a trajectory and asks if this trajectory is collision-free or not.
[00:35:55.000 --> 00:35:56.000]   Right?
[00:35:56.000 --> 00:36:00.000]   The collision checker doesn't say this part of the trajectory is in collision.
[00:36:00.000 --> 00:36:06.000]   It's just every time it passes that trajectory, because the route is in collision, it just says, you know, there's nothing there.
[00:36:06.000 --> 00:36:12.000]   They have another little piece where it just updates the map every time there's new information from the sensors.
[00:36:12.000 --> 00:36:15.000]   If there's no new information, there's no need to update.
[00:36:15.000 --> 00:36:20.000]   So they ended up getting stuck on this obstacle, and they're not refreshing their map because nothing is moving.
[00:36:20.000 --> 00:36:26.000]   Up until we move right next to them, they refresh again, and they say, oh, I'm actually not sitting on an obstacle.
[00:36:26.000 --> 00:36:28.000]   That was an error.
[00:36:28.000 --> 00:36:31.000]   So next time the path comes going forward, it says this is a great path.
[00:36:31.000 --> 00:36:33.000]   Go forward with it.
[00:36:33.000 --> 00:36:41.000]   That happens right when we're passing, so if you look at this blob right now as I play it, the blob starts to move.
[00:36:41.000 --> 00:36:45.000]   So they are going in a direction that we are going.
[00:36:45.000 --> 00:36:47.000]   A quick thing will happen.
[00:36:47.000 --> 00:37:01.000]   So if our car at some point realizes that there's no paths, a collision is imminent, and there's nothing to do about it, it generates, it shows that white circle around it.
[00:37:01.000 --> 00:37:05.000]   And that basically means that we are headed to a crash.
[00:37:05.000 --> 00:37:07.000]   There's nothing we can do about it.
[00:37:07.000 --> 00:37:11.000]   We're just going to slam the brakes and hope not too bad things happen.
[00:37:11.000 --> 00:37:13.000]   So it starts to do that.
[00:37:13.000 --> 00:37:16.000]   I think at this time this camera is more fun to look at.
[00:37:16.000 --> 00:37:20.000]   You can kind of take a look at it and sort of see what happened.
[00:37:20.000 --> 00:37:22.000]   And so this kind of like collision happens.
[00:37:22.000 --> 00:37:24.000]   We collide with the car.
[00:37:24.000 --> 00:37:29.000]   DARPA, what they did is that they actually pulled the Cornell car back.
[00:37:29.000 --> 00:37:30.000]   They started us.
[00:37:30.000 --> 00:37:31.000]   We finished.
[00:37:31.000 --> 00:37:32.000]   They finished as well.
[00:37:32.000 --> 00:37:34.000]   So both of the teams finished.
[00:37:34.000 --> 00:37:36.000]   But you can see some of the things that are a little bit hard.
[00:37:36.000 --> 00:37:45.000]   For example, if you yourself were to arrive at an intersection that there's a car that's sitting there, you probably would stop your car, take out, go and ask if there's anything wrong.
[00:37:45.000 --> 00:37:52.000]   Even if you don't do that, suppose you're not very decent of a human being, you decide not to do that, you would still steer away from that car.
[00:37:52.000 --> 00:37:55.000]   You probably wouldn't get as close to this car as we did.
[00:37:55.000 --> 00:38:00.000]   So there are some problems that are at the inference level that we do without even thinking.
[00:38:00.000 --> 00:38:04.000]   And it's actually kind of hard things for these types of cars to do.
[00:38:04.000 --> 00:38:11.000]   Especially if you're going fast, you're in a complicated environment, you're not expecting things, and you might collide into things.
[00:38:11.000 --> 00:38:15.000]   We do different kinds of inference that we can't even name.
[00:38:15.000 --> 00:38:18.000]   But, you know, you look at the way a person walks on the sidewalk.
[00:38:18.000 --> 00:38:24.000]   And you can say, "Oh, you know, this person is kind of dangerous," or maybe you will walk into the street or not.
[00:38:24.000 --> 00:38:25.000]   You know, you make that decision.
[00:38:25.000 --> 00:38:30.000]   And it's actually a pretty complicated thing for a robot to do.
[00:38:30.000 --> 00:38:33.000]   Okay, so, you know, this is kind of like the results of the race.
[00:38:33.000 --> 00:38:35.000]   I'm not going to go too much into it.
[00:38:35.000 --> 00:38:38.000]   Basically, the idea is that 89 people started, 6 finished.
[00:38:38.000 --> 00:38:40.000]   We were one of the finishers.
[00:38:40.000 --> 00:38:44.000]   CMU came first, so they got the $2 million check, I believe.
[00:38:44.000 --> 00:38:46.000]   Stanford came second, they got a $1 million check.
[00:38:46.000 --> 00:38:49.000]   Virginia Tech came third, they got half a million.
[00:38:49.000 --> 00:38:51.000]   We came fourth, we didn't get any money.
[00:38:51.000 --> 00:38:53.000]   But, you know, we got a lot of experience.
[00:38:53.000 --> 00:38:55.000]   It was great to be a part of it, I think.
[00:38:55.000 --> 00:39:03.000]   One note is that the Google car that you may have heard a lot was essentially sort of like a spin-off from this race.
[00:39:03.000 --> 00:39:07.000]   So if you look at the Google car, you will see that the sensing package is very similar.
[00:39:07.000 --> 00:39:09.000]   It's very laser scanner oriented.
[00:39:09.000 --> 00:39:13.000]   It has a couple of radars on it that it could utilize.
[00:39:13.000 --> 00:39:17.000]   And it's working somewhat with the cameras, but not so much.
[00:39:17.000 --> 00:39:22.000]   Essentially, Google engineered this thing that we built, or all the other teams built independently.
[00:39:22.000 --> 00:39:27.000]   They engineered it for 10 years, and that's the kind of thing that they utilize nowadays.
[00:39:27.000 --> 00:39:34.000]   There's also like this whole Tesla brand of camera-based cars, of deep learning and so on, that's coming in just very recently.
[00:39:34.000 --> 00:39:40.000]   Back 10 years ago, you know, we knew about deep learning and so on, but it just didn't work.
[00:39:40.000 --> 00:39:46.000]   The moment somebody figured out doing it on a GPU, it started working pretty well.
[00:39:46.000 --> 00:39:55.000]   Okay, so there's a lot I can tell you about path planning, but I think here is kind of maybe what I should do if you do not mind.
[00:39:55.000 --> 00:40:00.000]   Rather than telling you about RRTs and making this into a lecture that I'm not sure if you're going to like it,
[00:40:00.000 --> 00:40:07.000]   let me talk maybe a little bit more about self-driving vehicles, and I think that's something that we might enjoy better.
[00:40:07.000 --> 00:40:15.000]   [Audience member] Great question. So in one year, you built a self-driving car from scratch.
[00:40:15.000 --> 00:40:28.000]   It's a relatively small team. So the question is, what was the biggest challenge?
[00:40:28.000 --> 00:40:32.000]   [Slovenian] So the question is sort of building it from scratch, what was the biggest challenge?
[00:40:32.000 --> 00:40:37.000]   So I'm going to say, admittedly, I was a junior student back then.
[00:40:37.000 --> 00:40:41.000]   So my challenge was to get these controllers and some parts of the RRT working,
[00:40:41.000 --> 00:40:45.000]   and I had simulation systems and things like that, and life was good for me.
[00:40:45.000 --> 00:40:51.000]   I would think that, I mean, we ended up building pretty complicated hardware, so that was one of the challenges.
[00:40:51.000 --> 00:40:57.000]   And that probably all in college, Draper, you know, they did all of that, that was great.
[00:40:57.000 --> 00:41:00.000]   The other challenge that we had is that nowadays there's like, maybe you guys use it,
[00:41:00.000 --> 00:41:04.000]   like robot operating system and so on, that infrastructure software.
[00:41:04.000 --> 00:41:07.000]   We had none of that, so we ended up building our own.
[00:41:07.000 --> 00:41:13.000]   I don't know if anybody uses, but there's this thing called Lightweight Communications and Marshalling, LCM.
[00:41:13.000 --> 00:41:18.000]   So that ended up being built for this, and it just kind of got spun out.
[00:41:18.000 --> 00:41:21.000]   That was another big challenge that we actually faced.
[00:41:21.000 --> 00:41:27.000]   So LCM nowadays is utilized throughout the industry, like for example, Ford autonomous cars will use it,
[00:41:27.000 --> 00:41:31.000]   Toyota will use it, Nutonomy uses it.
[00:41:31.000 --> 00:41:37.000]   So it ended up coming out of this challenge, and it was probably like the first, you know,
[00:41:37.000 --> 00:41:42.000]   I would say the first six, seven months was kind of devoted to it, and for necessity.
[00:41:42.000 --> 00:41:46.000]   I mean, we just, we wanted to do other things, but we just couldn't, because you needed something like this.
[00:41:46.000 --> 00:41:50.000]   So that was another big challenge, I would say.
[00:41:50.000 --> 00:41:55.000]   Testing was a big challenge, things like that.
[00:41:55.000 --> 00:42:01.000]   So back then in the urban challenge days, it seemed like people were pretty collaborative,
[00:42:01.000 --> 00:42:04.000]   as far as working on autonomous vehicles goes.
[00:42:04.000 --> 00:42:10.000]   You publish papers, you publish a paper with, for the collision of a team and things like that.
[00:42:10.000 --> 00:42:17.000]   But now it seems like autonomous vehicles are becoming much more isolated, like different companies competing and not collaborating.
[00:42:17.000 --> 00:42:21.000]   Is that going to be good, or is that going to be like, you know?
[00:42:21.000 --> 00:42:25.000]   Yeah, I mean, well, I guess it's good and bad. It's kind of hard to assess.
[00:42:25.000 --> 00:42:27.000]   So competition is always good.
[00:42:27.000 --> 00:42:33.000]   So the question was that, you know, back in the day we were really collaborative.
[00:42:33.000 --> 00:42:37.000]   Like it's very interesting that we actually wrote a paper with Cornell about our collision,
[00:42:37.000 --> 00:42:41.000]   just to teach the whole community why these kind of things happen.
[00:42:41.000 --> 00:42:46.000]   But nowadays, like everybody is just kind of doing their own thing, and there's no kind of going out.
[00:42:46.000 --> 00:42:51.000]   There's a quick answer for that, and there's a kind of a broader answer.
[00:42:51.000 --> 00:42:54.000]   So the quick answer is that, yeah, I mean, it became important.
[00:42:54.000 --> 00:42:57.000]   There's a lot of, you know, sort of people invested a lot of money,
[00:42:57.000 --> 00:43:01.000]   and they are expecting returns and things like that, and that affects the environment.
[00:43:01.000 --> 00:43:03.000]   That definitely drove it.
[00:43:03.000 --> 00:43:07.000]   I think we're still, you know, trying to work on it in academia and trying to publish papers.
[00:43:07.000 --> 00:43:13.000]   But a lot of people are, you know, worried about competing with these huge companies and things like that,
[00:43:13.000 --> 00:43:18.000]   which I think is not a big worry because there's a lot to do still.
[00:43:18.000 --> 00:43:21.000]   So when you look at the industry, there's little competition.
[00:43:21.000 --> 00:43:25.000]   But that, for some reason, the broader answer is that that became an orn.
[00:43:25.000 --> 00:43:30.000]   So back 50 years ago, you would look at the top company of the day.
[00:43:30.000 --> 00:43:34.000]   This is like starting from a century ago, like with Bell, for example.
[00:43:34.000 --> 00:43:37.000]   They would form labs, and they would publish, and they'd do science and things like that.
[00:43:37.000 --> 00:43:39.000]   It would be very open.
[00:43:39.000 --> 00:43:46.000]   And nowadays, the big companies of the day, they kind of rather prefer secretive labs and things like that.
[00:43:46.000 --> 00:43:52.000]   So that--I think Microsoft was the last big company of the day to do that.
[00:43:52.000 --> 00:43:56.000]   Nowadays, Google and Apple and things like that, they don't do that anymore.
[00:43:56.000 --> 00:44:00.000]   There's a bit of that as well, good or bad.
[00:44:00.000 --> 00:44:02.000]   But it became that way.
[00:44:02.000 --> 00:44:04.000]   And sometimes competition is good, honestly.
[00:44:04.000 --> 00:44:12.000]   It's a good thing that people feel like you don't know what the others are doing, and you want to compete.
[00:44:12.000 --> 00:44:16.000]   So that makes you better and better, even though the others maybe are not.
[00:44:16.000 --> 00:44:18.000]   I don't know.
[00:44:18.000 --> 00:44:20.000]   Okay, any other questions?
[00:44:20.000 --> 00:44:21.000]   Yeah.
[00:44:21.000 --> 00:44:44.000]   [Question]
[00:44:44.000 --> 00:44:52.000]   I don't think it's purely an industry problem, because it's still kind of--it's quite complicated, honestly.
[00:44:52.000 --> 00:44:59.000]   So there may be things that people can do, but I am wondering if DARPA would be interested in doing a challenge.
[00:44:59.000 --> 00:45:02.000]   So let's set DARPA aside differently and research otherwise.
[00:45:02.000 --> 00:45:08.000]   Like when you think about DARPA, DARPA is a defense agency, and when they thought about the challenge,
[00:45:08.000 --> 00:45:11.000]   they had, honestly, defense problems in mind.
[00:45:11.000 --> 00:45:16.000]   For example, they didn't allow you to go around and drive in the area with your sensors.
[00:45:16.000 --> 00:45:21.000]   The idea was that they would give you a map of the environment 24 hours in advance,
[00:45:21.000 --> 00:45:26.000]   and then five minutes before, they would give you a mission, like hit this waypoint, hit that waypoint, and so on.
[00:45:26.000 --> 00:45:28.000]   So that's a military setting.
[00:45:28.000 --> 00:45:34.000]   They were really--the whole thing started with the U.S. Congress mandate to get, you know,
[00:45:34.000 --> 00:45:38.000]   one-third of combat vehicles autonomous by 2015, which didn't happen.
[00:45:38.000 --> 00:45:41.000]   But it was a more military setting.
[00:45:41.000 --> 00:45:46.000]   So DARPA is usually sort of debt-minded, and they did the DARPA robot challenge.
[00:45:46.000 --> 00:45:49.000]   The current thing is a thing called fast lightweight autonomy.
[00:45:49.000 --> 00:45:57.000]   So the idea is to build a quadcopter that can fly here 20 meters a second, like 40 miles an hour, in indoor environments type of thing.
[00:45:57.000 --> 00:45:59.000]   I think they'll do that, but there may be other things.
[00:45:59.000 --> 00:46:04.000]   Like there may be other, you know, people kind of coming in, pushing the boundary of research.
[00:46:04.000 --> 00:46:07.000]   Like something, for example, just with cameras would be very interesting.
[00:46:07.000 --> 00:46:15.000]   And I think we are just in a--we may be a couple years away from doing that very well, I think.
[00:46:15.000 --> 00:46:19.000]   And probably deep learning would be a lot of it.
[00:46:19.000 --> 00:46:25.000]   Okay, so I don't have much time, and I don't want to hold you here, but sort of, you know,
[00:46:25.000 --> 00:46:28.000]   let me tell you a few things about autonomous cars in general,
[00:46:28.000 --> 00:46:34.000]   and let's see if we can--you know, in like 10 minutes, we can fit something interesting.
[00:46:34.000 --> 00:46:36.000]   Transportation is a very interesting thing.
[00:46:36.000 --> 00:46:39.000]   It actually defines how you live quite a bit.
[00:46:39.000 --> 00:46:46.000]   So if you look at, for example, the kind of cities that, you know, many of you may be living in today, they look like this.
[00:46:46.000 --> 00:46:49.000]   And they are produced thanks to one invention.
[00:46:49.000 --> 00:46:53.000]   That was the affordable car, which was about a century ago.
[00:46:53.000 --> 00:46:58.000]   If you look at it, you know, throughout the last century, like in 1950s, cars were big,
[00:46:58.000 --> 00:47:03.000]   and you would find, you know, that everywhere these kind of subways were being constructed for the first time.
[00:47:03.000 --> 00:47:08.000]   The reason was cities were dirty, they were disease-prone, so now you had the car,
[00:47:08.000 --> 00:47:12.000]   you could move away into a better living lifestyle, and it would improve it,
[00:47:12.000 --> 00:47:15.000]   and that was the 20th century invention that you had.
[00:47:15.000 --> 00:47:17.000]   It also changed the cities quite a bit.
[00:47:17.000 --> 00:47:24.000]   I mean, like, for example, this is Boston's sort of central artery that was built in, you know, '50s,
[00:47:24.000 --> 00:47:30.000]   at around that time, to kind of service the cars coming in and out of the city.
[00:47:30.000 --> 00:47:34.000]   The cars kind of generated this kind of thing, you know, in some places at the extreme,
[00:47:34.000 --> 00:47:39.000]   like if you go to places like Los Angeles in the United States, you would see the suburban sprawl.
[00:47:39.000 --> 00:47:44.000]   It's very different in other places, so places that didn't have the time to expand,
[00:47:44.000 --> 00:47:50.000]   that didn't have the resources to expand, or just didn't have the place to expand, it caused many problems.
[00:47:50.000 --> 00:47:53.000]   Like here is the suburbia in Mexico City.
[00:47:53.000 --> 00:47:56.000]   You can see the dirt that it generates in the distance.
[00:47:56.000 --> 00:47:59.000]   Even if you're rich, it doesn't really matter.
[00:47:59.000 --> 00:48:03.000]   You know, even in rich countries, this quick expansion, it just doesn't work,
[00:48:03.000 --> 00:48:07.000]   and it creates, if anything, just ugly environments.
[00:48:07.000 --> 00:48:13.000]   And in some places, it creates, like you need to be dense, and you need to be big,
[00:48:13.000 --> 00:48:19.000]   and so you have the cars, but you just have to build, you know, big buildings that you cannot even serve with cars.
[00:48:19.000 --> 00:48:24.000]   So it generates these type of things where, you know, like there's a--I think it's probably my--
[00:48:24.000 --> 00:48:28.000]   I was just going to say it only led to congestion and pollution in the rest of the world,
[00:48:28.000 --> 00:48:32.000]   it generated these kind of things where--I don't know if you heard, there was a traffic jam in China.
[00:48:32.000 --> 00:48:35.000]   It lasted like nine days, and it was 100 miles long.
[00:48:35.000 --> 00:48:37.000]   So it generated this kind of thing.
[00:48:37.000 --> 00:48:44.000]   It's just a quick introduction of the affordable car, sort of what it did to the environment in the cities there.
[00:48:44.000 --> 00:48:48.000]   So pollution is one problem and so on, but if you look through it,
[00:48:48.000 --> 00:48:53.000]   it's actually pollution and energy consumption-wise, a lot of it comes from the cars,
[00:48:53.000 --> 00:48:57.000]   especially inside the cities.
[00:48:57.000 --> 00:49:00.000]   An interesting point is that if you look through the cars,
[00:49:00.000 --> 00:49:06.000]   the cars are actually pretty inefficient the way they sort of sit currently.
[00:49:06.000 --> 00:49:12.000]   If you look through, for example, BMWs over the years, you would see that they get heavier and they get faster.
[00:49:12.000 --> 00:49:13.000]   This is very correlated.
[00:49:13.000 --> 00:49:18.000]   If you get faster, you have to become heavier because you have to pass crash tests and things like that,
[00:49:18.000 --> 00:49:21.000]   so you know you're--in order just to be faster.
[00:49:21.000 --> 00:49:25.000]   So in order to pass the crash test, you build structure and things like that,
[00:49:25.000 --> 00:49:28.000]   and that makes the vehicle heavier ultimately.
[00:49:28.000 --> 00:49:33.000]   So like a BMW that you would buy in the '70s would weigh something like 2,500 pounds.
[00:49:33.000 --> 00:49:38.000]   Nowadays, it's like 4,000 pounds roughly.
[00:49:38.000 --> 00:49:42.000]   So it would--if you look at the average passenger weight that it's carrying,
[00:49:42.000 --> 00:49:47.000]   it's about 25 times the weight of the passengers, and the size as well.
[00:49:47.000 --> 00:49:51.000]   It's about 10 times the size of the passengers that it carries.
[00:49:51.000 --> 00:49:56.000]   In terms of parking spots, if you look through the cities, there are places in the--
[00:49:56.000 --> 00:50:00.000]   usually what we have in the United States is that for every car, we have two parking spots.
[00:50:00.000 --> 00:50:02.000]   So roughly that's the number.
[00:50:02.000 --> 00:50:05.000]   In some places, parking spots take up like half the city.
[00:50:05.000 --> 00:50:06.000]   So for example, in LA.
[00:50:06.000 --> 00:50:10.000]   On average, it's about one-third.
[00:50:10.000 --> 00:50:13.000]   So you might ask the question like this is the kind of thing,
[00:50:13.000 --> 00:50:18.000]   this is the kind of environment that cities created, and do you really want to live in this type of environment?
[00:50:18.000 --> 00:50:20.000]   And the answer is to kind of give you the idea.
[00:50:20.000 --> 00:50:26.000]   I mean if you walk out, a lot of the infrastructure, a lot of the things that you see are made by cars.
[00:50:26.000 --> 00:50:30.000]   Like for instance--and it really kind of interferes with your thinking as well.
[00:50:30.000 --> 00:50:34.000]   So for instance, we never walk on the street nowadays.
[00:50:34.000 --> 00:50:35.000]   Like nobody jaywalks.
[00:50:35.000 --> 00:50:37.000]   Streets are for cars.
[00:50:37.000 --> 00:50:39.000]   Like cars go on the streets, and we go on the sidewalk.
[00:50:39.000 --> 00:50:41.000]   It wasn't like that 100 years ago.
[00:50:41.000 --> 00:50:43.000]   You could walk on the streets however you wanted.
[00:50:43.000 --> 00:50:45.000]   Cars came in, and they took it over.
[00:50:45.000 --> 00:50:48.000]   So it really changed the urban landscape quite a bit.
[00:50:48.000 --> 00:50:58.000]   The point is that it seems like there's an opportunity today to actually kind of use 21st century technologies.
[00:50:58.000 --> 00:51:04.000]   This could be robotics, but a number of other things like online services, new business models, and things like that, and so on.
[00:51:04.000 --> 00:51:06.000]   Maybe high-performance computer or whatever.
[00:51:06.000 --> 00:51:11.000]   And to kind of service the needs of people in the cities.
[00:51:11.000 --> 00:51:16.000]   [Unintelligible]
[00:51:16.000 --> 00:51:17.000]   I'm not sure.
[00:51:17.000 --> 00:51:20.000]   I don't think the kind of the service aspects of it goes away.
[00:51:20.000 --> 00:51:27.000]   So you will need to--my guess what would happen is that I think people could be more mobile.
[00:51:27.000 --> 00:51:30.000]   So I think they want to be more mobile, but they're just not.
[00:51:30.000 --> 00:51:33.000]   If it was very accessible, very easy, I think they would be.
[00:51:33.000 --> 00:51:37.000]   So there would be an increase in being mobile.
[00:51:37.000 --> 00:51:41.000]   But at the same time, resources are spent on it.
[00:51:41.000 --> 00:51:43.000]   You need to pay for it somehow.
[00:51:43.000 --> 00:51:48.000]   So you would still generate economic activity off of that.
[00:51:48.000 --> 00:51:51.000]   In fact, you would probably generate more economic activity.
[00:51:51.000 --> 00:51:58.000]   For example, the moment you change people's behavior, there's the way that you generate a new economic activity.
[00:51:58.000 --> 00:52:05.000]   So if there's a way, for example, transportation is more available, more affordable, and it changes their behavior, it makes you more mobile.
[00:52:05.000 --> 00:52:11.000]   Like, for example, you're fine with having a class here and then 20 minutes later having a class at Harvard.
[00:52:11.000 --> 00:52:13.000]   Nobody would do that nowadays.
[00:52:13.000 --> 00:52:15.000]   But if it was that easy to get there, you would probably do it.
[00:52:15.000 --> 00:52:17.000]   And so that would make you more mobile.
[00:52:17.000 --> 00:52:22.000]   And that's the way, ultimately, it would generate more economic activity rather than buying cars.
[00:52:22.000 --> 00:52:23.000]   I mean, the service is still there.
[00:52:23.000 --> 00:52:28.000]   You need to pay for it somehow.
[00:52:28.000 --> 00:52:30.000]   Any other questions?
[00:52:30.000 --> 00:52:35.000]   So the point is that you can use these type of technologies to do, for example, like mobility on demand.
[00:52:35.000 --> 00:52:41.000]   Whenever you need to be mobile, you can be mobile, or deliver things and so on.
[00:52:41.000 --> 00:52:53.000]   And I think that -- let me just kind of -- I was going to tell you a bit of the history, but I think that I'm just going to pass it and tell you a few things.
[00:52:53.000 --> 00:52:59.000]   So autonomous vehicles are sort of one thing that you can utilize and you can actually do these types of things.
[00:52:59.000 --> 00:53:01.000]   I think you can make this even better.
[00:53:01.000 --> 00:53:04.000]   Like, for example, you can integrate a few things into it.
[00:53:04.000 --> 00:53:06.000]   One thing, you can integrate sharing.
[00:53:06.000 --> 00:53:08.000]   So you can make it in an Uber-type scenario.
[00:53:08.000 --> 00:53:10.000]   You can use autonomy as well.
[00:53:10.000 --> 00:53:21.000]   And finally, like electrification, especially if you're going a little bit slower so you don't have to pass crash tests and things like that, you could really reduce the cost of transportation.
[00:53:21.000 --> 00:53:31.000]   Like to the point where you could imagine things like -- like you could go from anywhere to anywhere else for 99 cents in Boston with like five-minute wait time.
[00:53:31.000 --> 00:53:34.000]   If you want to share your ride, it could be 50 cents.
[00:53:34.000 --> 00:53:39.000]   If you want to admit to like one stop, a lot of us do one stop.
[00:53:39.000 --> 00:53:41.000]   You know, you can take a subway and then take a bus.
[00:53:41.000 --> 00:53:47.000]   One stop makes your transportation much cheaper if you were to take an airplane.
[00:53:47.000 --> 00:53:53.000]   Suppose if you wanted to take one stop, you could pay 30 cents and you could go anywhere to anywhere else in Boston.
[00:53:53.000 --> 00:54:08.000]   I think there's a good opportunity to kind of, you know, push for things and utilize technology to bring the cost of transportation to a point or availability of transportation to a point to like really just change a lot of things.
[00:54:08.000 --> 00:54:10.000]   It's not very easy.
[00:54:10.000 --> 00:54:16.000]   The way I usually look at the technological landscape is that you can imagine sort of speed versus complexity.
[00:54:16.000 --> 00:54:20.000]   Speed is the speed of the vehicle that's being involved, that's involved in this.
[00:54:20.000 --> 00:54:24.000]   And maybe complexity is the complexity of the environment that you're dealing with.
[00:54:24.000 --> 00:54:28.000]   Like you can have high-speed, low-complexity environments like highways.
[00:54:28.000 --> 00:54:30.000]   They're actually easy to work with.
[00:54:30.000 --> 00:54:34.000]   We might actually conquer them like in the next, I don't know, three years or something like that.
[00:54:34.000 --> 00:54:44.000]   Another thing would be like, for example, parks or university campuses or something much slower, but much more complex like people walking around and things like that.
[00:54:44.000 --> 00:54:54.000]   Fully autonomous driving is probably pretty far, but there is some opportunity to do some interesting things elsewhere very quickly.
[00:54:54.000 --> 00:55:00.000]   One of the problems is that this is not just a technology problem, to be honest.
[00:55:00.000 --> 00:55:07.000]   As you have seen earlier, there's a lot of involvement in like, for example, architecture, like how do you actually utilize the city of the best and so on.
[00:55:07.000 --> 00:55:13.000]   One of the biggest problems ends up being this law and insurance and regulations aspects.
[00:55:13.000 --> 00:55:23.000]   There are good or bad things, like for example, sometimes you allow by the law to be able to do certain things, but then is it really like, is it a safety hazard?
[00:55:23.000 --> 00:55:27.000]   Is it even ethical to kind of allow people to just kind of test stuff around?
[00:55:27.000 --> 00:55:31.000]   So it's a bit of a question, like whether or not this is the kind of thing.
[00:55:31.000 --> 00:55:40.000]   I think sort of going forward, if I could say one thing to you guys is that this is just not like just a problem in sort of technology,
[00:55:40.000 --> 00:55:47.000]   but it's also like a problem in technology, sort of society, policy, architecture, law, insurance, and business as well.
[00:55:47.000 --> 00:55:49.000]   Like you may need new business models and so on.
[00:55:49.000 --> 00:56:02.000]   So I personally think that it's right out there, but I think that we still need just a bit of more, like a better thinking to do to be able to attack this problem
[00:56:02.000 --> 00:56:08.000]   and to really kind of enable it so that you can kind of do good and interesting things with it.
[00:56:08.000 --> 00:56:11.000]   I might, I could close with a couple things.
[00:56:11.000 --> 00:56:17.000]   One thing is that I was going to talk a little bit more, but maybe I'll just kind of pass with one slide.
[00:56:17.000 --> 00:56:19.000]   I am a part of a new company.
[00:56:19.000 --> 00:56:23.000]   I've done a few companies outside, so this is the latest thing that we've been working on.
[00:56:23.000 --> 00:56:25.000]   It's called Optimus Ride.
[00:56:25.000 --> 00:56:27.000]   It's working on autonomous vehicles.
[00:56:27.000 --> 00:56:29.000]   It's currently in stealth mode.
[00:56:29.000 --> 00:56:37.000]   It just raised like a little more than $5 million in seed round to kind of start its operations.
[00:56:37.000 --> 00:56:41.000]   I am joined, the founding team includes a number of sort of friends.
[00:56:41.000 --> 00:56:47.000]   Ryan Chin, for example, I don't know if you guys have heard of the MIT City Car, the Spalding Car.
[00:56:47.000 --> 00:56:49.000]   That was his doctoral thesis.
[00:56:49.000 --> 00:56:51.000]   He's been an MIT PI for a while.
[00:56:51.000 --> 00:56:53.000]   He joined Optimus.
[00:56:53.000 --> 00:56:57.000]   Albert Huang is a friend of mine who we worked together in the Urban Challenge.
[00:56:57.000 --> 00:57:02.000]   He was later a sort of a chief architect, software architect at Rethink Robotics,
[00:57:02.000 --> 00:57:08.000]   then the lead perception engineer at Google X for Project Wing, and then he joined Optimus.
[00:57:08.000 --> 00:57:16.000]   Ramiro Almeida is a sort of a designer, so he's a lay fellow from the Harvard Graduate School of Design.
[00:57:16.000 --> 00:57:18.000]   He has this lay fellowship.
[00:57:18.000 --> 00:57:23.000]   They would invite eight best mid-career designers, so he has that kind of a background.
[00:57:23.000 --> 00:57:27.000]   He also built Quito's subway system, raised $2 billion for it.
[00:57:27.000 --> 00:57:34.000]   Jenny Larios Berlin is also a joint MBA and an urban planning master's from MIT.
[00:57:34.000 --> 00:57:40.000]   She was the managing director of university campus operations of Zipcar.
[00:57:40.000 --> 00:57:44.000]   So we kind of started this kind of thing and thinking about these types of problems.
[00:57:44.000 --> 00:57:46.000]   If you're interested, send me an email.
[00:57:46.000 --> 00:57:48.000]   I would be happy to talk to you more about it.
[00:57:48.000 --> 00:57:50.000]   I also will tell you one more thing.
[00:57:50.000 --> 00:57:56.000]   I am advising a team that's trying to do Formula SAE autonomously.
[00:57:56.000 --> 00:57:58.000]   They're doing it for the first time this year.
[00:57:58.000 --> 00:58:01.000]   They're actually using a lot of deep learning type algorithms.
[00:58:01.000 --> 00:58:06.000]   I was telling them I'm not really sure if with deep learning you're going to literally win it
[00:58:06.000 --> 00:58:09.000]   because people might come with all the heuristics and things like that.
[00:58:09.000 --> 00:58:15.000]   But I think you may win it at people's hearts just that your only algorithm is deep learning or something like that.
[00:58:15.000 --> 00:58:16.000]   So they're doing that.
[00:58:16.000 --> 00:58:22.000]   If you're interested, please send an email to autonomous-fsae@mit.edu.
[00:58:22.000 --> 00:58:24.000]   They're working on a number of things.
[00:58:24.000 --> 00:58:26.000]   You're more than welcome to join them.
[00:58:26.000 --> 00:58:27.000]   Thank you so much.
[00:58:27.000 --> 00:58:28.000]   That's all I have.
[00:58:28.000 --> 00:58:29.000]   It's exactly one hour.
[00:58:29.000 --> 00:58:35.000]   [Applause]
[00:58:35.000 --> 00:58:37.000]   Yeah, sure, I'm here.
[00:58:37.000 --> 00:58:41.000]   So maybe a few questions if anybody has questions.
[00:58:41.000 --> 00:58:43.000]   So a lot of this class is about deep learning.
[00:58:43.000 --> 00:58:51.000]   And in terms of autonomous vehicles, deep learning is mostly focused on the vision sensor and cameras.
[00:58:51.000 --> 00:59:01.000]   So how far are we away from a car that safely navigates the streets of Boston without LIDAR and without any mapping?
[00:59:01.000 --> 00:59:07.000]   So purely on the sensors, using the sensors and perception.
[00:59:07.000 --> 00:59:09.000]   So it's a bit of a guess game, to be honest.
[00:59:09.000 --> 00:59:17.000]   It wasn't somewhat the slides that I kind of passed through, but I am a big believer in computer vision.
[00:59:17.000 --> 00:59:20.000]   And I do not think it's too far away.
[00:59:20.000 --> 00:59:23.000]   It just ends up being a bit of a guess game.
[00:59:23.000 --> 00:59:31.000]   But it's not -- I don't know how many of you have worked with cameras, but deep learning is one approach.
[00:59:31.000 --> 00:59:33.000]   You can also use geometric approaches.
[00:59:33.000 --> 00:59:39.000]   Like you can use a single camera and the motion of the car to build a 3D map of an environment.
[00:59:39.000 --> 00:59:41.000]   These are not too far away.
[00:59:41.000 --> 00:59:43.000]   Cameras are actually pretty good sensors.
[00:59:43.000 --> 00:59:46.000]   The only problem with cameras is that it's just a lot of data.
[00:59:46.000 --> 00:59:48.000]   And there's little information in it.
[00:59:48.000 --> 00:59:50.000]   You need to fish it out.
[00:59:50.000 --> 00:59:52.000]   So you need computers to accompany it.
[00:59:52.000 --> 00:59:55.000]   It seems like the computers are coming out.
[00:59:55.000 --> 00:59:57.000]   So it's still hard to know.
[00:59:57.000 --> 01:00:04.000]   But I would be surprised if in ten years you can't build a car that just has a bunch of cameras and navigates with cameras, period.
[01:00:04.000 --> 01:00:06.000]   It would be very surprising to me.
[01:00:06.000 --> 01:00:11.000]   It would be also surprising if it happens next year, like some people are saying.
[01:00:11.000 --> 01:00:16.000]   But in between these, I would think you would be able to.
[01:00:16.000 --> 01:00:23.000]   So once you -- like what I would suggest is if any of you is working with cameras, I would suggest deep learning is an excellent technique.
[01:00:23.000 --> 01:00:30.000]   So I think you're kind of using it here, and I'm sure you're being surprised as it gives you the kind of information that you need.
[01:00:30.000 --> 01:00:32.000]   Try out model-based techniques as well.
[01:00:32.000 --> 01:00:34.000]   They're also coming along pretty well.
[01:00:34.000 --> 01:00:42.000]   So probably a solution that just integrates them as best as possible would be viable, I would guess, in three to five years.
[01:00:42.000 --> 01:00:45.000]   I'd be surprised otherwise.
[01:00:45.000 --> 01:00:47.000]   >> I'm optimistic.
[01:00:47.000 --> 01:00:48.000]   Okay.
[01:00:48.000 --> 01:00:50.000]   Anybody have questions?
[01:00:50.000 --> 01:00:55.000]   >> Yes, the question was in autonomous intersections, what role the communication plays.
[01:00:55.000 --> 01:01:01.000]   If you wanted to do crazy things like I've shown you, you need to make sure everything communicates with everything else.
[01:01:01.000 --> 01:01:04.000]   That would break pretty badly if you don't do it.
[01:01:04.000 --> 01:01:12.000]   I would actually imagine that, like, one interesting thing to quickly do would be to have cars communicate with each other to do some interesting things,
[01:01:12.000 --> 01:01:16.000]   like not just maybe intersection but lane following and things like that.
[01:01:16.000 --> 01:01:21.000]   Like there are a few things that you may see pretty quickly with autonomous cars, like pretty quickly, I mean three to five years.
[01:01:21.000 --> 01:01:29.000]   So this could be either V2V related, so communicate with other vehicles, vehicle to infrastructure related.
[01:01:29.000 --> 01:01:35.000]   I mean you could, like, the deep learning and things like that, you could put up a camera on an infrastructure and people could tune into it.
[01:01:35.000 --> 01:01:39.000]   The biggest problems are cybersecurity, to be honest, to deploy these things.
[01:01:39.000 --> 01:01:48.000]   And on the autonomous vehicles end, you could see things like maybe not with communication, you could see either sharing, like, you know, you have a button, you press, you time share.
[01:01:48.000 --> 01:01:57.000]   Or you can have sharing with, you know, like, for example, you can use autonomy technology for safety, so that's a different type of sharing.
[01:01:57.000 --> 01:02:00.000]   Or you can find autonomous vehicles in isolated environments.
[01:02:00.000 --> 01:02:02.000]   So there's stuff that you can do with communication.
[01:02:02.000 --> 01:02:07.000]   I think you can quickly see lane following and maybe not intersections but things like that.
[01:02:07.000 --> 01:02:11.000]   With autonomy, there are certain things that we might see, but they don't involve communication at all.
[01:02:11.000 --> 01:02:14.000]   I think that's what would happen.
[01:02:14.000 --> 01:02:18.000]   All right, let's give Sartesh one more time.
[01:02:18.000 --> 01:02:21.000]   [Applause]
[01:02:21.000 --> 01:02:22.000]   Thank you.
[01:02:22.000 --> 01:02:24.500]   (audience applauding)

